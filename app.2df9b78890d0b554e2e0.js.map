{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../src/fable-library/Util.ts","webpack:///../../src/fable-library/Types.ts","webpack:///../../src/fable-library/Option.ts","webpack:///../../../src/fable-library/lib/big.js","webpack:///../../src/fable-library/Decimal.ts","webpack:///../../src/fable-library/Int32.ts","webpack:///../../../src/fable-library/lib/long.js","webpack:///../../src/fable-library/Long.ts","webpack:///../../src/fable-library/Seq.ts","webpack:///../../src/fable-library/Reflection.ts","webpack:///../../src/fable-library/Date.ts","webpack:///../../src/fable-library/RegExp.ts","webpack:///../../src/fable-library/String.ts","webpack:///./.fable/fable-library.2.10.2/MutableMap.js","webpack:///./.fable/fable-library.2.10.2/Map.js","webpack:///./.fable/fable-library.2.10.2/MutableSet.js","webpack:///./.fable/fable-library.2.10.2/Set.js","webpack:///./.fable/fable-library.2.10.2/Array.js","webpack:///./.fable/fable-library.2.10.2/List.js","webpack:///../../src/fable-library/AsyncBuilder.ts","webpack:///../../src/fable-library/Async.ts","webpack:///.fable/Fable.Elmish.3.0.6/prelude.fs","webpack:///.fable/Fable.Elmish.3.0.6/cmd.fs","webpack:///.fable/Fable.Promise.2.1.0/Promise.fs","webpack:///.fable/Fable.Elmish.3.0.6/ring.fs","webpack:///../../src/fable-library/TimeSpan.ts","webpack:///.fable/Thoth.Json.4.0.0/Encode.fs","webpack:///./.fable/fable-library.2.10.2/BigInt/n.js","webpack:///./.fable/fable-library.2.10.2/BigInt/z.js","webpack:///./.fable/fable-library.2.10.2/BigInt.js","webpack:///../../src/fable-library/DateOffset.ts","webpack:///.fable/Thoth.Json.4.0.0/Decode.fs","webpack:///.fable/Thoth.Fetch.2.0.0/Fetch.fs","webpack:///src/DependencyCollapser.fs","webpack:///src/AllenNLP.fs","webpack:///src/WordFrequency.fs","webpack:///src/Paraphrase.fs","webpack:///src/ClozeAPI.fs","webpack:///src/Triples.fs","webpack:///src/DefinitionalFeedback.fs","webpack:///src/CachedElaboratedFeedback.fs","webpack:///src/Wikifier.fs","webpack:///src/ElaboratedFeedback.fs","webpack:///src/LemmInflect.fs","webpack:///.fable/Fulma.2.8.1/Layouts/Container.fs","webpack:///src/SpellingCorrector.fs","webpack:///src/TutorialDialogue.fs","webpack:///.fable/Fulma.2.8.1/Common.fs","webpack:///.fable/Fulma.2.8.1/Elements/Form/Select.fs","webpack:///.fable/Fulma.2.8.1/Elements/Content.fs","webpack:///.fable/Fulma.2.8.1/Layouts/Section.fs","webpack:///.fable/Fulma.2.8.1/Elements/Form/Control.fs","webpack:///.fable/Fulma.2.8.1/Elements/Form/Field.fs","webpack:///.fable/Fulma.2.8.1/Elements/Form/File.fs","webpack:///.fable/Fable.FontAwesome.2.0.0/FontAwesome.fs","webpack:///.fable/Fulma.2.8.1/Elements/Icon.fs","webpack:///.fable/Fulma.2.8.1/Elements/Form/Input.fs","webpack:///.fable/Fulma.2.8.1/Layouts/Columns.fs","webpack:///.fable/Fable.React.6.2.0/Fable.React.Extensions.fs","webpack:///.fable/Fable.Elmish.React.3.0.1/common.fs","webpack:///.fable/Fable.Elmish.React.3.0.1/react.fs","webpack:///src/App.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","x","f","rm","P","e","y","Long","$this","other","fromBits","str","_a","cur","iter","rep","utc","date","getUTCHours","getHours","baseDate","flags","precision","MutableMap$00602","declare","pairs","comparer","this$","FSharpRef","this","contents","hashMap","Map","iterate","pair","MutableMap$00602$$Add$$5BDDA1","MutableMap$00602$$TryFindIndex$$2B595","this$$$1","k","h","GetHashCode","matchValue","tryGetValue","findIndex","pair$$1","Equals","MutableMap$00602$$TryFind$$2B595","this$$$2","k$$1","matchValue$$1","getItemFromDict","MutableMap$00602$$Clear","this$$$4","clear","MutableMap$00602$$get_Count","this$$$5","sumBy","pairs$$2","values","GetZero","Add","$x$$2","$y$$3","this$$$8","k$$4","v$$1","matchValue$$4","msg","format","Error","set","MutableMap$00602$$Remove$$2B595","this$$$10","k$$6","matchValue$$6","iterator","this$$$11","toIterator","getEnumerator","delay","collect","pairs$$3","map","pair$$3","item","Clear","Contains","item$$1","matchValue$$7","equals","CopyTo","array","arrayIndex","iterateIndexed","i$$10","Remove","item$$2","matchValue$$8","k$$7","entries","k$$8","this$$$6","k$$2","matchValue$$2","MutableMap$00602$$get_Item$$2B595","has","k$$9","this$$$9","k$$5","matchValue$$5","MutableMap$00602$$ContainsKey$$2B595","keys","pair$$5","k$$10","v$$2","this$$$7","k$$3","v","matchValue$$3","MutableMap$00602$$set_Item$$5BDDA1","pair$$6","MapTree$00602","tag","fields","Union","MapTreeModule$$$size","MapTreeModule$$$sizeAux","$acc$$5","$m$$6","acc","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","hl","hr","MapTreeModule$$$rebalance","t1","t2","t1h","t2h","MapTreeModule$$$add","m$$3","Compare","c$$1","MapTreeModule$$$tryFind","$comparer$$2$$26","$k$$4$$27","$m$$5$$28","comparer$$2","m$$5","some","c$$5","MapTreeModule$$$iter","$f$$6$$62","$m$$9$$63","f$$6","m$$9","MapTreeModule$$$ofSeq","comparer$$16","c$$9","ie","$comparer$$14$$97","$acc$$10$$98","$e$$99","comparer$$14","acc$$10","MoveNext","patternInput$$2","Current","MapTreeModule$$$mkFromEnumerator","isDisposable","Dispose","MapTreeModule$002EMapIterator$00602","stack","started","Record","MapTreeModule$$$collapseLHS","$stack$$111","tail","List","head","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","unfold","en$$1","i$$3","MapTreeModule$$$moveNext","Reset","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","FSharpMap$$get_IsEmpty","__$$7","FSharpMap$$get_Item$$2B595","__$$8","k$$29","$comparer$$1$$23","$k$$3$$24","$m$$4$$25","MapTreeModule$$$find","comparer$$1","m$$4","c$$3","FSharpMap$$Map$$Z6F6B671C","__$$18","f$$25","MapTreeModule$$$mapi","f$$11","m$$14","l2$$1","v2$$17","r2$$1","FSharpMap$$get_Count","__$$20","FSharpMap$$ContainsKey$$2B595","__$$21","k$$31","$comparer$$10$$59","$k$$12$$60","$m$$8$$61","MapTreeModule$$$mem","comparer$$10","k$$12","m$$8","c$$8","FSharpMap$$TryFind$$2B595","__$$23","k$$33","add","k$$37","v$$27","m$$24","k$$28","v$$24","__$$6","tryFind","k$$39","m$$26","f$$35","m$$37","toSeq","m$$40","ofList","l$$22","comparer$$18","comparer$$13","l$$20","fold$$1","acc$$9","tupledArg","ofSeq","l$$23","comparer$$19","ofArray","comparer$$20","comparer$$15","arr","res$$2","patternInput$$3","MapTreeModule$$$ofArray","toArray","m$$46","res$$6","s$$4","arr$$1","len","Array","x$$15","y$$2","empty","comparer$$21","createMutable","source$$3","comparer$$22","MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3","groupBy","projection","xs","comparer$$23","dict","iterate$$1","v$$30","map$$2","kv$$3","countBy","projection$$1","xs$$1","comparer$$24","dict$$1","value$$1","key$$1","kv$$4","toString","join","kv","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3678","structuralHash","Math","abs","that","CompareTo","obj","res$$4","finished","e1","e2","kvp1","kvp2","c$$10","compare","_arg1$$1","k$$34","k$$35","kv$$1","k$$36","v$$26","kv$$2","MutableSet$00601","items","MutableSet$00601$$Add$$2B595","MutableSet$00601$$$$002Ector$$Z6150332D","MutableSet$00601$$TryFindIndex$$2B595","MutableSet$00601$$Clear","MutableSet$00601$$get_Count","MutableSet$00601$$Contains$$2B595","MutableSet$00601$$Remove$$2B595","values$$1","value$$2","i$$8","item$$3","add_","x$$1","SetTree$00601","SetTreeModule$$$count","s$$1","SetTreeModule$$$countAux","$s$$4","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$$$height","SetTreeModule$$$mk","l$$2","r$$2","SetTreeModule$$$rebalance","SetTreeModule$$$add","t$$1","SetTreeModule$$$mem","$comparer$$4$$35","$k$$5$$36","$t$$5$$37","comparer$$4","t$$5","c$$6","SetTreeModule$$$intersection","a$$3","b$$4","SetTreeModule$$$intersectionAux","$comparer$$12$$74","$b$$3$$75","$m$$7$$76","$acc$$4$$77","comparer$$12","b$$3","m$$7","acc$$4","acc$$5","acc$$6","SetTreeModule$$$minimumElement","s$$11","$s$$7$$95","$n$$1$$96","SetTreeModule$$$minimumElementAux","n$$1","SetTreeModule$$$minimumElementOpt","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$104","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","s1","s2","$comparer$$17$$112","$l1$$113","$l2$$114","SetTreeModule$$$compareStacks","$target$$115","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","l1","l2","c$$7","SetTreeModule$$$ofSeq","c$$11","$comparer$$19$$126","$acc$$11$$127","$e$$128","acc$$11","SetTreeModule$$$mkFromEnumerator","i$$1","SetTreeModule$$$moveNext","FSharpSet","FSharpSet$$$$002Ector$$2528C5CB","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","FSharpSet$$get_Count","s$$22","FSharpSet$$Contains$$2B595","s$$23","x$$11","FSharpSet$$get_IsEmpty","s$$26","FSharpSet$$$Intersection$$Z3BE9BFE0","a$$6","b$$7","FSharpSet$$get_MinimumElement","arr$$2","comparer$$29","acc$$12","SetTreeModule$$$ofArray","elements","comparer$$30","source","comparer$$31","MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D","map$$1","x$$21","String","res","that$$1","fill","target","targetIndex","count","last","array$$5","mapIndexed","cons$$1","ArrayBuffer","isView","target$$1","delegateArg0","delegateArg1","f$$1","source$$1","cons$$2","len$$1","target$$2","i$$4","concat","arrays","cons$$9","arr$$4","arrays$$1","isArray","from","totalIdx","totalLength","idx","result$$4","idx$$1","arr$$6","mapping$$4","array$$14","cons$$10","distinctBy","array$$17","eq$$1","predicate","hashSet","createMutable$$1","$arg$$3","addToSet","filter","distinct","array$$19","eq$$2","x$$2","projection$$2","array$$26","cons$$11","eq$$5","keys$$1","idx$$3","key$$2","addToDict","key$$3","array$$28","reverse","initialize","count$$8","initializer","cons$$15","result$$7","i$$13","copy","array$$31","cons$$17","array$$33","cons$$18","addRangeInPlace","range","array$$49","x$$4","removeInPlace","item$$5","array$$51","i$$18","indexOf","predicate$$13","array$$61","find","choose","chooser$$2","array$$74","cons$$30","x$$6","value$$15","x$$5","fold","folder$$4","state$$6","array$$78","reduce","delegateArg0$$2","delegateArg1$$2","action$$1","array$$81","i$$31","sortBy","projection$$4","xs$$4","xs$$5","sort","x$$14","y$$4","sortByDescending","projection$$5","xs$$8","comparer$$8","xs$$9","y$$6","chunkBySize","chunkSize","array$$97","result$$12","x$$18","ceil","start$$8","equalsWith","array1$$7","array2$$7","array1$$6","array2$$6","i$$40","result$$13","length1","length2","compareWith","array$$104","foldBack2","f$$9","array1$$11","array2$$11","state$$17","folder$$12","array1$$10","array2$$10","state$$16","acc$$8","size$$1","i$$43","foldBackIndexed2","x$$22","y$$8","reduction","array$$114","maxBy","projection$$7","xs$$12","x$$24","y$$10","min","xs$$15","x$$27","y$$13","source$$6","cons$$31","source$$7","cons$$32","toList","source$$8","len$$17","target$$6","i$$48","tryHead","_arg1$$2","tryLast","$_arg1$$4$$6","_arg1$$4","$f$$2$$19","$state$$1$$20","$xs$$8$$21","f$$2","state$$1","acc$$1","acc$$3","x$$9","xs$$27","_arg1$$7","append","xs$$28","ys$$10","f$$16","xs$$31","f$$24","xs$$46","unitVar0","xs$$50","res$$1","i$$9","tryPickIndexed","f$$29","xs$$52","$f$$28$$120","$i$$10$$121","$_arg1$$9$$122","tryPickIndexedAux","f$$28","_arg1$$9","tryFindIndexed","f$$32","xs$$55","i$$11","x$$31","undefined","findIndexed","f$$34","xs$$57","xs$$69","_arg1$$13","f$$42","xs$$71","acc$$17","x$$37","f$$44","xs$$74","acc$$18","x$$39","contains","list","eq","$xs$$76$$162","xs$$76","loop$$1","xs$$90","comparer$$3","xs$$91","x$$50","y$$18","xs$$96","comparer$$7","xs$$97","x$$52","y$$20","takeSplitAux","$error$$246","$i$$21$$247","$acc$$25$$248","$xs$$121$$249","error","i$$21","acc$$25","xs$$121","take","i$$22","xs$$123","$target$$252","i$$25","xs$$124","text","ex","dispatch","cmd","sub","generator","f1","f2","er","success","fail","PromiseBuilder","__","factory","( .ctor )","caseStrategy","fieldName","lowerFirst","arguments","guid","datetimeOffset","timespan","sbyte","int16","uint16","datetime","space","encoder","option","nil","autoEncodeRecordsAndUnions","extra","skipNullField","encoderRef","setters","fi","targetKey","encode","autoEncoder","message","arg10","clo1","patternInput","fieldTypes","fullname","seq","enumType","byte","clo2","arg20","encoders","Value","valueEncoder","keyType","activePatternResult6602","keyEncoder","clo4","arg40","_arg2","activePatternResult6606","makeExtra","resolver","defaultArg","BigNat","bound","digits","BigNatModule$002EFFT$$$pow32","$x$$1","$n$$2","BigNatModule$002EFFT$$$maxTwoPower","Int32Array","BigNatModule$$$bound","n$$10","BigNatModule$$$coeff","n$$12","i$$5","BigNatModule$$$coeff64","n$$13","i$$6","fromInteger","BigNatModule$$$setCoeff","n$$14","i$$7","v$$4","BigNatModule$$$pow64","$x$$23$$48","$n$$15$$49","x$$23","n$$15","op_Multiply","BigNatModule$$$pow32","$x$$24$$50","$n$$16$$51","n$$16","BigNatModule$$$baseNi64","BigNatModule$$$baseMaski64","BigNatModule$$$createN","BigNatModule$$$normN","n$$18","bound$$1","$na$$62","$i$$9$$63","na","findLeastBound","BigNatModule$$$embed","x$$28","x$$29","r$$3","BigNatModule$$$boundInt","BigNatModule$$$one","BigNatModule$$$zero","BigNatModule$$$degree","n$$24","BigNatModule$$$isZero","p$$4","BigNatModule$$$equal","p$$7","q$$4","$pa$$96","$qa$$97","$i$$22$$98","pa","qa","check","BigNatModule$$$compare","p$$9","q$$6","$pa$$2$$108","$qa$$2$$109","$i$$24$$110","pa$$2","qa$$2","i$$24","check$$2","BigNatModule$$$lt","p$$10","q$$7","BigNatModule$$$mulSchoolBookCarry","$r$$12$$130","$c$$8$$131","$k$$4$$132","r$$12","rak$$1","op_Addition","op_BitwiseAnd","toInt","op_Division","BigNatModule$$$mulSchoolBookOneSmall","p$$16","q$$12","value$$3","bp","r$$13","q$$13","i$$28","rak$$2","BigNatModule$$$mulSchoolBook","p$$18","q$$15","p$$15","q$$11","r$$11","rak","pSmall","qSmall","p$$17","q$$14","value$$4","r$$14","i$$29","pai$$1","j$$1","qaj","rak$$3","BigNatModule$$$mulSchoolBookNeitherSmall","BigNatModule$002Eencoding","bigL","twoToBigL","bigK","bigN","split","splits","BigNatModule$$$mkEncoding","bigK$$2","i$$30","BigNatModule$$$table","i$$32","i$$33","i$$34","BigNatModule$$$mul","p$$20","q$$17","BigNatModule$$$scaleSubInPlace","x$$57","a$$5","n$$30","j$$4","z$$7","zLo","value$$5","zHi","BigNatModule$$$scaleAddInPlace","x$$62","f$$3","a$$8","n$$32","patternInput$$4","patternInput$$5","f$$4","j$$5","z$$8","zLo$$1","value$$7","zHi$$1","BigNatModule$$$removeFactor","x$$67","a$$11","n$$34","p$$8","pn","q$$5","qn","patternInput$$6","f64","f64$$1","$pa$$1$$103","$qa$$1$$104","$i$$23$$105","pa$$1","qa$$1","i$$23","pai","qai","check$$1","BigNatModule$$$divmod","a$$12","x$$68","d$$6","p$$21","m$$2","n$$35","f$$7","BigNatModule$$$ofInt32","n$$41","BigNatModule$$$ofInt64","n$$42","x$$30","r$$4","BigNatModule$$$boundInt64","op_Modulus","BigNatModule$$$embed64","BigNatModule$$$toString","n$$45","degn","kten2ks","$prior$$227","$k$$11$$228","$ten2k$$229","prior","k$$11","ten2k","route","digits$$4","isLeading","n$$46","patternInput$$13","digits$$2","n$$47","n$$19","i$$12","BigNatModule$$$eval32","int32ToString","BigNatModule$$$isSmall","n$$48","BigNatModule$$$getSmall","n$$49","BigInteger","signInt","BigInteger$$$$002Ector$$Z2BE94A1","BigInteger$$$nat$$Z67CCE57D","BigNatModule$0024$0024$0024isSmall","BigNatModule$0024$0024$0024getSmall","smallLim","smallPosTab","BigInteger$$get_SignInt","BigInteger$$get_V","BigInteger$$$op_Equality$$56F059C0","x$$3","BigNatModule$0024$0024$0024equal","BigNatModule$0024$0024$0024isZero","BigInteger$$$op_LessThan$$56F059C0","BigNatModule$0024$0024$0024lt","BigInteger$$$$002Ector$$Z524259A4","n$$6","BigNatModule$0024$0024$0024ofInt32","BigNatModule$0024$0024$0024ofInt64","op_UnaryNegation","op_UnaryNegation_Int32","BigInteger$$$get_One","one","BigInteger$$$get_Two","two","BigInteger$$$get_Zero","zero","BigNatModule$0024$0024$0024toString","z","n$$17","BigNatModule$0024$0024$0024hash","obj$$1","n$$5","nn","BigInteger$0024$0024$0024get_Zero","BigInteger$0024$0024$0024get_One","BigInteger$0024$0024$0024get_Two","genericMsg","newLine","errorToString","path","reason","decoder","fromValue","arg0","uint32","max","decodeMaybeNull","badPathError","fieldNames","currentPath","index","requestedIndex","vArray","tokens","succeed","output","andThen","cb","ctor","d1","unwrapWith","errors","fieldValue","isUndefined","field","firstPath","firstValue","curValue","optional","mixedArray","decoders","arg30","clo3","state","uci","autoDecoder","autoDecodeRecordsAndUnions","isOptional","decoderRef","decoderInfos","folder$$8","state$$12","reduceRight","delegateArg0$$4","delegateArg1$$4","autoObject","makeUnion","int","keyDecoder","valueDecoder","autoObject2","decoder1","decoder2","v1","v2","( arg10@ )","( arg20@ )","runner","ar","bool","unit","string","float","float32","json","fromString","generateDecoder","dataResolver","response","responseResolver","eitherUnitOr","cont","ResolveType","a","url","httpMethod","properties","headers","body","list2","init","resolve","exn","tryFetchAs","Promisify","input","GetCoreference","endpoints","GetSRL","GetDependencyParse","GetSentences","GetForSentences","service","sentences","pr","sentence","Promise","GetTextualEntailment","premise","hypothesis","RegexReplace","pattern","replacement","CleanText","arg00","GetNLP","stringArrayJsonOption","inputText","chunks","chunk","allOK","resultsArr","resultsToType","resultsToError","sen","len$$8","array$$95","res1$$1","res2$$1","i$$36","_arg3","_arg4","cor","tokenIdCorefMap","sentenceAnnotations","srls","deps","span","wordIndexOffset","srl","dep","spans","clusters","clusterIndex","documentAnnotation","errorPayload","removePrePunctuationSpaces","prePunctuationSpaceRegex","getRootOfSpan","start","stop","sa","spanHeadIndex","resolveReferents","da","clusterSentenceMap","demonstrativeRegex","spanIsPronominal","resolvedSentences","clusterReferents","indexedWords","clusterId","nominalReferents","predicate$$20","array$$70","strings","tuple","$i$$25$$158","loop$$4","w","ResolveTextReferents","Get","word","wordRegex","query","wordFreqMap","lengthFreqMap","getParaphrases","paraphraseEndpoint","InitializeParaphraseCache","backtranslation","StringToTag","keyValue","GetTotalWeight","coref","totalWeight","projection$$6","array$$121","adder$$1","i$$45","id","getFeatureDistanceFromRoot","maxDistance","distance","GetModifiedNPClozable","startInit","stopInit","traceInit","stanfordHead","argOption","nnOption","indices","trace","arg","predicate$$8","array$$45","cons$$27","count$$18","count$$19","clozable","GetClozables","corefresolvedSentences","si","weight","pred","tags","Tag","inputRecord","GetAllCloze","nlpJsonOption","nlpJson","clozables","ra","RemoveOverlappingClozables","clozablesOut","cl","ci","cj","overlap","GetAcronymMap","acronymMap","matches","words","firstLetterString","acronym","lm","phrase","GetSelectCloze","sentenceCountOption","itemCountOption","doTrace","sentenceCount","itemCount","clozeProbTuples","restClozableMap","allClozableMap","importantClozeMap","badSentenceRegex","f$$43","xs$$73","sorted","tupledArg$$1","x$$38","xs$$139","eq$$4","matchValue$$16","result$$1","collect$$1","clozes","correctResponses","blank","cloze","crOption","paOption","cr","_","crCloze","paItem","diffList","diff","removeList","addList","removed","added","tempTags","crItem","MakeItemWithTranformations","tripleIndicesFromSrlTags","srlTags","sortedArgs","srlArgToIndexMap","triplesFromSentence","copTuples","candidateTriples","source$$2","len$$4","target$$3","edge","firstLetterUpper","Initialize","jsonDictionary","entryFirstWordSet","definitionMap","wordSet","lower","determinerMap","w1Lower","isAcronym","tokensToString","getDeterminerPhraseFromTokens","token0Lower","det","correctCaseToken0","getDeterminerPhrase","getPredicate","entry","nounEntry","pluralEntry","needsDeterminer","GenerateFeedback","incorrectAnswer","correctAnswer","feedback","correctEntry","incorrectEntry","HarnessGenerateFeedback","jsonFeedbackRequest","fr","GetDefinitionFromGlossaryHighRecall","term","candidateTerms","GetDefinitionFromGlossary","question","context","endpoint","getAnswerWithContext","GetWikification","GetWikiEntitiesForTerms","terms","wikiTermEntityMatches","startA","stopA","entityMatches","startB","stopB","coverage","HarnessWikiAlign","jsonRequest","request","GetWikipediaPageFirstParagraph","pageId","wikipediaQuery","GetWikiExtractsForTerms","wtem","comparer$$32","em","set$$1","x$$33","MutableSet$002400601$0024$0024Add$0024$00242B595","singleton$$1","pages","wer","HarnessWikiExtracts","PromisifyOk","def","lowContains","b","getWikiDefinition","wikiExtracts","wtemOption","pageIdsOption","definitions","pageIds","page","getGlossaryDefinition","getElasticProcess","docs","config","docTuples","filteredDocuments","fd","retainedDocIndices","finalElasticDocs","count$$11","array$$39","cons$$21","count$$12","getCoreferenceProcess","answer","sentenceTuples","candidateSentences","filteredTuples","corefSentences","answerSentences","retainedSentenceIndices","finalAnswer","FetchError","array1$$4","array2$$4","result$$10","len$$15","i$$38","GetElaboratedFeedback","clozeSentence","configurationOption","glossaryIncorrectDefinitionOption","glossaryCorrectDefinitionOption","definitionContext","TextOption","wikiIncorrectDefinitionOption","wikiCorrectDefinitionOption","finalIncorrectDefinition","finalCorrectDefinition","dp","getDocuments","clozeContext","elaboratedFeedback","HarnessGetElaboratedFeedback","cache","correctnessStatement","cs","getLemma","upos","lemmatize_oov","lemmInflectEndpoint","testGetLemma","getInflection","lemma","inflect_oov","testGetInflection","qType","focus","mapArr","frameTags","argNs","disfluentArgN","finalArgNs","argNIndices","startPos","stopPos","x$$25","y$$11","argNRoot","isNominative","wh","focusIndices","replacementIndices","replacementString","isPerson","focusIndex","focusWord","argNsList","verb","trimPunctuation","plans","subs","prompts","hints","whSrlSubstitutions","subIndiceSet","Create","questionCase","indicesToSubstring","prompt","hintTemplates","hintIndex","template","focusString","hint","questions","GetQuestions","NWORDS","getRandomMove","dm","dialogueBags","aType","clozeItem","clozeAnswer","GetDialogue","q","isOK","resultToTypeOption","resultToErrorOption","hintOption","lastQ","ps","feedbackOption","te","daOption","teOption","display","Text","lastSet","ap","candidateSet","polarity","strength","GetRandom","makeElaboration","elaborationOption","elaboration","Questions","Display","finishedOption","HarnessGetDialogue","jsonState","HarnessGetElaboratedDialogueState","jointOption","iaOption","caOption","case","screen","getCaseName","level","getCaseTag","options","ofText","ToString","toDisplayOnlyClass","ofInvisibleOnly","ofHiddenOnly","ofBackground","parser","baseClass","baseProps","AddClass","AddProps","prop","props","Classes","modifiers","parseModifiers","el","children","classes","cls","AddModifiers","element","RemovedClasses","content","offset","className","suffix","controlView","fieldView","file","cta","icon","std","booleans","complete","opt","size","faOptions","CustomClass","Size","ofSize","baseElement","opts","btnView","DOMAttr","typ","ofType","Prop","columns","rix'","ix","wix'","wix","setState","program","rb","reentered","syncDispatch","nextMsg","equal","view","comp","lazyView2With","placeholderId","model","document","getElementById","randomFeature","nextProps","_nextState","ParseIntOption","JsonInput","makeCmd","serviceCall","resultWrapper","task","ofSuccess","copyOfStruct","chunksJsonOption","triples","apiResponse","createElement","blob","URL","filename","setAttribute","click","fileReader","readAsText","simpleButton","txt","action","css","title","Screen","ev","displayIcon","toIconOptions","update","runWith","withReactSynchronousUsing"],"mappings":"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AAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,I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","file":"app.2df9b78890d0b554e2e0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([210,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable:ban-types\nexport function bindThis(this$, source) {\n    for (const key of Object.keys(source)) {\n        if (typeof source[key] === \"function\") {\n            source[key] = source[key].bind(this$);\n        }\n    }\n    return source;\n}\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            const descr = Object.getOwnPropertyDescriptor(source, key);\n            if (descr) {\n                Object.defineProperty(target, key, descr);\n            }\n        }\n    }\n    return target;\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return x != null && (Array.isArray(x) || ArrayBuffer.isView(x));\n}\nexport function isComparer(x) {\n    return x != null && typeof x.Compare === \"function\";\n}\nexport function isComparable(x) {\n    return x != null && typeof x.CompareTo === \"function\";\n}\nexport function isEquatable(x) {\n    return x != null && typeof x.Equals === \"function\";\n}\nexport function isHashable(x) {\n    return x != null && typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nlet ObjectRef = /** @class */ (() => {\n    class ObjectRef {\n        static id(o) {\n            if (!ObjectRef.idMap.has(o)) {\n                ObjectRef.idMap.set(o, ++ObjectRef.count);\n            }\n            return ObjectRef.idMap.get(o);\n        }\n    }\n    ObjectRef.idMap = new WeakMap();\n    ObjectRef.count = 0;\n    return ObjectRef;\n})();\nexport { ObjectRef };\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                const len = x.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(x[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x) && isArrayLike(y)) {\n        return compareArrays(x, y);\n    }\n    else if (x instanceof Date && y instanceof Date) {\n        return compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n//# sourceMappingURL=Util.js.map","// tslint:disable: space-before-function-paren\nimport { combineHashCodes, compare, compareArrays, equalArrays, equals, identityHash, numberHash, structuralHash } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport class SystemObject {\n    toString() {\n        return \"{\" + Object.entries(this).map(([k, v]) => k + \" = \" + String(v)).join(\";\\n \") + \"}\";\n    }\n    GetHashCode(x) {\n        return identityHash(x !== null && x !== void 0 ? x : this);\n    }\n    Equals(x, y) {\n        return x === (y !== null && y !== void 0 ? y : this);\n    }\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        return \"[\" + Array.from(this).join(\"; \") + \"]\";\n    }\n    toJSON() {\n        return Array.from(this);\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    GetHashCode() {\n        const hashes = Array.from(this).map(structuralHash);\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return compareList(this, other) === 0;\n    }\n    CompareTo(other) {\n        return compareList(this, other);\n    }\n}\nexport class Union extends SystemObject {\n    constructor(tag, name, ...fields) {\n        super();\n        this.tag = tag | 0;\n        this.name = name;\n        this.fields = fields;\n    }\n    toString() {\n        const len = this.fields.length;\n        if (len === 0) {\n            return this.name;\n        }\n        else if (len === 1) {\n            return this.name + \" \" + String(this.fields[0]);\n        }\n        else {\n            return this.name + \" (\" + this.fields.map((x) => String(x)).join(\",\") + \")\";\n        }\n    }\n    toJSON() {\n        return this.fields.length === 0\n            ? this.name\n            : [this.name].concat(this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return this === other\n            || (sameType(this, other)\n                && this.tag === other.tag\n                && equalArrays(this.fields, other.fields));\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameType(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record extends SystemObject {\n    toString() {\n        return \"{\" + Object.entries(this).map(([k, v]) => k + \" = \" + String(v)).join(\";\\n \") + \"}\";\n    }\n    toJSON() {\n        return recordToJson(this);\n    }\n    GetHashCode() {\n        const hashes = Object.values(this).map((v) => structuralHash(v));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return recordEquals(this, other);\n    }\n    CompareTo(other) {\n        return recordCompare(this, other);\n    }\n}\nexport function anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nexport class FSharpRef extends Record {\n    constructor(contents) {\n        super();\n        this.contents = contents;\n    }\n}\nexport const Exception = declare(function Exception(message) {\n    this.stack = Error().stack;\n    this.message = message;\n}, SystemObject);\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter((k) => k !== \"message\" && k !== \"stack\");\n}\nexport class FSharpException extends Exception {\n    toString() {\n        var _a;\n        // const fieldNames = getFSharpExceptionFieldNames(this);\n        const fields = Object.entries(this).filter(([k, _]) => k !== \"message\" && k !== \"stack\");\n        const len = fields.length;\n        if (len === 0) {\n            return (_a = this.message) !== null && _a !== void 0 ? _a : \"\";\n        }\n        else if (len === 1) {\n            return this.message + \" \" + String(fields[1]);\n        }\n        else {\n            return this.message + \" (\" + fields.map(([_, v]) => String(v)).join(\",\") + \")\";\n        }\n    }\n    toJSON() {\n        return recordToJson(this, getFSharpExceptionFieldNames);\n    }\n    GetHashCode() {\n        const fields = Object.entries(this).filter(([k, _]) => k !== \"message\" && k !== \"stack\");\n        const hashes = fields.map(([_, v]) => structuralHash(v));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        return recordEquals(this, other, getFSharpExceptionFieldNames);\n    }\n    CompareTo(other) {\n        return recordCompare(this, other, getFSharpExceptionFieldNames);\n    }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport const Attribute = declare(function Attribute() { return; }, SystemObject);\n//# sourceMappingURL=Types.js.map","import { Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function tryValue(x) {\n    return x instanceof Some ? x.value : x;\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n// CHOICE\nexport class Choice extends Union {\n}\nexport class Choice3 extends Union {\n}\nexport class Choice4 extends Union {\n}\nexport class Choice5 extends Union {\n}\nexport class Choice6 extends Union {\n}\nexport class Choice7 extends Union {\n}\nexport function choice1Of2(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2Of2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1Of2(x) {\n    return x.tag === 0 ? some(x.fields[0]) : undefined;\n}\nexport function tryValueIfChoice2Of2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : undefined;\n}\n// RESULT\nexport class Result extends Union {\n}\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n//# sourceMappingURL=Option.js.map","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n//# sourceMappingURL=big.js.map","import Decimal from \"./lib/big\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str) {\n    try {\n        return [true, new Decimal(str.trim())];\n    }\n    catch (_a) {\n        return [false, get_Zero];\n    }\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n//# sourceMappingURL=Decimal.js.map","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n//# sourceMappingURL=Int32.js.map","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n//# sourceMappingURL=long.js.map","import { isValid } from \"./Int32\";\nimport * as LongLib from \"./lib/long\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, LongLib.ZERO];\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = LongLib.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n//# sourceMappingURL=Long.js.map","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: undefined };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nfunction makeSeq(f) {\n    const seq = {\n        [Symbol.iterator]: f,\n        toString: () => \"seq [\" + Array.from(seq).join(\"; \") + \"]\",\n    };\n    return seq;\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2(f, xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return [];\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : undefined, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n//# sourceMappingURL=Seq.js.map","import { anonRecord as makeAnonRecord, Record, Union } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function class_type(fullname, generics, construct) {\n    return new TypeInfo(fullname, generics, construct);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, () => cases().map((x, i) => typeof x === \"string\"\n        ? new CaseInfo(t, i, x)\n        : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str) {\n    try {\n        const v = parseEnum(t, str);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, NaN];\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, uci.name, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : makeAnonRecord(fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {}));\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n//# sourceMappingURL=Reflection.js.map","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, _refValue) {\n    try {\n        // if value is null or whitespace, parsing fails\n        if (v == null || v.trim() === \"\") {\n            return [false, minValue()];\n        }\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n//# sourceMappingURL=Date.js.map","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n//# sourceMappingURL=RegExp.js.map","import { toString as dateToString } from \"./Date\";\nimport Decimal from \"./Decimal\";\nimport Long, * as _Long from \"./Long\";\nimport { escape } from \"./RegExp\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\n// These are used for formatting and only take longs and decimals into account (no bigint)\nfunction isNumeric(x) {\n    return typeof x === \"number\" || x instanceof Long || x instanceof Decimal;\n}\nfunction isLessThan(x, y) {\n    if (x instanceof Long) {\n        return _Long.compare(x, y) < 0;\n    }\n    else if (x instanceof Decimal) {\n        return x.cmp(y) < 0;\n    }\n    else {\n        return x < y;\n    }\n}\nfunction multiply(x, y) {\n    if (x instanceof Long) {\n        return _Long.op_Multiply(x, y);\n    }\n    else if (x instanceof Decimal) {\n        return x.mul(y);\n    }\n    else {\n        return x * y;\n    }\n}\nfunction toFixed(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toFixed(dp).substr(1);\n    }\n    else {\n        return x.toFixed(dp);\n    }\n}\nfunction toPrecision(x, sd) {\n    if (x instanceof Long) {\n        return String(x) + (0).toPrecision(sd).substr(1);\n    }\n    else {\n        return x.toPrecision(sd);\n    }\n}\nfunction toExponential(x, dp) {\n    if (x instanceof Long) {\n        return String(x) + (0).toExponential(dp).substr(1);\n    }\n    else {\n        return x.toExponential(dp);\n    }\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return _Long.toString(x.unsigned ? x : _Long.fromBytes(_Long.toBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, padLength, precision, format) => {\n        let sign = \"\";\n        if (isNumeric(rep)) {\n            if (format.toLowerCase() !== \"x\") {\n                if (isLessThan(rep, 0)) {\n                    rep = multiply(rep, -1);\n                    sign = \"-\";\n                }\n                else {\n                    if (flags.indexOf(\" \") >= 0) {\n                        sign = \" \";\n                    }\n                    else if (flags.indexOf(\"+\") >= 0) {\n                        sign = \"+\";\n                    }\n                }\n            }\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 6;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"x\":\n                    rep = toHex(rep);\n                    break;\n                case \"X\":\n                    rep = toHex(rep).toUpperCase();\n                    break;\n                default: // AOid\n                    rep = String(rep);\n                    break;\n            }\n        }\n        padLength = parseInt(padLength, 10);\n        if (!isNaN(padLength)) {\n            const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n            const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n            const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n            if (ch === \"0\") {\n                rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n                rep = sign + rep;\n            }\n            else {\n                rep = padLeft(sign + rep, padLength, ch, minusFlag);\n            }\n        }\n        else {\n            rep = sign + rep;\n        }\n        const once = prefix + rep;\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n    if (guidRegex.test(trimmedAndLowered)) {\n        return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n//# sourceMappingURL=String.js.map","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { equals, getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { format } from \"./String.js\";\nexport const MutableMap$00602 = declare(function Fable_Collections_MutableMap(pairs, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@20-1\"] = 1;\n  iterate(function (pair) {\n    MutableMap$00602$$Add$$5BDDA1(this$.contents, pair[0], pair[1]);\n  }, pairs);\n  void null;\n});\nexport function MutableMap$00602$reflection($gen$$4, $gen$$5) {\n  return class_type(\"Fable.Collections.MutableMap`2\", [$gen$$4, $gen$$5], MutableMap$00602);\n}\nexport function MutableMap$00602$$$$002Ector$$6623D9B3(pairs, comparer) {\n  return this instanceof MutableMap$00602 ? MutableMap$00602.call(this, pairs, comparer) : new MutableMap$00602(pairs, comparer);\n}\n\nfunction MutableMap$00602$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (pair$$1) {\n      return this$$$1.comparer.Equals(k, pair$$1[0]);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nexport function MutableMap$00602$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableMap$00602$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$10;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$10 = 0;\n    } else {\n      $target$$10 = 1;\n    }\n  } else {\n    $target$$10 = 1;\n  }\n\n  switch ($target$$10) {\n    case 0:\n      {\n        return getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]];\n      }\n\n    case 1:\n      {\n        return undefined;\n      }\n  }\n}\nexport function MutableMap$00602$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableMap$00602$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableMap$00602$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs$$2) {\n    return pairs$$2.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableMap$00602$$get_Item$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableMap$00602$$TryFind$$2B595(this$$$6, k$$2);\n\n  if (matchValue$$2 != null) {\n    const pair$$2 = matchValue$$2;\n    return pair$$2[1];\n  } else {\n    throw new Error(\"The item was not found in collection\");\n  }\n}\nexport function MutableMap$00602$$set_Item$$5BDDA1(this$$$7, k$$3, v) {\n  const matchValue$$3 = MutableMap$00602$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$20;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 1;\n    }\n  } else {\n    $target$$20 = 1;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        getItemFromDict(this$$$7.hashMap, matchValue$$3[1])[matchValue$$3[2]] = [k$$3, v];\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$3[0]) {\n          const value = void getItemFromDict(this$$$7.hashMap, matchValue$$3[1]).push([k$$3, v]);\n          void null;\n        } else {\n          this$$$7.hashMap.set(matchValue$$3[1], [[k$$3, v]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$Add$$5BDDA1(this$$$8, k$$4, v$$1) {\n  const matchValue$$4 = MutableMap$00602$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$24;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$24 = 0;\n    } else {\n      $target$$24 = 1;\n    }\n  } else {\n    $target$$24 = 1;\n  }\n\n  switch ($target$$24) {\n    case 0:\n      {\n        const msg = format(\"An item with the same key has already been added. Key: {0}\", k$$4);\n        throw new Error(msg);\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$4[0]) {\n          const value$$1 = void getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).push([k$$4, v$$1]);\n          void null;\n        } else {\n          this$$$8.hashMap.set(matchValue$$4[1], [[k$$4, v$$1]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$ContainsKey$$2B595(this$$$9, k$$5) {\n  const matchValue$$5 = MutableMap$00602$$TryFindIndex$$2B595(this$$$9, k$$5);\n  var $target$$27;\n\n  if (matchValue$$5[0]) {\n    if (matchValue$$5[2] > -1) {\n      $target$$27 = 0;\n    } else {\n      $target$$27 = 1;\n    }\n  } else {\n    $target$$27 = 1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableMap$00602$$Remove$$2B595(this$$$10, k$$6) {\n  const matchValue$$6 = MutableMap$00602$$TryFindIndex$$2B595(this$$$10, k$$6);\n  var $target$$30;\n\n  if (matchValue$$6[0]) {\n    if (matchValue$$6[2] > -1) {\n      $target$$30 = 0;\n    } else {\n      $target$$30 = 1;\n    }\n  } else {\n    $target$$30 = 1;\n  }\n\n  switch ($target$$30) {\n    case 0:\n      {\n        getItemFromDict(this$$$10.hashMap, matchValue$$6[1]).splice(matchValue$$6[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableMap$00602.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$11 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (pairs$$3) {\n      return map(function (pair$$3) {\n        return pair$$3;\n      }, pairs$$3);\n    }, this$$$11.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableMap$00602.prototype.Add = function (item) {\n  const this$$$12 = this;\n  MutableMap$00602$$Add$$5BDDA1(this$$$12, item[0], item[1]);\n};\n\nMutableMap$00602.prototype.Clear = function () {\n  const this$$$13 = this;\n  MutableMap$00602$$Clear(this$$$13);\n};\n\nMutableMap$00602.prototype.Contains = function (item$$1) {\n  var p;\n  const this$$$14 = this;\n  const matchValue$$7 = MutableMap$00602$$TryFind$$2B595(this$$$14, item$$1[0]);\n  var $target$$31;\n\n  if (matchValue$$7 != null) {\n    if (p = matchValue$$7, equals(p[1], item$$1[1])) {\n      $target$$31 = 0;\n    } else {\n      $target$$31 = 1;\n    }\n  } else {\n    $target$$31 = 1;\n  }\n\n  switch ($target$$31) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n};\n\nMutableMap$00602.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$15 = this;\n  iterateIndexed(function action(i$$10, e) {\n    array[arrayIndex + i$$10] = e;\n  }, this$$$15);\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$16 = this;\n    return MutableMap$00602$$get_Count(this$$$16) | 0;\n  }\n});\nObject.defineProperty(MutableMap$00602.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableMap$00602.prototype.Remove = function (item$$2) {\n  const this$$$18 = this;\n  const matchValue$$8 = MutableMap$00602$$TryFind$$2B595(this$$$18, item$$2[0]);\n\n  if (matchValue$$8 != null) {\n    const pair$$4 = matchValue$$8;\n\n    if (equals(pair$$4[1], item$$2[1])) {\n      const value$$2 = MutableMap$00602$$Remove$$2B595(this$$$18, item$$2[0]);\n      void value$$2;\n    } else {\n      void null;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$19 = this;\n    return MutableMap$00602$$get_Count(this$$$19) | 0;\n  }\n});\n\nMutableMap$00602.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableMap$00602$$Clear(this$$$20);\n};\n\nMutableMap$00602.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableMap$00602$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableMap$00602.prototype.entries = function () {\n  const this$$$22 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$22);\n};\n\nMutableMap$00602.prototype.get = function (k$$8) {\n  const this$$$23 = this;\n  return MutableMap$00602$$get_Item$$2B595(this$$$23, k$$8);\n};\n\nMutableMap$00602.prototype.has = function (k$$9) {\n  const this$$$24 = this;\n  return MutableMap$00602$$ContainsKey$$2B595(this$$$24, k$$9);\n};\n\nMutableMap$00602.prototype.keys = function () {\n  const this$$$25 = this;\n  return map(function mapping$$1(pair$$5) {\n    return pair$$5[0];\n  }, this$$$25);\n};\n\nMutableMap$00602.prototype.set = function (k$$10, v$$2) {\n  const this$$$26 = this;\n  MutableMap$00602$$set_Item$$5BDDA1(this$$$26, k$$10, v$$2);\n  return this$$$26;\n};\n\nMutableMap$00602.prototype.values = function () {\n  const this$$$27 = this;\n  return map(function mapping$$2(pair$$6) {\n    return pair$$6[1];\n  }, this$$$27);\n};","import { Record, List, declare, Union } from \"./Types.js\";\nimport { class_type, record_type, bool_type, list_type, union_type, int32_type } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$2, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, format } from \"./String.js\";\nimport { MutableMap$00602$$$$002Ector$$6623D9B3 as MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3 } from \"./MutableMap\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  this.tag = tag | 0;\n  this.name = name;\n  this.fields = fields;\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union_type(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [[\"Item1\", $gen$$3], [\"Item2\", $gen$$4]]], [\"MapNode\", [[\"Item1\", $gen$$3], [\"Item2\", $gen$$4], [\"Item3\", MapTree$00602$reflection($gen$$3, $gen$$4)], [\"Item4\", MapTree$00602$reflection($gen$$3, $gen$$4)], [\"Item5\", int32_type]]]]);\n}\nexport function MapTreeModule$$$sizeAux($acc$$5, $m$$6) {\n  MapTreeModule$$$sizeAux: while (true) {\n    const acc = $acc$$5,\n          m = $m$$6;\n\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          $acc$$5 = MapTreeModule$$$sizeAux(acc + 1, m.fields[2]);\n          $m$$6 = m.fields[3];\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        return _arg1.fields[4] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  var $target$$14;\n\n  if (l$$1.tag === 0) {\n    if (r$$1.tag === 0) {\n      $target$$14 = 0;\n    } else {\n      $target$$14 = 1;\n    }\n  } else {\n    $target$$14 = 1;\n  }\n\n  switch ($target$$14) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      if (MapTreeModule$$$height(t2.fields[2]) > t1h + 1) {\n        if (t2.fields[2].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2].fields[2]), t2.fields[2].fields[0], t2.fields[2].fields[1], MapTreeModule$$$mk(t2.fields[2].fields[3], t2.fields[0], t2.fields[1], t2.fields[3]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2]), t2.fields[0], t2.fields[1], t2.fields[3]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      if (MapTreeModule$$$height(t1.fields[3]) > t2h + 1) {\n        if (t1.fields[3].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], t1.fields[3].fields[2]), t1.fields[3].fields[0], t1.fields[3].fields[1], MapTreeModule$$$mk(t1.fields[3].fields[3], k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], MapTreeModule$$$mk(t1.fields[3], k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const c = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[2]), m$$3.fields[0], m$$3.fields[1], m$$3.fields[3]);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3.fields[2], m$$3.fields[3], m$$3.fields[4]);\n        } else {\n          return MapTreeModule$$$rebalance(m$$3.fields[2], m$$3.fields[0], m$$3.fields[1], MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find($comparer$$1$$23, $k$$3$$24, $m$$4$$25) {\n  MapTreeModule$$$find: while (true) {\n    const comparer$$1 = $comparer$$1$$23,\n          k$$3 = $k$$3$$24,\n          m$$4 = $m$$4$$25;\n\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const c$$2 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$2 === 0) {\n            return m$$4.fields[1];\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const c$$3 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$3 < 0) {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[2];\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return m$$4.fields[1];\n          } else {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[3];\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind($comparer$$2$$26, $k$$4$$27, $m$$5$$28) {\n  MapTreeModule$$$tryFind: while (true) {\n    const comparer$$2 = $comparer$$2$$26,\n          k$$4 = $k$$4$$27,\n          m$$5 = $m$$5$$28;\n\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const c$$4 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$4 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            return undefined;\n          }\n        }\n\n      case 2:\n        {\n          const c$$5 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$5 < 0) {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[2];\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[3];\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($comparer$$4$$35, $f$$1$$36, $s$$37, $acc_0$$38, $acc_1$$39) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          f$$1 = $f$$1$$36,\n          s = $s$$37,\n          acc_0 = $acc_0$$38,\n          acc_1 = $acc_1$$39;\n\n    switch (s.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc_0, acc_1);\n        }\n\n      case 2:\n        {\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, s.fields[3], acc_0, acc_1);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc$$2[0], acc$$2[1]);\n          $comparer$$4$$35 = comparer$$4;\n          $f$$1$$36 = f$$1;\n          $s$$37 = s.fields[2];\n          $acc_0$$38 = acc$$3[0];\n          $acc_1$$39 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return [acc_0, acc_1];\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($comparer$$7$$48, $f$$4$$49, $s$$2$$50, $acc$$5$$51) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$48,\n          f$$4 = $f$$4$$49,\n          s$$2 = $s$$2$$50,\n          acc$$5 = $acc$$5$$51;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$5);\n        }\n\n      case 2:\n        {\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, s$$2.fields[2], acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$6);\n          $comparer$$7$$48 = comparer$$7;\n          $f$$4$$49 = f$$4;\n          $s$$2$$50 = s$$2.fields[3];\n          $acc$$5$$51 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        return [m$$6.fields[0], m$$6.fields[1], new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        if (m$$6.fields[2].tag === 0) {\n          return [m$$6.fields[0], m$$6.fields[1], m$$6.fields[3]];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(m$$6.fields[2]);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], m$$6.fields[0], m$$6.fields[1], m$$6.fields[3])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const c$$6 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const c$$7 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[2]), m$$7.fields[0], m$$7.fields[1], m$$7.fields[3]);\n        } else if (c$$7 === 0) {\n          if (m$$7.fields[2].tag === 0) {\n            return m$$7.fields[3];\n          } else if (m$$7.fields[3].tag === 0) {\n            return m$$7.fields[2];\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(m$$7.fields[3]);\n            return MapTreeModule$$$mk(m$$7.fields[2], patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(m$$7.fields[2], m$$7.fields[0], m$$7.fields[1], MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem($comparer$$10$$59, $k$$12$$60, $m$$8$$61) {\n  MapTreeModule$$$mem: while (true) {\n    const comparer$$10 = $comparer$$10$$59,\n          k$$12 = $k$$12$$60,\n          m$$8 = $m$$8$$61;\n\n    switch (m$$8.tag) {\n      case 1:\n        {\n          return comparer$$10.Compare(k$$12, m$$8.fields[0]) === 0;\n        }\n\n      case 2:\n        {\n          const c$$8 = comparer$$10.Compare(k$$12, m$$8.fields[0]) | 0;\n\n          if (c$$8 < 0) {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[2];\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[3];\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($f$$6$$62, $m$$9$$63) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $f$$6$$62,\n          m$$9 = $m$$9$$63;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          break;\n        }\n\n      case 2:\n        {\n          MapTreeModule$$$iter(f$$6, m$$9.fields[2]);\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          $f$$6$$62 = f$$6;\n          $m$$9$$63 = m$$9.fields[3];\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {\n          void null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($f$$7$$64, $m$$10$$65) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $f$$7$$64,\n          m$$10 = $m$$10$$65;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          return f$$7(m$$10.fields[0], m$$10.fields[1]);\n        }\n\n      case 2:\n        {\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, m$$10.fields[2]);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(m$$10.fields[0], m$$10.fields[1]);\n\n            if (matchValue$$3 == null) {\n              $f$$7$$64 = f$$7;\n              $m$$10$$65 = m$$10.fields[3];\n              continue MapTreeModule$$$tryPick;\n            } else {\n              return matchValue$$3;\n            }\n          } else {\n            return matchValue$$2;\n          }\n        }\n\n      default:\n        {\n          return undefined;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($f$$8$$66, $m$$11$$67) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $f$$8$$66,\n          m$$11 = $m$$11$$67;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          return f$$8(m$$11.fields[0], m$$11.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$exists(f$$8, m$$11.fields[2]) ? true : f$$8(m$$11.fields[0], m$$11.fields[1])) {\n            return true;\n          } else {\n            $f$$8$$66 = f$$8;\n            $m$$11$$67 = m$$11.fields[3];\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($f$$9$$68, $m$$12$$69) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $f$$9$$68,\n          m$$12 = $m$$12$$69;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          return f$$9(m$$12.fields[0], m$$12.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$forall(f$$9, m$$12.fields[2]) ? f$$9(m$$12.fields[0], m$$12.fields[1]) : false) {\n            $f$$9$$68 = f$$9;\n            $m$$12$$69 = m$$12.fields[3];\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$13.fields[0], f$$10(m$$13.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2 = MapTreeModule$$$map(f$$10, m$$13.fields[2]);\n        const v2$$16 = f$$10(m$$13.fields[1]);\n        const r2 = MapTreeModule$$$map(f$$10, m$$13.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$13.fields[0], v2$$16, l2, r2, m$$13.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$14.fields[0], f$$11(m$$14.fields[0], m$$14.fields[1]));\n      }\n\n    case 2:\n      {\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[2]);\n        const v2$$17 = f$$11(m$$14.fields[0], m$$14.fields[1]);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$14.fields[0], v2$$17, l2$$1, r2$$1, m$$14.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($f$$12$$74, $m$$15$$75, $x$$1$$76) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $f$$12$$74,\n          m$$15 = $m$$15$$75,\n          x$$1 = $x$$1$$76;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          return f$$12(m$$15.fields[0], m$$15.fields[1], x$$1);\n        }\n\n      case 2:\n        {\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, m$$15.fields[3], x$$1);\n          const x$$3 = f$$12(m$$15.fields[0], m$$15.fields[1], x$$2);\n          $f$$12$$74 = f$$12;\n          $m$$15$$75 = m$$15.fields[2];\n          $x$$1$$76 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($f$$13$$77, $x$$4$$78, $m$$16$$79) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $f$$13$$77,\n          x$$4 = $x$$4$$78,\n          m$$16 = $m$$16$$79;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          return f$$13(x$$4, m$$16.fields[0], m$$16.fields[1]);\n        }\n\n      case 2:\n        {\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, m$$16.fields[2]);\n          const x$$6 = f$$13(x$$5, m$$16.fields[0], m$$16.fields[1]);\n          $f$$13$$77 = f$$13;\n          $x$$4$$78 = x$$6;\n          $m$$16$$79 = m$$16.fields[3];\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const cLoKey = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const cLoKey$$1 = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[2], x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[3], x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop($m$$19$$92, $acc$$8$$93) {\n  MapTreeModule$$$loop: while (true) {\n    const m$$19 = $m$$19$$92,\n          acc$$8 = $acc$$8$$93;\n\n    switch (m$$19.tag) {\n      case 1:\n        {\n          return new List([m$$19.fields[0], m$$19.fields[1]], acc$$8);\n        }\n\n      case 2:\n        {\n          $m$$19$$92 = m$$19.fields[2];\n          $acc$$8$$93 = new List([m$$19.fields[0], m$$19.fields[1]], MapTreeModule$$$loop(m$$19.fields[3], acc$$8));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator($comparer$$14$$97, $acc$$10$$98, $e$$99) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$14 = $comparer$$14$$97,\n          acc$$10 = $acc$$10$$98,\n          e = $e$$99;\n\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      $comparer$$14$$97 = comparer$$14;\n      $acc$$10$$98 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      $e$$99 = e;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    } else {\n      void null;\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(stack, started) {\n  this.stack = stack;\n  this.started = started;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$109, $gen$$110) {\n  return record_type(\"Map.MapTreeModule.MapIterator`2\", [$gen$$109, $gen$$110], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list_type(MapTree$00602$reflection($gen$$109, $gen$$110))], [\"started\", bool_type]]);\n}\nexport function MapTreeModule$$$collapseLHS($stack$$111) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$111;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        $stack$$111 = new List(stack.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), new List(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        $stack$$111 = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n  void null;\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$115, $gen$$116) {\n  return class_type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$115, $gen$$116], MapTreeModule$002EmkIEnumerator$0027$00602);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {\n  void null;\n};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return undefined;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n  void null;\n});\nexport function FSharpMap$reflection($gen$$120, $gen$$121) {\n  return class_type(\"Map.FSharpMap\", [$gen$$120, $gen$$121], FSharpMap);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  let str;\n  let strings;\n  strings = map$$2(function toStr(kv) {\n    return format(\"({0}, {1})\", kv[0], kv[1]);\n  }, this$);\n  str = join(\"; \", strings);\n  return \"map [\" + str + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const patternInput$$5 = e$$1.Current;\n    const activePatternResult3678 = patternInput$$5;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3678[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3678[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(obj));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      } else {\n        void null;\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    } else {\n      void null;\n    }\n  }\n};\n\nObject.defineProperty(FSharpMap.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$3 = this;\n    return FSharpMap$$get_Count(this$$$3) | 0;\n  }\n});\n\nFSharpMap.prototype.clear = function () {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.delete = function (_arg1$$1) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.entries = function () {\n  const this$$$4 = this;\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$4));\n};\n\nFSharpMap.prototype.get = function (k$$34) {\n  const this$$$5 = this;\n  return FSharpMap$$get_Item$$2B595(this$$$5, k$$34);\n};\n\nFSharpMap.prototype.has = function (k$$35) {\n  const this$$$6 = this;\n  return FSharpMap$$ContainsKey$$2B595(this$$$6, k$$35);\n};\n\nFSharpMap.prototype.keys = function () {\n  const this$$$7 = this;\n  const source$$1 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$7));\n  return map$$2(function mapping(kv$$1) {\n    return kv$$1[0];\n  }, source$$1);\n};\n\nFSharpMap.prototype.set = function (k$$36, v$$26) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.values = function () {\n  const this$$$8 = this;\n  const source$$2 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$8));\n  return map$$2(function mapping$$1(kv$$2) {\n    return kv$$2[1];\n  }, source$$2);\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$37, v$$27, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$37, v$$27);\n}\nexport function find(k$$38, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$38);\n}\nexport function tryFind(k$$39, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$39);\n}\nexport function remove(k$$40, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$40);\n}\nexport function containsKey(k$$41, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$41);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  let _arg1$$2;\n\n  const m$$42 = FSharpMap$$get_Tree(m$$41);\n  _arg1$$2 = MapTreeModule$$$tryPick(function f$$39(k$$42, v$$28) {\n    if (f$$38(k$$42, v$$28)) {\n      return some(k$$42);\n    } else {\n      return undefined;\n    }\n  }, m$$42);\n\n  if (_arg1$$2 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$43 = value$$3(_arg1$$2);\n    return k$$43;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  const m$$44 = FSharpMap$$get_Tree(m$$43);\n  return MapTreeModule$$$tryPick(function f$$41(k$$44, v$$29) {\n    if (f$$40(k$$44, v$$29)) {\n      return some(k$$44);\n    } else {\n      return undefined;\n    }\n  }, m$$44);\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  let res$$6;\n  const len = FSharpMap$$get_Count(m$$46) | 0;\n  res$$6 = new Array(len);\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\nexport function createMutable(source$$3, comparer$$22) {\n  const map$$1 = MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3(source$$3, comparer$$22);\n  return map$$1;\n}\nexport function groupBy(projection, xs, comparer$$23) {\n  const dict = createMutable(empty$$1(), comparer$$23);\n  iterate$$1(function (v$$30) {\n    const key = projection(v$$30);\n\n    if (dict.has(key)) {\n      void dict.get(key).push(v$$30);\n    } else {\n      const value = dict.set(key, [v$$30]);\n      void value;\n    }\n  }, xs);\n  return map$$2(function mapping$$2(kv$$3) {\n    return [kv$$3[0], kv$$3[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$24) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    const value$$2 = dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n    void value$$2;\n  }, xs$$1);\n  return map$$2(function mapping$$3(kv$$4) {\n    return [kv$$4[0], kv$$4[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","import { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { some } from \"./Option.js\";\nexport const MutableSet$00601 = declare(function Fable_Collections_MutableSet(items, comparer) {\n  const $this$$1 = this;\n  const this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1.hashMap = new Map([]);\n  $this$$1[\"init@21-2\"] = 1;\n  iterate(function (item) {\n    const value = MutableSet$00601$$Add$$2B595(this$.contents, item);\n    void value;\n  }, items);\n  void null;\n});\nexport function MutableSet$00601$reflection($gen$$4) {\n  return class_type(\"Fable.Collections.MutableSet`1\", [$gen$$4], MutableSet$00601);\n}\nexport function MutableSet$00601$$$$002Ector$$Z6150332D(items, comparer) {\n  return this instanceof MutableSet$00601 ? MutableSet$00601.call(this, items, comparer) : new MutableSet$00601(items, comparer);\n}\n\nfunction MutableSet$00601$$TryFindIndex$$2B595(this$$$1, k) {\n  const h = this$$$1.comparer.GetHashCode(k) | 0;\n  const matchValue = tryGetValue(this$$$1.hashMap, h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (v) {\n      return this$$$1.comparer.Equals(k, v);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nfunction MutableSet$00601$$TryFind$$2B595(this$$$2, k$$1) {\n  const matchValue$$1 = MutableSet$00601$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$9;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 1;\n    }\n  } else {\n    $target$$9 = 1;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return some(getItemFromDict(this$$$2.hashMap, matchValue$$1[1])[matchValue$$1[2]]);\n      }\n\n    case 1:\n      {\n        return undefined;\n      }\n  }\n}\n\nexport function MutableSet$00601$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableSet$00601$$Clear(this$$$4) {\n  this$$$4.hashMap.clear();\n}\nexport function MutableSet$00601$$get_Count(this$$$5) {\n  const source = this$$$5.hashMap.values();\n  return sumBy(function projection(pairs) {\n    return pairs.length;\n  }, source, {\n    GetZero() {\n      return 0;\n    },\n\n    Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n\n  }) | 0;\n}\nexport function MutableSet$00601$$Add$$2B595(this$$$6, k$$2) {\n  const matchValue$$2 = MutableSet$00601$$TryFindIndex$$2B595(this$$$6, k$$2);\n  var $target$$16;\n\n  if (matchValue$$2[0]) {\n    if (matchValue$$2[2] > -1) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return false;\n      }\n\n    case 1:\n      {\n        if (matchValue$$2[0]) {\n          const value$$1 = void getItemFromDict(this$$$6.hashMap, matchValue$$2[1]).push(k$$2);\n          void null;\n          return true;\n        } else {\n          this$$$6.hashMap.set(matchValue$$2[1], [k$$2]);\n          return true;\n        }\n      }\n  }\n}\nexport function MutableSet$00601$$Contains$$2B595(this$$$7, k$$3) {\n  const matchValue$$3 = MutableSet$00601$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$19;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$19 = 0;\n    } else {\n      $target$$19 = 1;\n    }\n  } else {\n    $target$$19 = 1;\n  }\n\n  switch ($target$$19) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableSet$00601$$Remove$$2B595(this$$$8, k$$4) {\n  const matchValue$$4 = MutableSet$00601$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$22;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$22 = 0;\n    } else {\n      $target$$22 = 1;\n    }\n  } else {\n    $target$$22 = 1;\n  }\n\n  switch ($target$$22) {\n    case 0:\n      {\n        getItemFromDict(this$$$8.hashMap, matchValue$$4[1]).splice(matchValue$$4[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableSet$00601.prototype[Symbol.iterator] = function () {\n  var elems;\n  const this$$$9 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (values$$1) {\n      return map(function (value$$2) {\n        return value$$2;\n      }, values$$1);\n    }, this$$$9.hashMap.values());\n  }), getEnumerator(elems)));\n};\n\nMutableSet$00601.prototype.Add = function (item$$1) {\n  const this$$$10 = this;\n  const value$$3 = MutableSet$00601$$Add$$2B595(this$$$10, item$$1);\n  void value$$3;\n};\n\nMutableSet$00601.prototype.Clear = function () {\n  const this$$$11 = this;\n  MutableSet$00601$$Clear(this$$$11);\n};\n\nMutableSet$00601.prototype.Contains = function (item$$2) {\n  const this$$$12 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$12, item$$2);\n};\n\nMutableSet$00601.prototype.CopyTo = function (array, arrayIndex) {\n  const this$$$13 = this;\n  iterateIndexed(function action(i$$8, e) {\n    array[arrayIndex + i$$8] = e;\n  }, this$$$13);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"Count\", {\n  \"get\": function () {\n    const this$$$14 = this;\n    return MutableSet$00601$$get_Count(this$$$14) | 0;\n  }\n});\nObject.defineProperty(MutableSet$00601.prototype, \"IsReadOnly\", {\n  \"get\": function () {\n    return false;\n  }\n});\n\nMutableSet$00601.prototype.Remove = function (item$$3) {\n  const this$$$16 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$16, item$$3);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"size\", {\n  \"get\": function () {\n    const this$$$17 = this;\n    return MutableSet$00601$$get_Count(this$$$17) | 0;\n  }\n});\n\nMutableSet$00601.prototype.add = function (k$$5) {\n  const this$$$18 = this;\n  const value$$4 = MutableSet$00601$$Add$$2B595(this$$$18, k$$5);\n  void value$$4;\n  return this$$$18;\n};\n\nMutableSet$00601.prototype.add_ = function (k$$6) {\n  const this$$$19 = this;\n  return MutableSet$00601$$Add$$2B595(this$$$19, k$$6);\n};\n\nMutableSet$00601.prototype.clear = function () {\n  const this$$$20 = this;\n  MutableSet$00601$$Clear(this$$$20);\n};\n\nMutableSet$00601.prototype.delete = function (k$$7) {\n  const this$$$21 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableSet$00601.prototype.has = function (k$$8) {\n  const this$$$22 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$22, k$$8);\n};\n\nMutableSet$00601.prototype.keys = function () {\n  const this$$$23 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$23);\n};\n\nMutableSet$00601.prototype.values = function () {\n  const this$$$24 = this;\n  return map(function mapping$$1(x$$1) {\n    return x$$1;\n  }, this$$$24);\n};\n\nMutableSet$00601.prototype.entries = function () {\n  const this$$$25 = this;\n  return map(function mapping$$2(v$$1) {\n    return [v$$1, v$$1];\n  }, this$$$25);\n};","import { List, Record, declare, Union } from \"./Types.js\";\nimport { class_type, record_type, bool_type, list_type, union_type, int32_type } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, delay, collect, singleton as singleton$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { MutableSet$00601$$Add$$2B595 as MutableSet$002400601$0024$0024Add$0024$00242B595, MutableSet$00601$$$$002Ector$$Z6150332D as MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D } from \"./MutableSet\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  this.tag = tag | 0;\n  this.name = name;\n  this.fields = fields;\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union_type(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [[\"Item1\", $gen$$3], [\"Item2\", SetTree$00601$reflection($gen$$3)], [\"Item3\", SetTree$00601$reflection($gen$$3)], [\"Item4\", int32_type]]], [\"SetOne\", [[\"Item\", $gen$$3]]]]);\n}\nexport function SetTreeModule$$$countAux($s$$4, $acc$$5) {\n  SetTreeModule$$$countAux: while (true) {\n    const s = $s$$4,\n          acc = $acc$$5;\n\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          $s$$4 = s.fields[1];\n          $acc$$5 = SetTreeModule$$$countAux(s.fields[2], acc + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        return t.fields[3] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  var $target$$16;\n\n  if (l$$2.tag === 0) {\n    if (r$$2.tag === 0) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      if (SetTreeModule$$$height(t2.fields[1]) > t1h + 1) {\n        if (t2.fields[1].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1].fields[1]), t2.fields[1].fields[0], SetTreeModule$$$mk(t2.fields[1].fields[2], t2.fields[0], t2.fields[2]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1]), t2.fields[0], t2.fields[2]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      if (SetTreeModule$$$height(t1.fields[2]) > t2h + 1) {\n        if (t1.fields[2].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1.fields[1], t1.fields[0], t1.fields[2].fields[1]), t1.fields[2].fields[0], SetTreeModule$$$mk(t1.fields[2].fields[2], k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1.fields[1], t1.fields[0], SetTreeModule$$$mk(t1.fields[2], k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const c$$1 = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const c = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, t$$1.fields[1]), t$$1.fields[0], t$$1.fields[2]);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(t$$1.fields[1], t$$1.fields[0], SetTreeModule$$$add(comparer, k$$2, t$$1.fields[2]));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  var $target$$27, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (t1$$1.tag === 2) {\n    if (t2$$1.tag === 0) {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    } else if (t2$$1.tag === 2) {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    } else {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    }\n  } else if (t1$$1.tag === 1) {\n    if (t2$$1.tag === 2) {\n      $target$$27 = 3;\n      k2$$2 = t2$$1.fields[0];\n      t1$$3 = t1$$1;\n    } else if (t2$$1.tag === 1) {\n      $target$$27 = 4;\n      h1 = t1$$1.fields[3];\n      h2 = t2$$1.fields[3];\n      k1$$1 = t1$$1.fields[0];\n      k2$$3 = t2$$1.fields[0];\n      t11 = t1$$1.fields[1];\n      t12 = t1$$1.fields[2];\n      t21 = t2$$1.fields[1];\n      t22 = t2$$1.fields[2];\n    } else {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    }\n  } else {\n    $target$$27 = 0;\n    t2$$2 = t2$$1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const c$$3 = comparer$$2.Compare(t$$2.fields[0], pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const c$$2 = comparer$$2.Compare(pivot, t$$2.fields[0]) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[1]);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], t$$2.fields[0], t$$2.fields[2])];\n        } else if (c$$2 === 0) {\n          return [t$$2.fields[1], true, t$$2.fields[2]];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[2]);\n          return [SetTreeModule$$$balance(comparer$$2, t$$2.fields[1], t$$2.fields[0], patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        return [t$$3.fields[0], new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        if (t$$3.fields[1].tag === 0) {\n          return [t$$3.fields[0], t$$3.fields[2]];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(t$$3.fields[1]);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], t$$3.fields[0], t$$3.fields[2])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const c$$4 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const c$$5 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[1]), t$$4.fields[0], t$$4.fields[2]);\n        } else if (c$$5 === 0) {\n          if (t$$4.fields[1].tag === 0) {\n            return t$$4.fields[2];\n          } else if (t$$4.fields[2].tag === 0) {\n            return t$$4.fields[1];\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(t$$4.fields[2]);\n            return SetTreeModule$$$mk(t$$4.fields[1], patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(t$$4.fields[1], t$$4.fields[0], SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[2]));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem($comparer$$4$$35, $k$$5$$36, $t$$5$$37) {\n  SetTreeModule$$$mem: while (true) {\n    const comparer$$4 = $comparer$$4$$35,\n          k$$5 = $k$$5$$36,\n          t$$5 = $t$$5$$37;\n\n    switch (t$$5.tag) {\n      case 2:\n        {\n          return comparer$$4.Compare(k$$5, t$$5.fields[0]) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const c$$6 = comparer$$4.Compare(k$$5, t$$5.fields[0]) | 0;\n\n          if (c$$6 < 0) {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[1];\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[2];\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($f$$38, $t$$6$$39) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $f$$38,\n          t$$6 = $t$$6$$39;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          f(t$$6.fields[0]);\n          break;\n        }\n\n      case 0:\n        {\n          void null;\n          break;\n        }\n\n      default:\n        {\n          SetTreeModule$$$iter(f, t$$6.fields[1]);\n          f(t$$6.fields[0]);\n          $f$$38 = f;\n          $t$$6$$39 = t$$6.fields[2];\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($f$$1$$40, $m$$1$$41, $x$$1$$42) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $f$$1$$40,\n          m$$1 = $m$$1$$41,\n          x$$1 = $x$$1$$42;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          return f$$1(m$$1.fields[0], x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          $f$$1$$40 = f$$1;\n          $m$$1$$41 = m$$1.fields[1];\n          $x$$1$$42 = f$$1(m$$1.fields[0], SetTreeModule$$$foldBack(f$$1, m$$1.fields[2], x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($f$$2$$43, $x$$2$$44, $m$$2$$45) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $f$$2$$43,\n          x$$2 = $x$$2$$44,\n          m$$2 = $m$$2$$45;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          return f$$2(x$$2, m$$2.fields[0]);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, m$$2.fields[1]);\n          const x$$4 = f$$2(x$$3, m$$2.fields[0]);\n          $f$$2$$43 = f$$2;\n          $x$$2$$44 = x$$4;\n          $m$$2$$45 = m$$2.fields[2];\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($f$$3$$46, $m$$3$$47) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $f$$3$$46,\n          m$$3 = $m$$3$$47;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          return f$$3(m$$3.fields[0]);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          if (f$$3(m$$3.fields[0]) ? SetTreeModule$$$forall(f$$3, m$$3.fields[1]) : false) {\n            $f$$3$$46 = f$$3;\n            $m$$3$$47 = m$$3.fields[2];\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($f$$4$$48, $m$$4$$49) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $f$$4$$48,\n          m$$4 = $m$$4$$49;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          return f$$4(m$$4.fields[0]);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          if (f$$4(m$$4.fields[0]) ? true : SetTreeModule$$$exists(f$$4, m$$4.fields[1])) {\n            return true;\n          } else {\n            $f$$4$$48 = f$$4;\n            $m$$4$$49 = m$$4.fields[2];\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($comparer$$7$$57, $f$$5$$58, $s$$2$$59, $acc$$1$$60) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $comparer$$7$$57,\n          f$$5 = $f$$5$$58,\n          s$$2 = $s$$2$$59,\n          acc$$1 = $acc$$1$$60;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          if (f$$5(s$$2.fields[0])) {\n            return SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const acc$$2 = f$$5(s$$2.fields[0]) ? SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1) : acc$$1;\n          $comparer$$7$$57 = comparer$$7;\n          $f$$5$$58 = f$$5;\n          $s$$2$$59 = s$$2.fields[1];\n          $acc$$1$$60 = SetTreeModule$$$filterAux(comparer$$7, f$$5, s$$2.fields[2], acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux($comparer$$9$$64, $m$$6$$65, $acc$$3$$66) {\n  SetTreeModule$$$diffAux: while (true) {\n    const comparer$$9 = $comparer$$9$$64,\n          m$$6 = $m$$6$$65,\n          acc$$3 = $acc$$3$$66;\n\n    switch (m$$6.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          $comparer$$9$$64 = comparer$$9;\n          $m$$6$$65 = m$$6.fields[1];\n          $acc$$3$$66 = SetTreeModule$$$diffAux(comparer$$9, m$$6.fields[2], SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  var $target$$73, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (t1$$4.tag === 0) {\n    $target$$73 = 1;\n    t$$7 = t2$$4;\n  } else if (t1$$4.tag === 2) {\n    if (t2$$4.tag === 0) {\n      $target$$73 = 2;\n      t$$8 = t1$$4;\n    } else if (t2$$4.tag === 2) {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    } else {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    }\n  } else if (t2$$4.tag === 0) {\n    $target$$73 = 2;\n    t$$8 = t1$$4;\n  } else if (t2$$4.tag === 2) {\n    $target$$73 = 4;\n    k2$$17 = t2$$4.fields[0];\n    t1$$5 = t1$$4;\n  } else {\n    $target$$73 = 0;\n    h1$$1 = t1$$4.fields[3];\n    h2$$1 = t2$$4.fields[3];\n    k1$$4 = t1$$4.fields[0];\n    k2$$16 = t2$$4.fields[0];\n    t11$$2 = t1$$4.fields[1];\n    t12$$2 = t1$$4.fields[2];\n    t21$$1 = t2$$4.fields[1];\n    t22$$1 = t2$$4.fields[2];\n  }\n\n  switch ($target$$73) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux($comparer$$12$$74, $b$$3$$75, $m$$7$$76, $acc$$4$$77) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    const comparer$$12 = $comparer$$12$$74,\n          b$$3 = $b$$3$$75,\n          m$$7 = $m$$7$$76,\n          acc$$4 = $acc$$4$$77;\n\n    switch (m$$7.tag) {\n      case 2:\n        {\n          if (SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7.fields[2], acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3) ? SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$5) : acc$$5;\n          $comparer$$12$$74 = comparer$$12;\n          $b$$3$$75 = b$$3;\n          $m$$7$$76 = m$$7.fields[1];\n          $acc$$4$$77 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($comparer$$15$$86, $f$$8$$87, $s$$4$$88, $acc_0$$89, $acc_1$$90) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $comparer$$15$$86,\n          f$$8 = $f$$8$$87,\n          s$$4 = $s$$4$$88,\n          acc_0 = $acc_0$$89,\n          acc_1 = $acc_1$$90;\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc_0, acc_1);\n        }\n\n      case 0:\n        {\n          return [acc_0, acc_1];\n        }\n\n      default:\n        {\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, s$$4.fields[2], acc_0, acc_1);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc$$8[0], acc$$8[1]);\n          $comparer$$15$$86 = comparer$$15;\n          $f$$8$$87 = f$$8;\n          $s$$4$$88 = s$$4.fields[1];\n          $acc_0$$89 = acc$$9[0];\n          $acc_1$$90 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", void null);\n      }\n\n    default:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], s$$6.fields[1], s$$6.fields[2]]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux($s$$7$$95, $n$$1$$96) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    const s$$7 = $s$$7$$95,\n          n$$1 = $n$$1$$96;\n\n    switch (s$$7.tag) {\n      case 2:\n        {\n          return s$$7.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          $s$$7$$95 = s$$7.fields[1];\n          $n$$1$$96 = s$$7.fields[0];\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        return some(s$$8.fields[0]);\n      }\n\n    case 0:\n      {\n        return undefined;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$minimumElementAux(s$$8.fields[1], s$$8.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux($s$$9$$98, $n$$2$$99) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    const s$$9 = $s$$9$$98,\n          n$$2 = $n$$2$$99;\n\n    switch (s$$9.tag) {\n      case 2:\n        {\n          return s$$9.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          $s$$9$$98 = s$$9.fields[2];\n          $n$$2$$99 = s$$9.fields[0];\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        return some(s$$10.fields[0]);\n      }\n\n    case 0:\n      {\n        return undefined;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$maximumElementAux(s$$10.fields[2], s$$10.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(stack, started) {\n  this.stack = stack;\n  this.started = started;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$103) {\n  return record_type(\"Set.SetTreeModule.SetIterator`1\", [$gen$$103], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list_type(SetTree$00601$reflection($gen$$103))], [\"started\", bool_type]]);\n}\nexport function SetTreeModule$$$collapseLHS($stack$$104) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    const stack = $stack$$104;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        $stack$$104 = new List(stack.head.fields[1], new List(SetTreeModule$$$SetOne(stack.head.fields[0]), new List(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        $stack$$104 = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n  void null;\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$108) {\n  return class_type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$108], SetTreeModule$002EmkIEnumerator$00601);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {\n  void null;\n};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return undefined;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks($comparer$$17$$112, $l1$$113, $l2$$114) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const comparer$$17 = $comparer$$17$$112,\n          l1 = $l1$$113,\n          l2 = $l2$$114;\n    var $target$$115, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (l1.tail != null) {\n      if (l2.tail != null) {\n        if (l2.head.tag === 2) {\n          if (l1.head.tag === 2) {\n            $target$$115 = 4;\n            n1k = l1.head.fields[0];\n            n2k = l2.head.fields[0];\n            t1$$7 = l1.tail;\n            t2$$7 = l2.tail;\n          } else if (l1.head.tag === 1) {\n            if (l1.head.fields[1].tag === 0) {\n              $target$$115 = 6;\n              emp = l1.head.fields[1];\n              n1k$$2 = l1.head.fields[0];\n              n1r = l1.head.fields[2];\n              n2k$$2 = l2.head.fields[0];\n              t1$$9 = l1.tail;\n              t2$$9 = l2.tail;\n            } else {\n              $target$$115 = 9;\n              n1k$$5 = l1.head.fields[0];\n              n1l = l1.head.fields[1];\n              n1r$$2 = l1.head.fields[2];\n              t1$$12 = l1.tail;\n            }\n          } else {\n            $target$$115 = 10;\n            n2k$$4 = l2.head.fields[0];\n            t2$$11 = l2.tail;\n          }\n        } else if (l2.head.tag === 1) {\n          if (l2.head.fields[1].tag === 0) {\n            if (l1.head.tag === 2) {\n              $target$$115 = 5;\n              n1k$$1 = l1.head.fields[0];\n              n2k$$1 = l2.head.fields[0];\n              n2r = l2.head.fields[2];\n              t1$$8 = l1.tail;\n              t2$$8 = l2.tail;\n            } else if (l1.head.tag === 1) {\n              if (l1.head.fields[1].tag === 0) {\n                $target$$115 = 7;\n                n1k$$3 = l1.head.fields[0];\n                n1r$$1 = l1.head.fields[2];\n                n2k$$3 = l2.head.fields[0];\n                n2r$$1 = l2.head.fields[2];\n                t1$$10 = l1.tail;\n                t2$$10 = l2.tail;\n              } else {\n                $target$$115 = 9;\n                n1k$$5 = l1.head.fields[0];\n                n1l = l1.head.fields[1];\n                n1r$$2 = l1.head.fields[2];\n                t1$$12 = l1.tail;\n              }\n            } else {\n              $target$$115 = 11;\n              n2k$$5 = l2.head.fields[0];\n              n2l = l2.head.fields[1];\n              n2r$$2 = l2.head.fields[2];\n              t2$$12 = l2.tail;\n            }\n          } else if (l1.head.tag === 2) {\n            $target$$115 = 8;\n            n1k$$4 = l1.head.fields[0];\n            t1$$11 = l1.tail;\n          } else if (l1.head.tag === 1) {\n            $target$$115 = 9;\n            n1k$$5 = l1.head.fields[0];\n            n1l = l1.head.fields[1];\n            n1r$$2 = l1.head.fields[2];\n            t1$$12 = l1.tail;\n          } else {\n            $target$$115 = 11;\n            n2k$$5 = l2.head.fields[0];\n            n2l = l2.head.fields[1];\n            n2r$$2 = l2.head.fields[2];\n            t2$$12 = l2.tail;\n          }\n        } else if (l1.head.tag === 2) {\n          $target$$115 = 8;\n          n1k$$4 = l1.head.fields[0];\n          t1$$11 = l1.tail;\n        } else if (l1.head.tag === 1) {\n          $target$$115 = 9;\n          n1k$$5 = l1.head.fields[0];\n          n1l = l1.head.fields[1];\n          n1r$$2 = l1.head.fields[2];\n          t1$$12 = l1.tail;\n        } else {\n          $target$$115 = 3;\n          t1$$6 = l1.tail;\n          t2$$6 = l2.tail;\n        }\n      } else {\n        $target$$115 = 2;\n      }\n    } else if (l2.tail != null) {\n      $target$$115 = 1;\n    } else {\n      $target$$115 = 0;\n    }\n\n    switch ($target$$115) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = t1$$6;\n          $l2$$114 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = t1$$7;\n            $l2$$114 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            $l2$$114 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r, t1$$9);\n            $l2$$114 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r$$1, t1$$10);\n            $l2$$114 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  if (s1.tag === 0) {\n    if (s2.tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (s2.tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop($m$$8$$120, $acc$$10$$121) {\n  SetTreeModule$$$loop: while (true) {\n    const m$$8 = $m$$8$$120,\n          acc$$10 = $acc$$10$$121;\n\n    switch (m$$8.tag) {\n      case 2:\n        {\n          return new List(m$$8.fields[0], acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          $m$$8$$120 = m$$8.fields[1];\n          $acc$$10$$121 = new List(m$$8.fields[0], SetTreeModule$$$loop(m$$8.fields[2], acc$$10));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator($comparer$$19$$126, $acc$$11$$127, $e$$128) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    const comparer$$19 = $comparer$$19$$126,\n          acc$$11 = $acc$$11$$127,\n          e = $e$$128;\n\n    if (e.MoveNext()) {\n      $comparer$$19$$126 = comparer$$19;\n      $acc$$11$$127 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      $e$$128 = e;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    } else {\n      void null;\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n  void null;\n});\nexport function FSharpSet$reflection($gen$$133) {\n  return class_type(\"Set.FSharpSet\", [$gen$$133], FSharpSet);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  const matchValue$$10 = FSharpSet$$get_Tree(s$$27);\n\n  if (matchValue$$10.tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  const matchValue$$11 = FSharpSet$$get_Tree(s$$28);\n\n  if (matchValue$$11.tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$7597B8F7(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  const matchValue$$12 = FSharpSet$$get_Tree(a$$4);\n\n  if (matchValue$$12.tag === 0) {\n    return a$$4;\n  } else {\n    const matchValue$$13 = FSharpSet$$get_Tree(b$$5);\n\n    if (matchValue$$13.tag === 0) {\n      return a$$4;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n    }\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  const matchValue$$14 = FSharpSet$$get_Tree(b$$6);\n\n  if (matchValue$$14.tag === 0) {\n    return a$$5;\n  } else {\n    const matchValue$$15 = FSharpSet$$get_Tree(a$$5);\n\n    if (matchValue$$15.tag === 0) {\n      return b$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n    }\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  const matchValue$$16 = FSharpSet$$get_Tree(b$$7);\n\n  if (matchValue$$16.tag === 0) {\n    return b$$7;\n  } else {\n    const matchValue$$17 = FSharpSet$$get_Tree(a$$6);\n\n    if (matchValue$$17.tag === 0) {\n      return a$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n    }\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  var strings;\n  const this$ = this;\n  return \"set [\" + (strings = map$$1(function (x$$21) {\n    let copyOfStruct = x$$21;\n    return String(copyOfStruct);\n  }, this$), (join(\"; \", strings))) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const x$$22 = res | 0;\n    const y$$4 = structuralHash(e$$1.Current) | 0;\n    res = (x$$22 << 1) + y$$4 + 631;\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$7597B8F7(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\nexport function createMutable(source, comparer$$31) {\n  const set = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(source, comparer$$31);\n  return set;\n}\nexport function distinct(xs, comparer$$32) {\n  return delay(function () {\n    const set$$1 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$32);\n    return collect(function (x$$33) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$1, x$$33) ? singleton$$1(x$$33) : empty$$1();\n    }, xs);\n  });\n}\nexport function distinctBy(projection, xs$$1, comparer$$33) {\n  return delay(function () {\n    const set$$2 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$33);\n    return collect(function (x$$34) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$2, projection(x$$34)) ? singleton$$1(x$$34) : empty$$1();\n    }, xs$$1);\n  });\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$35) {\n    return acc$$14.add(x$$35);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$34) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$34);\n  iterate$$1(function (x$$36) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$36)) {\n      const value = s1$$5.delete(x$$36);\n      void value;\n    } else {\n      void null;\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$37) {\n    const value$$1 = s1$$6.delete(x$$37);\n    void value$$1;\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$35) {\n  return isSubset(ofSeq(s1$$7, comparer$$35), ofSeq(s2$$8, comparer$$35));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$36) {\n  return isSuperset(ofSeq(s1$$8, comparer$$36), ofSeq(s2$$9, comparer$$36));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$37) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$37), ofSeq(s2$$10, comparer$$37));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$38) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$38), ofSeq(s2$$11, comparer$$38));\n}","import { defaultArg, value as value$$15, some } from \"./Option.js\";\nimport { min as min$$1, compare, addToDict, addToSet, getItemFromDict, tryGetValue, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\nimport { iterate as iterate$$1 } from \"./Seq.js\";\nconst indexNotFoundMsg = \"An index satisfying the predicate was not found in the collection.\";\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return undefined;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function (delegateArg0, delegateArg1) {\n      return f(delegateArg1, delegateArg0);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    let acc = state;\n    const res = new cons$$7(matchValue);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(matchValue$$1);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  var arr$$4;\n  const arrays$$1 = Array.isArray(arrays) ? arrays : Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (arr$$4 = arrays$$1[0], ArrayBuffer.isView(arr$$4)) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$5 = arrays$$1[idx];\n            totalLength = totalLength + arr$$5.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$6 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$6.length - 1; j++) {\n              result$$4[totalIdx] = arr$$6[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], eq);\n  const keys = [];\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n      const value$$3 = keys.push(key);\n      void value$$3;\n    }\n  }\n\n  const result$$5 = map(function (key$$1) {\n    return [key$$1, getItemFromDict(dict, key$$1)];\n  }, keys, Array);\n  return result$$5;\n}\nexport function distinctBy(projection$$1, array$$17, eq$$1) {\n  const hashSet = createMutable$$1([], eq$$1);\n  return filter(function predicate$$2($arg$$3) {\n    const arg00 = projection$$1($arg$$3);\n    return addToSet(arg00, hashSet);\n  }, array$$17);\n}\nexport function distinct(array$$19, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$19, eq$$2);\n}\nexport function where(predicate$$3, array$$20) {\n  return array$$20.filter(predicate$$3);\n}\nexport function contains(value$$4, array$$22, eq$$3) {\n  const loop = function loop($i$$12$$79) {\n    loop: while (true) {\n      const i$$12 = $i$$12$$79;\n\n      if (i$$12 >= array$$22.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$4, array$$22[i$$12])) {\n        return true;\n      } else {\n        $i$$12$$79 = i$$12 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$23, eq$$4) {\n  if (array$$23.length === 0) {\n    return array$$23;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, eq$$4);\n    return array$$23.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$26, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], eq$$5);\n  const keys$$1 = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$26.length - 1; idx$$3++) {\n    const v = array$$26[idx$$3];\n    const key$$2 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$2, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$2, new List(v, new List()));\n      const value$$5 = keys$$1.push(key$$2);\n      void value$$5;\n    }\n  }\n\n  const result$$6 = map(function (key$$3) {\n    var array$$28;\n    return [key$$3, (array$$28 = cons$$11.from(getItemFromDict(dict$$1, key$$3)), (array$$28.reverse()))];\n  }, keys$$1, Array);\n  return result$$6;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$6, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$6;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  const result$$7 = new cons$$15(count$$8);\n\n  for (let i$$13 = 0; i$$13 <= count$$8 - 1; i$$13++) {\n    result$$7[i$$13] = initializer(i$$13);\n  }\n\n  return result$$7;\n}\nexport function pairwise(array$$30) {\n  if (array$$30.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$30.length - 1 | 0;\n    const result$$8 = new Array(count$$9);\n\n    for (let i$$14 = 0; i$$14 <= count$$9 - 1; i$$14++) {\n      result$$8[i$$14] = [array$$30[i$$14], array$$30[i$$14 + 1]];\n    }\n\n    return result$$8;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  const result$$9 = new cons$$16(count$$10);\n\n  for (let i$$15 = 0; i$$15 <= result$$9.length - 1; i$$15++) {\n    result$$9[i$$15] = initial;\n  }\n\n  return result$$9;\n}\nexport function copy(array$$31, cons$$17) {\n  return array$$31.slice();\n}\nexport function reverse(array$$33, cons$$18) {\n  const array$$35 = array$$33.slice();\n  return array$$35.reverse();\n}\nexport function scan(folder, state$$2, array$$37, cons$$19) {\n  const res$$2 = new cons$$19(array$$37.length + 1);\n  res$$2[0] = state$$2;\n\n  for (let i$$16 = 0; i$$16 <= array$$37.length - 1; i$$16++) {\n    res$$2[i$$16 + 1] = folder(res$$2[i$$16], array$$37[i$$16]);\n  }\n\n  return res$$2;\n}\nexport function scanBack(folder$$1, array$$38, state$$3, cons$$20) {\n  const res$$3 = new cons$$20(array$$38.length + 1);\n  res$$3[array$$38.length] = state$$3;\n\n  for (let i$$17 = array$$38.length - 1; i$$17 >= 0; i$$17--) {\n    res$$3[i$$17] = folder$$1(array$$38[i$$17], res$$3[i$$17 + 1]);\n  }\n\n  return res$$3;\n}\nexport function skip(count$$11, array$$39, cons$$21) {\n  if (count$$11 > array$$39.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$11 === array$$39.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$39.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$41, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$41.length ? predicate$$7(array$$41[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$41.length) {\n    return new cons$$23(0);\n  } else {\n    const count$$15 = count$$14 | 0;\n    return array$$41.slice(count$$15);\n  }\n}\nexport function take(count$$16, array$$43, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$16 > array$$43.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  } else {\n    void null;\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$45, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$45.length ? predicate$$8(array$$45[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    const count$$19 = count$$18 | 0;\n    return array$$45.slice(0, 0 + count$$19);\n  }\n}\nexport function addInPlace(x$$3, array$$47) {\n  const value$$7 = array$$47.push(x$$3);\n  void value$$7;\n}\nexport function addRangeInPlace(range, array$$49) {\n  iterate$$1(function (x$$4) {\n    const value$$8 = array$$49.push(x$$4);\n    void value$$8;\n  }, range);\n}\nexport function removeInPlace(item$$5, array$$51) {\n  const i$$18 = array$$51.indexOf(item$$5);\n\n  if (i$$18 > -1) {\n    const value$$9 = array$$51.splice(i$$18, 1);\n    void value$$9;\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$54) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$19 = array$$54.findIndex(predicate$$9);\n\n    if (i$$19 > -1) {\n      const value$$10 = array$$54.splice(i$$19, 1);\n      void value$$10;\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$3, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$20 = sourceIndex; i$$20 <= sourceIndex + count$$21 - 1; i$$20++) {\n    target$$4[i$$20 + diff] = source$$3[i$$20];\n  }\n}\nexport function partition(f$$6, source$$4, cons$$29) {\n  const len$$7 = source$$4.length | 0;\n  const res1 = new cons$$29(len$$7);\n  const res2 = new cons$$29(len$$7);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$21 = 0; i$$21 <= len$$7 - 1; i$$21++) {\n    if (f$$6(source$$4[i$$21])) {\n      res1[iTrue] = source$$4[i$$21];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$4[i$$21];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [(truncate(iTrue, res1)), (truncate(iFalse, res2))];\n}\nexport function find(predicate$$11, array$$59) {\n  const matchValue$$5 = array$$59.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    throw new Error(indexNotFoundMsg);\n  } else {\n    const res$$4 = value$$15(matchValue$$5);\n    return res$$4;\n  }\n}\nexport function tryFind(predicate$$13, array$$61) {\n  return array$$61.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$63) {\n  const matchValue$$6 = array$$63.findIndex(predicate$$15);\n\n  if (matchValue$$6 > -1) {\n    return matchValue$$6 | 0;\n  } else {\n    throw new Error(indexNotFoundMsg);\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$65) {\n  const matchValue$$7 = array$$65.findIndex(predicate$$17);\n\n  if (matchValue$$7 > -1) {\n    return matchValue$$7;\n  } else {\n    return undefined;\n  }\n}\nexport function pick(chooser, array$$67) {\n  const loop$$1 = function loop$$1($i$$22$$149) {\n    loop$$1: while (true) {\n      const i$$22 = $i$$22$$149;\n\n      if (i$$22 >= array$$67.length) {\n        throw new Error(indexNotFoundMsg);\n      } else {\n        const matchValue$$8 = chooser(array$$67[i$$22]);\n\n        if (matchValue$$8 != null) {\n          const res$$5 = value$$15(matchValue$$8);\n          return res$$5;\n        } else {\n          $i$$22$$149 = i$$22 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$68) {\n  const loop$$2 = function loop$$2($i$$23$$152) {\n    loop$$2: while (true) {\n      const i$$23 = $i$$23$$152;\n\n      if (i$$23 >= array$$68.length) {\n        return undefined;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$68[i$$23]);\n\n        if (matchValue$$9 == null) {\n          $i$$23$$152 = i$$23 + 1;\n          continue loop$$2;\n        } else {\n          return matchValue$$9;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$69) {\n  const loop$$3 = function loop$$3($i$$24$$155) {\n    loop$$3: while (true) {\n      const i$$24 = $i$$24$$155;\n\n      if (i$$24 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$19(array$$69[i$$24])) {\n        return array$$69[i$$24];\n      } else {\n        $i$$24$$155 = i$$24 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$69.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$70) {\n  const loop$$4 = function loop$$4($i$$25$$158) {\n    loop$$4: while (true) {\n      const i$$25 = $i$$25$$158;\n\n      if (i$$25 < 0) {\n        return undefined;\n      } else if (predicate$$20(array$$70[i$$25])) {\n        return some(array$$70[i$$25]);\n      } else {\n        $i$$25$$158 = i$$25 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$70.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$71) {\n  const loop$$5 = function loop$$5($i$$26$$161) {\n    loop$$5: while (true) {\n      const i$$26 = $i$$26$$161;\n\n      if (i$$26 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$71[i$$26])) {\n        return i$$26 | 0;\n      } else {\n        $i$$26$$161 = i$$26 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$71.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$72) {\n  const loop$$6 = function loop$$6($i$$27$$164) {\n    loop$$6: while (true) {\n      const i$$27 = $i$$27$$164;\n\n      if (i$$27 < 0) {\n        throw new Error(indexNotFoundMsg);\n      } else if (predicate$$22(array$$72[i$$27])) {\n        return i$$27 | 0;\n      } else {\n        $i$$27$$164 = i$$27 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$72.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$73) {\n  const loop$$7 = function loop$$7($i$$28$$167) {\n    loop$$7: while (true) {\n      const i$$28 = $i$$28$$167;\n\n      if (i$$28 < 0) {\n        return undefined;\n      } else if (predicate$$23(array$$73[i$$28])) {\n        return i$$28;\n      } else {\n        $i$$28$$167 = i$$28 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$73.length - 1);\n}\nexport function choose(chooser$$2, array$$74, cons$$30) {\n  const arr$$7 = array$$74.filter(function f$$7(x$$5) {\n    const option = chooser$$2(x$$5);\n    return option != null;\n  });\n  return map(function g(x$$6) {\n    const option$$1 = chooser$$2(x$$6);\n    return value$$15(option$$1);\n  }, arr$$7, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$76) {\n  return array$$76.reduce(function (delegateArg0$$1, delegateArg1$$1, delegateArg2) {\n    return folder$$2(delegateArg2, delegateArg0$$1, delegateArg1$$1);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$78) {\n  return array$$78.reduce(function (delegateArg0$$2, delegateArg1$$2) {\n    return folder$$4(delegateArg0$$2, delegateArg1$$2);\n  }, state$$6);\n}\nexport function iterate(action, array$$80) {\n  for (let i$$30 = 0; i$$30 <= array$$80.length - 1; i$$30++) {\n    action(array$$80[i$$30]);\n  }\n}\nexport function iterateIndexed(action$$1, array$$81) {\n  for (let i$$31 = 0; i$$31 <= array$$81.length - 1; i$$31++) {\n    action$$1(i$$31, array$$81[i$$31]);\n  }\n}\nexport function iterate2(action$$2, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$32 = 0; i$$32 <= array1$$2.length - 1; i$$32++) {\n    action$$2(array1$$2[i$$32], array2$$2[i$$32]);\n  }\n}\nexport function iterateIndexed2(action$$3, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$33 = 0; i$$33 <= array1$$3.length - 1; i$$33++) {\n    action$$3(i$$33, array1$$3[i$$33], array2$$3[i$$33]);\n  }\n}\nexport function isEmpty(array$$82) {\n  return array$$82.length === 0;\n}\nexport function forAll(predicate$$25, array$$83) {\n  return array$$83.every(predicate$$25);\n}\nexport function permute(f$$8, array$$85) {\n  const size = array$$85.length | 0;\n  const res$$7 = array$$85.slice();\n  const checkFlags = new Int32Array(size);\n  iterateIndexed(function (i$$34, x$$9) {\n    const j$$1 = f$$8(i$$34) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    } else {\n      void null;\n    }\n\n    res$$7[j$$1] = x$$9;\n    checkFlags[j$$1] = 1;\n  }, array$$85);\n  let isValid;\n  isValid = checkFlags.every(function predicate$$27(y) {\n    return 1 === y;\n  });\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  } else {\n    void null;\n  }\n\n  return res$$7;\n}\nexport function setSlice(target$$5, lower, upper, source$$5) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  for (let i$$35 = 0; i$$35 <= length; i$$35++) {\n    target$$5[i$$35 + lower$$1] = source$$5[i$$35];\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$11, y$$1) {\n    return comparer.Compare(projection$$3(x$$11), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$12, y$$2) {\n    return comparer$$1.Compare(x$$12, y$$2);\n  });\n}\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = xs$$2.slice();\n  xs$$3.sort(function comparer$$3(x$$13, y$$3) {\n    return comparer$$2.Compare(x$$13, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = xs$$4.slice();\n  xs$$5.sort(function comparer$$5(x$$14, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$14), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = xs$$6.slice();\n  xs$$7.sort(function comparer$$7(x$$15, y$$5) {\n    return comparer$$6.Compare(x$$15, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = xs$$8.slice();\n  xs$$9.sort(function comparer$$9(x$$16, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$16), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = xs$$10.slice();\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$8 = [];\n\n  const loop$$8 = function loop$$8($state$$9$$226) {\n    loop$$8: while (true) {\n      const state$$9 = $state$$9$$226;\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$17 = matchValue$$10[0];\n        const s$$2 = matchValue$$10[1];\n        const value$$11 = res$$8.push(x$$17);\n        void value$$11;\n        $state$$9$$226 = s$$2;\n        continue loop$$8;\n      } else {\n        void null;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$8;\n}\nexport function unzip(array$$95) {\n  const len$$8 = array$$95.length | 0;\n  const res1$$1 = new Array(len$$8);\n  const res2$$1 = new Array(len$$8);\n  iterateIndexed(function (i$$36, tupledArg) {\n    res1$$1[i$$36] = tupledArg[0];\n    res2$$1[i$$36] = tupledArg[1];\n  }, array$$95);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$96) {\n  const len$$11 = array$$96.length | 0;\n  const res1$$2 = new Array(len$$11);\n  const res2$$2 = new Array(len$$11);\n  const res3 = new Array(len$$11);\n  iterateIndexed(function (i$$37, tupledArg$$1) {\n    res1$$2[i$$37] = tupledArg$$1[0];\n    res2$$2[i$$37] = tupledArg$$1[1];\n    res3[i$$37] = tupledArg$$1[2];\n  }, array$$96);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  let result$$10;\n  const len$$15 = array1$$4.length | 0;\n  result$$10 = new Array(len$$15);\n\n  for (let i$$38 = 0; i$$38 <= array1$$4.length - 1; i$$38++) {\n    result$$10[i$$38] = [array1$$4[i$$38], array2$$4[i$$38]];\n  }\n\n  return result$$10;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  let result$$11;\n  const len$$16 = array1$$5.length | 0;\n  result$$11 = new Array(len$$16);\n\n  for (let i$$39 = 0; i$$39 <= array1$$5.length - 1; i$$39++) {\n    result$$11[i$$39] = [array1$$5[i$$39], array2$$5[i$$39], array3[i$$39]];\n  }\n\n  return result$$11;\n}\nexport function chunkBySize(chunkSize, array$$97) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  } else {\n    void null;\n  }\n\n  if (array$$97.length === 0) {\n    return [[]];\n  } else {\n    const result$$12 = [];\n\n    for (let x$$18 = 0; x$$18 <= ~~Math.ceil(array$$97.length / chunkSize) - 1; x$$18++) {\n      const start$$8 = x$$18 * chunkSize | 0;\n      const slice = array$$97.slice(start$$8, start$$8 + chunkSize);\n      const value$$12 = result$$12.push(slice);\n      void value$$12;\n    }\n\n    return result$$12;\n  }\n}\nexport function splitAt(index$$4, array$$100) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  } else {\n    void null;\n  }\n\n  if (index$$4 > array$$100.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  } else {\n    void null;\n  }\n\n  return [array$$100.slice(0, 0 + index$$4), array$$100.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$40 = 0;\n    let result$$13 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$40 < length1 ? result$$13 === 0 : false) {\n        result$$13 = comparer$$12(array1$$6[i$$40], array2$$6[i$$40]);\n        i$$40 = i$$40 + 1;\n      }\n\n      return result$$13 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$103) {\n  if (array$$103.length === 1) {\n    return array$$103[0];\n  } else if (array$$103.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$104) {\n  if (array$$104.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$104[0];\n  }\n}\nexport function tryHead(array$$105) {\n  if (array$$105.length === 0) {\n    return undefined;\n  } else {\n    return some(array$$105[0]);\n  }\n}\nexport function tail(array$$106) {\n  if (array$$106.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  return array$$106.slice(1);\n}\nexport function item(index$$5, array$$108) {\n  return array$$108[index$$5];\n}\nexport function tryItem(index$$6, array$$109) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$109.length) {\n    return undefined;\n  } else {\n    return some(array$$109[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$110, state$$10) {\n  return array$$110.reduceRight(function (delegateArg0$$3, delegateArg1$$3, delegateArg2$$1) {\n    return folder$$6(delegateArg2$$1, delegateArg1$$3, delegateArg0$$3);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$112, state$$12) {\n  return array$$112.reduceRight(function (delegateArg0$$4, delegateArg1$$4) {\n    return folder$$8(delegateArg1$$4, delegateArg0$$4);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  } else {\n    void null;\n  }\n\n  for (let i$$42 = 0; i$$42 <= array1$$8.length - 1; i$$42++) {\n    acc$$6 = folder$$10(i$$42, acc$$6, array1$$8[i$$42], array2$$8[i$$42]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$21, y$$7) {\n    return folder$$11(acc$$7, x$$21, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$43 = 1; i$$43 <= size$$1; i$$43++) {\n    acc$$8 = folder$$12(i$$43 - 1, array1$$10[size$$1 - i$$43], array2$$10[size$$1 - i$$43], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$22, y$$8, acc$$9) {\n    return f$$9(x$$22, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$114) {\n  if (array$$114.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    void null;\n  }\n\n  return array$$114.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$116) {\n  if (array$$116.length === 0) {\n    throw new Error(\"The input array was empty\");\n  } else {\n    void null;\n  }\n\n  return array$$116.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$29, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$23, y$$9) {\n    return acc$$10 ? predicate$$29(x$$23, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($predicate$$30$$281, $array$$118$$282, $index$$7$$283) {\n  existsOffset: while (true) {\n    const predicate$$30 = $predicate$$30$$281,\n          array$$118 = $array$$118$$282,\n          index$$7 = $index$$7$$283;\n\n    if (index$$7 === array$$118.length) {\n      return false;\n    } else if (predicate$$30(array$$118[index$$7])) {\n      return true;\n    } else {\n      $predicate$$30$$281 = predicate$$30;\n      $array$$118$$282 = array$$118;\n      $index$$7$$283 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$31, array$$119) {\n  return existsOffset(predicate$$31, array$$119, 0);\n}\nexport function existsOffset2($predicate$$32$$286, $array1$$13$$287, $array2$$13$$288, $index$$8$$289) {\n  existsOffset2: while (true) {\n    const predicate$$32 = $predicate$$32$$286,\n          array1$$13 = $array1$$13$$287,\n          array2$$13 = $array2$$13$$288,\n          index$$8 = $index$$8$$289;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$32(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $predicate$$32$$286 = predicate$$32;\n      $array1$$13$$287 = array1$$13;\n      $array2$$13$$288 = array2$$13;\n      $index$$8$$289 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$33, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  } else {\n    void null;\n  }\n\n  return existsOffset2(predicate$$33, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$120, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$44 = 0; i$$44 <= array$$120.length - 1; i$$44++) {\n    acc$$11 = adder.Add(acc$$11, array$$120[i$$44]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$121, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$45 = 0; i$$45 <= array$$121.length - 1; i$$45++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$121[i$$45]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$24, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$24)) > 0 ? y$$10 : x$$24;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$25, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$25) > 0 ? y$$11 : x$$25;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$26, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$26)) > 0 ? x$$26 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$27, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$27) > 0 ? x$$27 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$122, averager) {\n  if (array$$122.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$46 = 0; i$$46 <= array$$122.length - 1; i$$46++) {\n    total = averager.Add(total, array$$122[i$$46]);\n  }\n\n  return averager.DivideByInt(total, array$$122.length);\n}\nexport function averageBy(projection$$9, array$$123, averager$$1) {\n  if (array$$123.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    void null;\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$123.length - 1; i$$47++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$123[i$$47]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$123.length);\n}\nexport function ofSeq(source$$6, cons$$31) {\n  return cons$$31.from(source$$6);\n}\nexport function ofList(source$$7, cons$$32) {\n  return cons$$32.from(source$$7);\n}\nexport function toList(source$$8) {\n  const len$$17 = source$$8.length | 0;\n  let target$$6 = new List();\n\n  for (let i$$48 = len$$17 - 1; i$$48 >= 0; i$$48--) {\n    target$$6 = new List(source$$8[i$$48], target$$6);\n  }\n\n  return target$$6;\n}\nexport function windowed(windowSize, source$$9) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  } else {\n    void null;\n  }\n\n  let res$$9;\n  const len$$18 = max$$1(comparePrimitives, 0, source$$9.length - windowSize) | 0;\n  res$$9 = new Array(len$$18);\n\n  for (let i$$49 = windowSize; i$$49 <= source$$9.length; i$$49++) {\n    res$$9[i$$49 - windowSize] = source$$9.slice(i$$49 - windowSize, i$$49 - 1 + 1);\n  }\n\n  return res$$9;\n}\nexport function splitInto(chunks, array$$124) {\n  if (chunks < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: chunks\");\n  } else {\n    void null;\n  }\n\n  if (array$$124.length === 0) {\n    return [[]];\n  } else {\n    const result$$14 = [];\n    const chunks$$1 = min$$1(comparePrimitives, chunks, array$$124.length) | 0;\n    const minChunkSize = ~~(array$$124.length / chunks$$1) | 0;\n    const chunksWithExtraItem = array$$124.length % chunks$$1 | 0;\n\n    for (let i$$50 = 0; i$$50 <= chunks$$1 - 1; i$$50++) {\n      const chunkSize$$1 = (i$$50 < chunksWithExtraItem ? minChunkSize + 1 : minChunkSize) | 0;\n      const start$$11 = i$$50 * minChunkSize + min$$1(comparePrimitives, chunksWithExtraItem, i$$50) | 0;\n      const slice$$1 = array$$124.slice(start$$11, start$$11 + chunkSize$$1);\n      const value$$13 = result$$14.push(slice$$1);\n      void value$$13;\n    }\n\n    return result$$14;\n  }\n}\nexport function transpose(arrays$$2, cons$$33) {\n  var value$$14;\n  const arrays$$3 = Array.isArray(arrays$$2) ? arrays$$2 : Array.from(arrays$$2);\n  const len$$20 = arrays$$3.length | 0;\n\n  if (len$$20 === 0) {\n    return new Array(0);\n  } else {\n    const lenInner = arrays$$3[0].length | 0;\n\n    if (value$$14 = (forAll(function predicate$$34(a) {\n      return a.length === lenInner;\n    }, arrays$$3)), (!value$$14)) {\n      throw new Error(\"Arrays had different lengths\");\n    } else {\n      void null;\n    }\n\n    const result$$15 = new Array(lenInner);\n\n    for (let i$$51 = 0; i$$51 <= lenInner - 1; i$$51++) {\n      result$$15[i$$51] = new cons$$33(len$$20);\n\n      for (let j$$2 = 0; j$$2 <= len$$20 - 1; j$$2++) {\n        result$$15[i$$51][j$$2] = arrays$$3[j$$2][i$$51];\n      }\n    }\n\n    return result$$15;\n  }\n}","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { List } from \"./Types.js\";\nimport { transpose as transpose$$1, pairwise as pairwise$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { splitInto as splitInto$$1, chunkBySize as chunkBySize$$1, permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    return _arg1.head;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    return some(_arg1$$1.head);\n  } else {\n    return undefined;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    return _arg1$$2.tail;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last($_arg1$$3$$5) {\n  last: while (true) {\n    const _arg1$$3 = $_arg1$$3$$5;\n\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        $_arg1$$3$$5 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast($_arg1$$4$$6) {\n  tryLast: while (true) {\n    const _arg1$$4 = $_arg1$$4$$6;\n\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        $_arg1$$4$$6 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return undefined;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop($xs$$4$$10, $ys$$1$$11) {\n      loop: while (true) {\n        const xs$$4 = $xs$$4$$10,\n              ys$$1 = $ys$$1$$11;\n\n        if (xs$$4.tail != null) {\n          if (ys$$1.tail != null) {\n            const matchValue$$1 = comparer(xs$$4.head, ys$$1.head) | 0;\n\n            if (matchValue$$1 === 0) {\n              $xs$$4$$10 = xs$$4.tail;\n              $ys$$1$$11 = ys$$1.tail;\n              continue loop;\n            } else {\n              return matchValue$$1 | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (ys$$1.tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($f$$12, $i$$13, $acc$$14, $_arg1$$5$$15) {\n  foldIndexedAux: while (true) {\n    const f = $f$$12,\n          i = $i$$13,\n          acc = $acc$$14,\n          _arg1$$5 = $_arg1$$5$$15;\n\n    if (_arg1$$5.tail != null) {\n      $f$$12 = f;\n      $i$$13 = i + 1;\n      $acc$$14 = f(i, acc, _arg1$$5.head);\n      $_arg1$$5$$15 = _arg1$$5.tail;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($f$$2$$19, $state$$1$$20, $xs$$8$$21) {\n  fold: while (true) {\n    const f$$2 = $f$$2$$19,\n          state$$1 = $state$$1$$20,\n          xs$$8 = $xs$$8$$21;\n\n    if (xs$$8.tail != null) {\n      $f$$2$$19 = f$$2;\n      $state$$1$$20 = f$$2(state$$1, xs$$8.head);\n      $xs$$8$$21 = xs$$8.tail;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  const xs$$13 = fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12);\n  return reverse(xs$$13);\n}\nexport function concat(lists) {\n  const xs$$15 = fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists);\n  return reverse(xs$$15);\n}\nexport function foldIndexed2Aux($f$$5$$31, $i$$1$$32, $acc$$5$$33, $bs$$34, $cs$$35) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $f$$5$$31,\n          i$$1 = $i$$1$$32,\n          acc$$5 = $acc$$5$$33,\n          bs = $bs$$34,\n          cs = $cs$$35;\n    var $target$$36, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (bs.tail != null) {\n      if (cs.tail != null) {\n        $target$$36 = 1;\n        x$$11 = bs.head;\n        xs$$16 = bs.tail;\n        y$$1 = cs.head;\n        ys$$3 = cs.tail;\n      } else {\n        $target$$36 = 2;\n      }\n    } else if (cs.tail == null) {\n      $target$$36 = 0;\n    } else {\n      $target$$36 = 2;\n    }\n\n    switch ($target$$36) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $f$$5$$31 = f$$5;\n          $i$$1$$32 = i$$1 + 1;\n          $acc$$5$$33 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $bs$$34 = xs$$16;\n          $cs$$35 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner($acc$$6$$51, $state$$8$$52) {\n    unfoldInner: while (true) {\n      const acc$$6 = $acc$$6$$51,\n            state$$8 = $state$$8$$52;\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        $acc$$6$$51 = new List(x$$12, acc$$6);\n        $state$$8$$52 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($f$$10$$53, $i$$2$$54, $acc$$7$$55, $bs$$1$$56, $cs$$1$$57, $ds$$58) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $f$$10$$53,\n          i$$2 = $i$$2$$54,\n          acc$$7 = $acc$$7$$55,\n          bs$$1 = $bs$$1$$56,\n          cs$$1 = $cs$$1$$57,\n          ds = $ds$$58;\n    var $target$$59, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (bs$$1.tail != null) {\n      if (cs$$1.tail != null) {\n        if (ds.tail != null) {\n          $target$$59 = 1;\n          x$$13 = bs$$1.head;\n          xs$$20 = bs$$1.tail;\n          y$$2 = cs$$1.head;\n          ys$$7 = cs$$1.tail;\n          z = ds.head;\n          zs = ds.tail;\n        } else {\n          $target$$59 = 2;\n        }\n      } else {\n        $target$$59 = 2;\n      }\n    } else if (cs$$1.tail == null) {\n      if (ds.tail == null) {\n        $target$$59 = 0;\n      } else {\n        $target$$59 = 2;\n      }\n    } else {\n      $target$$59 = 2;\n    }\n\n    switch ($target$$59) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $f$$10$$53 = f$$10;\n          $i$$2$$54 = i$$2 + 1;\n          $acc$$7$$55 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $bs$$1$$56 = xs$$20;\n          $cs$$1$$57 = ys$$7;\n          $ds$$58 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  const xs$$24 = scan$$1(f$$13, state$$11, xs$$23);\n  return ofSeq(xs$$24);\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  const xs$$26 = scanBack$$1(f$$14, xs$$25, state$$12);\n  return ofSeq(xs$$26);\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  const xs$$30 = collect$$1(f$$15, xs$$29);\n  return ofSeq(xs$$30);\n}\nexport function map(f$$16, xs$$31) {\n  const xs$$32 = fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31);\n  return reverse(xs$$32);\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  const xs$$34 = foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33);\n  return reverse(xs$$34);\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  const xs$$37 = fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11);\n  return reverse(xs$$37);\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  const xs$$39 = foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12);\n  return reverse(xs$$39);\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  const xs$$41 = fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3);\n  return reverse(xs$$41);\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  const xs$$43 = foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4);\n  return reverse(xs$$43);\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const patternInput$$1 = fold(function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  }, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, void null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, void null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, void null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, void null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($f$$28$$120, $i$$10$$121, $_arg1$$9$$122) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $f$$28$$120,\n          i$$10 = $i$$10$$121,\n          _arg1$$9 = $_arg1$$9$$122;\n\n    if (_arg1$$9.tail != null) {\n      const result = f$$28(i$$10, _arg1$$9.head);\n\n      if (result == null) {\n        $f$$28$$120 = f$$28;\n        $i$$10$$121 = i$$10 + 1;\n        $_arg1$$9$$122 = _arg1$$9.tail;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return undefined;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : undefined;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : undefined;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  let xs$$61;\n  xs$$61 = reverse(xs$$59);\n  return find(f$$36, xs$$61);\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  let xs$$64;\n  xs$$64 = reverse(xs$$62);\n  return tryFind(f$$37, xs$$64);\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : undefined;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  const array = ofList(xs$$66, Array);\n  return tryFindIndexBack$$1(f$$39, array);\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  const array$$1 = ofList(xs$$68, Array);\n  return findIndexBack$$1(f$$41, array$$1) | 0;\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  const xs$$72 = fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71);\n  return reverse(xs$$72);\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  const xs$$75 = fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74);\n  return reverse(xs$$75);\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1($xs$$76$$162) {\n    loop$$1: while (true) {\n      const xs$$76 = $xs$$76$$162;\n\n      if (xs$$76.tail != null) {\n        if (eq.Equals(value, xs$$76.head)) {\n          return true;\n        } else {\n          $xs$$76$$162 = xs$$76.tail;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, eq$$1);\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 0; i$$15 <= n$$2 - 1; i$$15++) {\n    xs$$78 = new List(f$$46(i$$15), xs$$78);\n  }\n\n  return reverse(xs$$78);\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    return fold(f$$47, _arg1$$16.head, _arg1$$16.tail);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    return foldBack(f$$48, _arg1$$17.tail, _arg1$$17.head);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($f$$51$$180, $_arg1$$18$$181) {\n  exists: while (true) {\n    const f$$51 = $f$$51$$180,\n          _arg1$$18 = $_arg1$$18$$181;\n\n    if (_arg1$$18.tail != null) {\n      if (f$$51(_arg1$$18.head)) {\n        return true;\n      } else {\n        $f$$51$$180 = f$$51;\n        $_arg1$$18$$181 = _arg1$$18.tail;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($f$$52$$182, $bs$$2$$183, $cs$$2$$184) {\n  exists2: while (true) {\n    const f$$52 = $f$$52$$182,\n          bs$$2 = $bs$$2$$183,\n          cs$$2 = $cs$$2$$184;\n    var $target$$185, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (bs$$2.tail != null) {\n      if (cs$$2.tail != null) {\n        $target$$185 = 1;\n        x$$44 = bs$$2.head;\n        xs$$82 = bs$$2.tail;\n        y$$12 = cs$$2.head;\n        ys$$18 = cs$$2.tail;\n      } else {\n        $target$$185 = 2;\n      }\n    } else if (cs$$2.tail == null) {\n      $target$$185 = 0;\n    } else {\n      $target$$185 = 2;\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $f$$52$$182 = f$$52;\n            $bs$$2$$183 = xs$$82;\n            $cs$$2$$184 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  let xs$$89;\n  const xs$$88 = ofList(xs$$87, Array);\n  xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  });\n  xs$$89 = xs$$88;\n  return ofArray(xs$$89);\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  let xs$$92;\n  const xs$$91 = ofList(xs$$90, Array);\n  xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  });\n  xs$$92 = xs$$91;\n  return ofArray(xs$$92);\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  let xs$$95;\n  const xs$$94 = ofList(xs$$93, Array);\n  xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  });\n  xs$$95 = xs$$94;\n  return ofArray(xs$$95);\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  let xs$$98;\n  const xs$$97 = ofList(xs$$96, Array);\n  xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  });\n  xs$$98 = xs$$97;\n  return ofArray(xs$$98);\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  let xs$$101;\n  const xs$$100 = ofList(xs$$99, Array);\n  xs$$100.sort(comparer$$9);\n  xs$$101 = xs$$100;\n  return ofArray(xs$$101);\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  let xs$$110;\n  let array$$3;\n  array$$3 = ofList(xs$$109, Array);\n  xs$$110 = permute$$1(f$$55, array$$3);\n  return ofArray(xs$$110);\n}\nexport function chunkBySize(chunkSize, xs$$111) {\n  let xs$$114;\n  let xs$$112;\n  let array$$4;\n  array$$4 = ofList(xs$$111, Array);\n  xs$$112 = chunkBySize$$1(chunkSize, array$$4);\n  xs$$114 = ofArray(xs$$112);\n  return map(function f$$56(xs$$113) {\n    return ofArray(xs$$113);\n  }, xs$$114);\n}\nexport function skip(i$$16, xs$$115) {\n  const skipInner = function skipInner($i$$17$$240, $xs$$116$$241) {\n    skipInner: while (true) {\n      const i$$17 = $i$$17$$240,\n            xs$$116 = $xs$$116$$241;\n\n      if (i$$17 === 0) {\n        return xs$$116;\n      } else if (xs$$116.tail != null) {\n        $i$$17$$240 = i$$17 - 1;\n        $xs$$116$$241 = xs$$116.tail;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  if (i$$16 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$242, i$$20, xs$$119;\n\n    if (i$$16 === 0) {\n      $target$$242 = 0;\n    } else if (i$$16 === 1) {\n      if (xs$$115.tail != null) {\n        $target$$242 = 1;\n      } else {\n        $target$$242 = 2;\n        i$$20 = i$$16;\n        xs$$119 = xs$$115;\n      }\n    } else {\n      $target$$242 = 2;\n      i$$20 = i$$16;\n      xs$$119 = xs$$115;\n    }\n\n    switch ($target$$242) {\n      case 0:\n        {\n          return xs$$115;\n        }\n\n      case 1:\n        {\n          return xs$$115.tail;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$119);\n        }\n    }\n  }\n}\nexport function skipWhile($predicate$$243, $xs$$120$$244) {\n  skipWhile: while (true) {\n    const predicate = $predicate$$243,\n          xs$$120 = $xs$$120$$244;\n    var $target$$245, h$$4, t$$4;\n\n    if (xs$$120.tail != null) {\n      if (predicate(xs$$120.head)) {\n        $target$$245 = 0;\n        h$$4 = xs$$120.head;\n        t$$4 = xs$$120.tail;\n      } else {\n        $target$$245 = 1;\n      }\n    } else {\n      $target$$245 = 1;\n    }\n\n    switch ($target$$245) {\n      case 0:\n        {\n          $predicate$$243 = predicate;\n          $xs$$120$$244 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$120;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux($error$$246, $i$$21$$247, $acc$$25$$248, $xs$$121$$249) {\n  takeSplitAux: while (true) {\n    const error = $error$$246,\n          i$$21 = $i$$21$$247,\n          acc$$25 = $acc$$25$$248,\n          xs$$121 = $xs$$121$$249;\n\n    if (i$$21 === 0) {\n      return [reverse(acc$$25), xs$$121];\n    } else if (xs$$121.tail != null) {\n      $error$$246 = error;\n      $i$$21$$247 = i$$21 - 1;\n      $acc$$25$$248 = new List(xs$$121.head, acc$$25);\n      $xs$$121$$249 = xs$$121.tail;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$121];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$123) {\n  if (i$$22 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$252, i$$25, xs$$124;\n\n    if (i$$22 === 0) {\n      $target$$252 = 0;\n    } else if (i$$22 === 1) {\n      if (xs$$123.tail != null) {\n        $target$$252 = 1;\n      } else {\n        $target$$252 = 2;\n        i$$25 = i$$22;\n        xs$$124 = xs$$123;\n      }\n    } else {\n      $target$$252 = 2;\n      i$$25 = i$$22;\n      xs$$124 = xs$$123;\n    }\n\n    switch ($target$$252) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$123.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple = takeSplitAux(true, i$$25, new List(), xs$$124);\n          return tuple[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$125) {\n  if (xs$$125.tail != null) {\n    if (xs$$125.tail.tail == null) {\n      if (predicate$$1(xs$$125.head)) {\n        return xs$$125;\n      } else {\n        return xs$$125.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$125.head)) {\n        return new List();\n      } else {\n        return new List(xs$$125.head, takeWhile(predicate$$1, xs$$125.tail));\n      }\n    }\n  } else {\n    return xs$$125;\n  }\n}\nexport function truncate(i$$26, xs$$127) {\n  if (i$$26 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$257, i$$29, xs$$128;\n\n    if (i$$26 === 0) {\n      $target$$257 = 0;\n    } else if (i$$26 === 1) {\n      if (xs$$127.tail != null) {\n        $target$$257 = 1;\n      } else {\n        $target$$257 = 2;\n        i$$29 = i$$26;\n        xs$$128 = xs$$127;\n      }\n    } else {\n      $target$$257 = 2;\n      i$$29 = i$$26;\n      xs$$128 = xs$$127;\n    }\n\n    switch ($target$$257) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$127.head, new List());\n        }\n\n      case 2:\n        {\n          const tuple$$1 = takeSplitAux(false, i$$29, new List(), xs$$128);\n          return tuple$$1[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$129) {\n  if (i$$30 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$260, i$$33, xs$$131;\n\n    if (i$$30 === 0) {\n      $target$$260 = 0;\n    } else if (i$$30 === 1) {\n      if (xs$$129.tail != null) {\n        $target$$260 = 1;\n      } else {\n        $target$$260 = 2;\n        i$$33 = i$$30;\n        xs$$131 = xs$$129;\n      }\n    } else {\n      $target$$260 = 2;\n      i$$33 = i$$30;\n      xs$$131 = xs$$129;\n    }\n\n    switch ($target$$260) {\n      case 0:\n        {\n          return [new List(), xs$$129];\n        }\n\n      case 1:\n        {\n          return [new List(xs$$129.head, new List()), xs$$129.tail];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$131);\n        }\n    }\n  }\n}\nexport function outOfRange() {\n  throw new Error(\"Index out of range\");\n}\nexport function slice(lower, upper, xs$$132) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const hasUpper = upper != null;\n\n  if (lower$$1 < 0) {\n    return outOfRange();\n  } else if (hasUpper ? upper < lower$$1 : false) {\n    return new List();\n  } else {\n    let lastIndex = -1 | 0;\n    let res$$2;\n    const state$$13 = new List();\n    res$$2 = foldIndexed(function f$$57(i$$34, acc$$26, x$$67) {\n      lastIndex = i$$34;\n\n      if (lower$$1 <= i$$34 ? !hasUpper ? true : i$$34 <= upper : false) {\n        return new List(x$$67, acc$$26);\n      } else {\n        return acc$$26;\n      }\n    }, state$$13, xs$$132);\n\n    if (lower$$1 > lastIndex + 1 ? true : hasUpper ? upper > lastIndex : false) {\n      outOfRange();\n    } else {\n      void null;\n    }\n\n    return reverse(res$$2);\n  }\n}\nexport function distinctBy(projection$$4, xs$$134, eq$$2) {\n  const hashSet = createMutable([], eq$$2);\n  return filter(function f$$58($arg$$1) {\n    const arg00$$1 = projection$$4($arg$$1);\n    return addToSet(arg00$$1, hashSet);\n  }, xs$$134);\n}\nexport function distinct(xs$$136, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$136, eq$$3);\n}\nexport function exactlyOne(xs$$137) {\n  if (xs$$137.tail != null) {\n    if (xs$$137.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$137.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$139, eq$$4) {\n  const dict = createMutable$$1([], eq$$4);\n  let keys = new List();\n  iterate(function f$$59(v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys = new List(key, keys);\n    }\n  }, xs$$139);\n  let result$$1 = new List();\n  const xs$$141 = keys;\n  iterate(function f$$60(key$$1) {\n    result$$1 = new List([key$$1, reverse(getItemFromDict(dict, key$$1))], result$$1);\n  }, xs$$141);\n  return result$$1;\n}\nexport function countBy(projection$$6, xs$$142, eq$$5) {\n  const dict$$1 = createMutable$$1([], eq$$5);\n  let keys$$1 = new List();\n  iterate(function f$$61(v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, 0);\n\n    if (matchValue$$17[0]) {\n      dict$$1.set(key$$2, matchValue$$17[1] + 1);\n    } else {\n      dict$$1.set(key$$2, 1);\n      keys$$1 = new List(key$$2, keys$$1);\n    }\n  }, xs$$142);\n  let result$$2 = new List();\n  const xs$$144 = keys$$1;\n  iterate(function f$$62(key$$3) {\n    result$$2 = new List([key$$3, getItemFromDict(dict$$1, key$$3)], result$$2);\n  }, xs$$144);\n  return result$$2;\n}\nexport function where(predicate$$2, source) {\n  return filter(predicate$$2, source);\n}\nexport function pairwise(source$$1) {\n  const xs$$145 = pairwise$$1(source$$1);\n  return ofSeq(xs$$145);\n}\nexport function windowed(windowSize, source$$2) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  } else {\n    void null;\n  }\n\n  let res$$3 = new List();\n\n  for (let i$$35 = length(source$$2); i$$35 >= windowSize; i$$35--) {\n    res$$3 = new List(slice(i$$35 - windowSize, i$$35 - 1, source$$2), res$$3);\n  }\n\n  return res$$3;\n}\nexport function splitInto(chunks, source$$3) {\n  let xs$$148;\n  let xs$$146;\n  let array$$5;\n  array$$5 = ofList(source$$3, Array);\n  xs$$146 = splitInto$$1(chunks, array$$5);\n  xs$$148 = ofArray(xs$$146);\n  return map(function f$$63(xs$$147) {\n    return ofArray(xs$$147);\n  }, xs$$148);\n}\nexport function transpose(lists$$1) {\n  let xs$$150;\n  let source$$5;\n  source$$5 = transpose$$1(lists$$1);\n  xs$$150 = map$$1(ofSeq, source$$5);\n  return ofSeq(xs$$150);\n}","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n//# sourceMappingURL=AsyncBuilder.js.map","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1Of2, choice2Of2 } from \"./Option\";\nimport { map } from \"./Seq\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(choice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n//# sourceMappingURL=Async.js.map","namespace Thoth.Json\nopen System.Text.RegularExpressions\n\ntype JsonValue = obj\n\ntype ErrorReason =\n    | BadPrimitive of string * JsonValue\n    | BadPrimitiveExtra of string * JsonValue * string\n    | BadType of string * JsonValue\n    | BadField of string * JsonValue\n    | BadPath of string * JsonValue * string\n    | TooSmallArray of string * JsonValue\n    | FailMessage of string\n    | BadOneOf of string list\n\ntype CaseStrategy =\n    | PascalCase\n    | CamelCase\n    | SnakeCase\n\ntype DecoderError = string * ErrorReason\n\ntype Decoder<'T> = string -> JsonValue -> Result<'T, DecoderError>\n\ntype Encoder<'T> = 'T -> JsonValue\n\ntype BoxedDecoder = Decoder<obj>\n\ntype BoxedEncoder = Encoder<obj>\n\ntype ExtraCoders =\n    { Hash: string\n      Coders: Map<string, BoxedEncoder * BoxedDecoder> }\n\nmodule internal Util =\n    open System.Collections.Generic\n\n    type Cache<'Value>() =\n        let cache = Dictionary<string, 'Value>()\n        member __.GetOrAdd(key, factory) =\n            match cache.TryGetValue(key) with\n            | true, x -> x\n            | false, _ ->\n                let x = factory()\n                cache.Add(key, x)\n                x\n\n    // Tree shaking will remove this if not used\n    // so no need to make them lazy in Fable\n    let CachedEncoders = Cache<BoxedEncoder>()\n    let CachedDecoders = Cache<BoxedDecoder>()\n\n    /// If used from .NET the type resolver won't be injected,\n    /// throw a more informative error than just a null reference.\n    let inline resolveType (resolver: Fable.Core.ITypeResolver<'T> option): System.Type =\n#if !FABLE_COMPILER\n        failwith \"Thoth.Json is only compatible with Fable, use Thoth.Json.Net\"\n#else\n        resolver.Value.ResolveType()\n#endif\n\n\n    module Casing =\n        let lowerFirst (str : string) = str.[..0].ToLowerInvariant() + str.[1..]\n        let convert caseStrategy fieldName =\n            match caseStrategy with\n            | CamelCase -> lowerFirst fieldName \n            | SnakeCase -> Regex.Replace(lowerFirst fieldName, \"[A-Z]\",\"_$0\").ToLowerInvariant()\n            | PascalCase -> fieldName ","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec (dispatch:Dispatch<'msg>) (cmd:Cmd<'msg>) =\n        cmd |> List.iter (fun sub -> sub dispatch)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n    module OfFunc =\n        /// Command to evaluate a simple function and map the result\n        /// into success or error (of exception)\n        let either (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to evaluate a simple function and map the success to a message\n        /// discarding any possible error\n        let perform (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    ()\n            [bind]\n\n        /// Command to evaluate a simple function and map the error (in case of exception)\n        let attempt (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to issue a specific message\n        let result (msg:'msg) : Cmd<'msg> =\n            [fun dispatch -> dispatch msg]\n\n    module OfAsyncWith =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let either (start: Async<unit> -> unit) \n                   (task: 'a -> Async<_>)\n                   (arg: 'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    dispatch (match r with\n                             | Choice1Of2 x -> ofSuccess x\n                             | Choice2Of2 x -> ofError x)\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the success\n        let perform (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch (ofSuccess x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let attempt (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice2Of2 x -> dispatch (ofError x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block to the message\n        let result (start: Async<unit> -> unit) \n                   (task: Async<'msg>) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch x\n                    | _ -> ()\n                }\n            [bind >> start]\n\n    module OfAsync =\n#if FABLE_COMPILER\n        let start x = Timer.delay 0 (fun _ -> Async.StartImmediate x)\n#else\n        let inline start x = Async.Start x\n#endif    \n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either start task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform start task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt start task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result start task\n\n    module OfAsyncImmediate =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.StartImmediate task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.StartImmediate task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.StartImmediate task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.StartImmediate task\n\n#if FABLE_COMPILER\n    module OfPromise =\n        /// Command to call `promise` block and map the results\n        let either (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the success\n        let perform (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg) =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the error\n        let attempt (task: 'a -> Fable.Core.JS.Promise<_>)\n                    (arg:'a)\n                    (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to dispatch the `promise` result\n        let result (task: Fable.Core.JS.Promise<'msg>) =\n            let bind dispatch =\n                task.``then`` dispatch\n                |> ignore\n            [bind]\n\n    [<Obsolete(\"Use `OfPromise.either` instead\")>]\n    let inline ofPromise (task: 'a -> Fable.Core.JS.Promise<_>)\n                         (arg:'a)\n                         (ofSuccess: _ -> 'msg)\n                         (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfPromise.either task arg ofSuccess ofError                     \n#else\n    open System.Threading.Tasks\n    module OfTask =\n        /// Command to call a task and map the results\n        let inline either (task: 'a -> Task<_>)\n                          (arg:'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.either (task >> Async.AwaitTask) arg ofSuccess ofError\n\n        /// Command to call a task and map the success\n        let inline perform (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.perform (task >> Async.AwaitTask) arg ofSuccess\n\n        /// Command to call a task and map the error\n        let inline attempt (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.attempt (task >> Async.AwaitTask) arg ofError\n\n        /// Command and map the task success\n        let inline result (task: Task<'msg>) : Cmd<'msg> =\n            OfAsync.result (task |> Async.AwaitTask)\n\n    [<Obsolete(\"Use OfTask.either instead\")>]\n    let inline ofTask (task: 'a -> Task<_>)\n                      (arg:'a)\n                      (ofSuccess: _ -> 'msg)\n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfTask.either task arg ofSuccess ofError\n#endif\n\n    // Synonymous with `OfFunc.result`, may be removed in the future\n    let inline ofMsg (msg:'msg) : Cmd<'msg> =\n        OfFunc.result msg\n\n    [<Obsolete(\"Use `Cmd.OfAsync.either` instead\")>]\n    let inline ofAsync (task: 'a -> Async<_>)\n                       (arg: 'a)\n                       (ofSuccess: _ -> 'msg)\n                       (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfAsync.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.either` instead\")>]\n    let inline ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.perform` instead\")>]\n    let inline performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.perform task arg ofSuccess\n\n    [<Obsolete(\"Use `Cmd.OfFunc.attempt` instead\")>]\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.attempt task arg ofError\n\n","\r\n[<RequireQualifiedAccess>]\r\nmodule Promise\r\n\r\n#nowarn \"1182\" // Unused values\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\nlet inline private (!!) (x:obj): 'T = unbox x\r\n\r\n[<Emit(\"new Promise($0)\")>]\r\n/// The promise function receives two other function parameters: success and fail\r\nlet create (f: ('T->unit)->(Exception->unit)->unit): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"new Promise(resolve => setTimeout(resolve, $0))\")>]\r\nlet sleep (ms: int): JS.Promise<unit> = jsNative\r\n\r\n[<Emit(\"Promise.resolve($0)\")>]\r\nlet lift<'T> (a: 'T): JS.Promise<'T> = jsNative\r\n\r\n/// Creates promise (in rejected state) with supplied reason.\r\nlet reject<'T> reason : JS.Promise<'T> = JS.Constructors.Promise.reject<'T> reason\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet bind (a: 'T->JS.Promise<'R>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet map (a: 'T->'R) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$1.then($0)\")>]\r\nlet iter (a: 'T->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// This version of `catch` fakes a function returning just 'T, as opposed to `Promise<'T>`. If you need to return `Promise<'T>`, use `catchBind`.\r\nlet catch (fail: Exception->'T) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// This is a version of `catch` that fakes a function returning Promise<'T> as opposed to just 'T. If you need to return just 'T, use `catch`.\r\nlet catchBind (fail: Exception->JS.Promise<'T>) (pr: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\n/// Used to catch errors at the end of a promise chain.\r\nlet catchEnd (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$2.then($0,$1)\")>]\r\n/// A combination of `map/bind` and `catch/catchBind`, this function applies the `success` continuation when the input promise resolves successfully, or `fail` continuation when the input promise fails. Both continuations may return either naked value `'R` or another promise `Promise<'R>`. Use the erased-cast operator `!^` to cast values when returning, for example:\r\n/// ```\r\n/// somePromise |> Promise.either (fun x -> !^(string x)) (fun err -> ^!(Promise.lift err.Message))\r\n/// ```\r\nlet either (success: 'T->U2<'R, JS.Promise<'R>>) (fail: 'E->U2<'R, JS.Promise<'R>>) (pr: JS.Promise<'T>): JS.Promise<'R> = jsNative\r\n\r\n[<Emit(\"$2.then($0,$1)\")>]\r\nlet eitherEnd (success: 'T->unit) (fail: 'E->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$0.then()\")>]\r\nlet start (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"$1.then(void 0, $0)\")>]\r\nlet tryStart (fail: Exception->unit) (pr: JS.Promise<'T>): unit = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\nlet Parallel (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\n[<Emit(\"Promise.all($0)\")>]\r\nlet all (pr: seq<JS.Promise<'T>>): JS.Promise<'T[]> = jsNative\r\n\r\nlet result (a: JS.Promise<'A>): JS.Promise<Result<'A, 'E>> =\r\n    either (U2.Case1 << Ok) (U2.Case1 << Error) a\r\n\r\nlet mapResult (fn: 'A -> 'B) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\r\n    a |> map (Result.map fn)\r\n\r\nlet bindResult (fn: 'A -> JS.Promise<'B>) (a: JS.Promise<Result<'A, 'E>>): JS.Promise<Result<'B, 'E>> =\r\n    a |> bind (fun a ->\r\n        match a with\r\n        | Ok a ->\r\n            result (fn a)\r\n        | Error e ->\r\n            lift (Error e))\r\n\r\nlet mapResultError (fn: 'B -> 'C) (a: JS.Promise<Result<'A,'B>>): JS.Promise<Result<'A,'C>> =\r\n    a |> map (Result.mapError fn)\r\n\r\nlet tap (fn: 'A -> unit) (a: JS.Promise<'A>): JS.Promise<'A> =\r\n    a |> map (fun x -> fn x; x)\r\n\r\ntype PromiseBuilder() =\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member x.Bind(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\r\n\r\n    [<Emit(\"$1.then(() => $2)\")>]\r\n    member x.Combine(p1: JS.Promise<unit>, p2: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    member x.For(seq: seq<'T>, body: 'T->JS.Promise<unit>): JS.Promise<unit> =\r\n        // (lift (), seq)\r\n        // ||> Seq.fold (fun p a ->\r\n        //     bind (fun () -> body a) p)\r\n        let mutable p = lift ()\r\n        for a in seq do\r\n            p <- !!p?``then``(fun () -> body a)\r\n        p\r\n\r\n    [<Emit(\"$1.then($2)\")>]\r\n    member x.For(p: JS.Promise<'T>, f: 'T->JS.Promise<'R>): JS.Promise<'R> = jsNative\r\n\r\n    member x.While(guard, p): JS.Promise<unit> =\r\n        if guard()\r\n        then bind (fun () -> x.While(guard, p)) p\r\n        else lift()\r\n\r\n    [<Emit(\"Promise.resolve($1)\")>]\r\n    member x.Return(a: 'T): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"$1\")>]\r\n    member x.ReturnFrom(p: JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    [<Emit(\"Promise.resolve()\")>]\r\n    member x.Zero(): JS.Promise<unit> = jsNative\r\n\r\n    member x.TryFinally(p: JS.Promise<'T>, compensation: unit->unit): JS.Promise<'T> =\r\n        either (fun (x: 'T) -> compensation(); U2.Case1 x) (fun er -> compensation(); raise !!er) p\r\n\r\n    [<Emit(\"$1.catch($2)\")>]\r\n    member x.TryWith(p: JS.Promise<'T>, catchHandler: Exception->JS.Promise<'T>): JS.Promise<'T> = jsNative\r\n\r\n    member x.Delay(generator: unit->JS.Promise<'T>): JS.Promise<'T> =\r\n        !!createObj[\r\n            \"then\" ==> fun f1 f2 ->\r\n                try generator()?``then``(f1,f2)\r\n                with er ->\r\n                    if box f2 = null\r\n                    then !!JS.Constructors.Promise.reject(er)\r\n                    else\r\n                        try !!JS.Constructors.Promise.resolve(f2(er))\r\n                        with er -> !!JS.Constructors.Promise.reject(er)\r\n            \"catch\" ==> fun f ->\r\n                try generator()?catch(f)\r\n                with er ->\r\n                    try !!JS.Constructors.Promise.resolve(f(er))\r\n                    with er -> !!JS.Constructors.Promise.reject(er)\r\n        ]\r\n\r\n    member x.Run(p:JS.Promise<'T>): JS.Promise<'T> =\r\n        create (fun success fail ->\r\n            try\r\n                let p : JS.Promise<'T> = !!JS.Constructors.Promise.resolve(p)\r\n                p?``then``(success, fail)\r\n            with\r\n              er -> fail(er)\r\n        )\r\n\r\n    member x.Using<'T, 'R when 'T :> IDisposable>(resource: 'T, binder: 'T->JS.Promise<'R>): JS.Promise<'R> =\r\n        x.TryFinally(binder(resource), fun () -> resource.Dispose())\r\n\r\n    [<Emit(\"Promise.all([$1,$2]).then(([a,b]) => $3(a,b))\")>]\r\n    [<CustomOperation(\"andFor\", IsLikeZip=true)>]\r\n    member x.Merge(a: JS.Promise<'T1>, b: JS.Promise<'T2>, [<ProjectionParameter>] resultSelector : 'T1 -> 'T2 -> 'R): JS.Promise<'R> = jsNative\r\n","namespace Elmish\nopen System\n\n[<Struct>]\ntype internal RingState<'item> =\n    | Writable of wx:'item array * ix:int\n    | ReadWritable of rw:'item array * wix:int * rix:int\n\ntype internal RingBuffer<'item>(size) =\n    let doubleSize ix (items: 'item array) =\n        seq { yield! items |> Seq.skip ix\n              yield! items |> Seq.take ix\n              for _ in 0..items.Length do\n                yield Unchecked.defaultof<'item> }\n        |> Array.ofSeq\n\n    let mutable state : 'item RingState =\n        Writable (Array.zeroCreate (max size 10), 0)\n\n    member __.Pop() =\n        match state with\n        | ReadWritable (items, wix, rix) ->\n            let rix' = (rix + 1) % items.Length\n            match rix' = wix with\n            | true -> \n                state <- Writable(items, wix)\n            | _ ->\n                state <- ReadWritable(items, wix, rix')\n            Some items.[rix]\n        | _ ->\n            None\n\n    member __.Push (item:'item) =\n        match state with\n        | Writable (items, ix) ->\n            items.[ix] <- item\n            let wix = (ix + 1) % items.Length\n            state <- ReadWritable(items, wix, ix)\n        | ReadWritable (items, wix, rix) ->\n            items.[wix] <- item\n            let wix' = (wix + 1) % items.Length\n            match wix' = rix with\n            | true -> \n                state <- ReadWritable(items |> doubleSize rix, items.Length, 0)\n            | _ -> \n                state <- ReadWritable(items, wix', rix)","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, _refValue) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, 0];\n    }\n}\n//# sourceMappingURL=TimeSpan.js.map","namespace Thoth.Json\nopen System.Text.RegularExpressions\n\n[<RequireQualifiedAccess>]\nmodule Encode =\n\n    open System.Collections.Generic\n    open System.Globalization\n    open Fable.Core\n    open Fable.Core.JsInterop\n\n    [<Emit(\"Array.from($0)\")>]\n    let private arrayFrom(x: JsonValue seq): JsonValue = jsNative\n\n    ///**Description**\n    /// Encode a string\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `string`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline string (value : string) : JsonValue =\n        box value\n\n    ///**Description**\n    /// Encode a GUID\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `System.Guid`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let guid (value : System.Guid) : JsonValue =\n        box (value.ToString())\n\n    ///**Description**\n    /// Encode a Float. `Infinity` and `NaN` are encoded as `null`.\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `float`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline float (value : float) : JsonValue =\n        box value\n\n    let inline float32 (value : float32) : JsonValue =\n        box value\n\n    ///**Description**\n    /// Encode a Decimal.\n    ///\n    ///**Parameters**\n    ///  * `value` - parameter of type `decimal`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let decimal (value : decimal) : JsonValue =\n        value.ToString() |> string\n\n    ///**Description**\n    /// Encode null\n    ///\n    ///**Parameters**\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let nil : JsonValue =\n        box null\n\n    ///**Description**\n    /// Encode a bool\n    ///**Parameters**\n    ///  * `value` - parameter of type `bool`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline bool (value : bool) : JsonValue =\n        box value\n\n    ///**Description**\n    /// Encode an object\n    ///\n    ///**Parameters**\n    ///  * `values` - parameter of type `(string * Value) list`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let object (values : (string * JsonValue) seq) : JsonValue =\n        let o = obj()\n        for (key, value) in values do\n            o?(key) <- value\n        box o\n\n    ///**Description**\n    /// Encode an array\n    ///\n    ///**Parameters**\n    ///  * `values` - parameter of type `Value array`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let inline array (values : JsonValue array) : JsonValue =\n        box values\n\n    ///**Description**\n    /// Encode a list\n    ///**Parameters**\n    ///  * `values` - parameter of type `Value list`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let list (values : JsonValue list) : JsonValue =\n        // Don't use List.toArray as it may create a typed array\n        arrayFrom values\n\n    let seq (values : JsonValue seq) : JsonValue =\n        arrayFrom values\n\n    ///**Description**\n    /// Encode a dictionary\n    ///**Parameters**\n    ///  * `values` - parameter of type `Map<string, Value>`\n    ///\n    ///**Output Type**\n    ///  * `Value`\n    ///\n    ///**Exceptions**\n    ///\n    let dict (values : Map<string, JsonValue>) : JsonValue =\n        values\n        |> Map.toList\n        |> object\n\n    let bigint (value : bigint) : JsonValue =\n        box (value.ToString())\n\n    let datetimeOffset (value : System.DateTimeOffset) : JsonValue =\n        value.ToString(\"O\", CultureInfo.InvariantCulture) |> string\n\n    /// **Description**\n    /// Encode a timespan\n    /// **Parameters**\n    ///   * `value` - parameter of type `System.TimeSpan`\n    ///\n    /// **Output Type**\n    ///   * `Value`\n    ///\n    /// **Exceptions**\n    ///\n    let timespan (value : System.TimeSpan) : JsonValue =\n        value.ToString() |> string\n\n    let sbyte (value : sbyte) : JsonValue =\n        box (value.ToString(CultureInfo.InvariantCulture))\n\n    let byte (value : byte) : JsonValue =\n        box (value.ToString(CultureInfo.InvariantCulture))\n\n    let int16 (value : int16) : JsonValue =\n        box (value.ToString(CultureInfo.InvariantCulture))\n\n    let uint16 (value : uint16) : JsonValue =\n        box (value.ToString(CultureInfo.InvariantCulture))\n\n    let inline int (value : int) : JsonValue =\n        box value\n\n    let inline uint32 (value : uint32) : JsonValue =\n        box value\n\n    let int64 (value : int64) : JsonValue =\n        box (value.ToString(CultureInfo.InvariantCulture))\n\n    let uint64 (value : uint64) : JsonValue =\n        box (value.ToString(CultureInfo.InvariantCulture))\n\n    let unit () : JsonValue =\n        box null\n\n    let tuple2\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (v1, v2) : JsonValue =\n        box [| enc1 v1\n               enc2 v2 |]\n\n    let tuple3\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (v1, v2, v3) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3 |]\n\n    let tuple4\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (v1, v2, v3, v4) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4 |]\n\n    let tuple5\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (v1, v2, v3, v4, v5) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5 |]\n\n    let tuple6\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (enc6 : Encoder<'T6>)\n            (v1, v2, v3, v4, v5, v6) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5\n               enc6 v6 |]\n\n    let tuple7\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (enc6 : Encoder<'T6>)\n            (enc7 : Encoder<'T7>)\n            (v1, v2, v3, v4, v5, v6, v7) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5\n               enc6 v6\n               enc7 v7 |]\n\n    let tuple8\n            (enc1 : Encoder<'T1>)\n            (enc2 : Encoder<'T2>)\n            (enc3 : Encoder<'T3>)\n            (enc4 : Encoder<'T4>)\n            (enc5 : Encoder<'T5>)\n            (enc6 : Encoder<'T6>)\n            (enc7 : Encoder<'T7>)\n            (enc8 : Encoder<'T8>)\n            (v1, v2, v3, v4, v5, v6, v7, v8) : JsonValue =\n        box [| enc1 v1\n               enc2 v2\n               enc3 v3\n               enc4 v4\n               enc5 v5\n               enc6 v6\n               enc7 v7\n               enc8 v8 |]\n\n\n    ////////////\n    // Enum ///\n    /////////\n\n    module Enum =\n\n        let byte<'TEnum when 'TEnum : enum<byte>> (value : 'TEnum) : JsonValue =\n            LanguagePrimitives.EnumToValue value\n            |> byte\n\n        let sbyte<'TEnum when 'TEnum : enum<sbyte>> (value : 'TEnum) : JsonValue =\n            LanguagePrimitives.EnumToValue value\n            |> sbyte\n\n        let int16<'TEnum when 'TEnum : enum<int16>> (value : 'TEnum) : JsonValue =\n            LanguagePrimitives.EnumToValue value\n            |> int16\n\n        let uint16<'TEnum when 'TEnum : enum<uint16>> (value : 'TEnum) : JsonValue =\n            LanguagePrimitives.EnumToValue value\n            |> uint16\n\n        let int<'TEnum when 'TEnum : enum<int>> (value : 'TEnum) : JsonValue =\n            LanguagePrimitives.EnumToValue value\n            |> int\n\n        let uint32<'TEnum when 'TEnum : enum<uint32>> (value : 'TEnum) : JsonValue =\n            LanguagePrimitives.EnumToValue value\n            |> uint32\n\n    /// **Description**\n    ///\n    /// The DateTime is always encoded using UTC representation\n    ///\n    /// **Parameters**\n    ///   * `value` - parameter of type `System.DateTime`\n    ///\n    /// **Output Type**\n    ///   * `Value`\n    ///\n    /// **Exceptions**\n    ///\n    let datetime (value : System.DateTime) : JsonValue =\n        value.ToString(\"O\", CultureInfo.InvariantCulture) |> string\n\n    ///**Description**\n    /// Convert a `Value` into a prettified string.\n    ///**Parameters**\n    ///  * `space` - parameter of type `int` - Amount of indentation\n    ///  * `value` - parameter of type `obj` - Value to convert\n    ///\n    ///**Output Type**\n    ///  * `string`\n    ///\n    ///**Exceptions**\n    ///\n    let toString (space: int) (value: JsonValue) : string =\n       JS.JSON.stringify(value, !!null, space)\n\n    ///**Description**\n    /// Encode an option\n    ///**Parameters**\n    ///  * `encoder` - parameter of type `'a -> Value`\n    ///\n    ///**Output Type**\n    ///  * `'a option -> Value`\n    ///\n    ///**Exceptions**\n    ///\n    let option (encoder : 'a -> JsonValue) =\n        Option.map encoder >> Option.defaultWith (fun _ -> nil)\n\n    //////////////////\n    // Reflection ///\n    ////////////////\n\n    open FSharp.Reflection\n    open Fable.Core.DynamicExtensions\n\n    // As generics are erased by Fable, let's just do an unsafe cast for performance\n    let inline boxEncoder (d: Encoder<'T>): BoxedEncoder =\n        !!d\n\n    let inline unboxEncoder (d: BoxedEncoder): Encoder<'T> =\n        !!d\n\n    let rec private autoEncodeRecordsAndUnions extra (caseStrategy : CaseStrategy) (skipNullField : bool) (t: System.Type) : BoxedEncoder =\n        // Add the encoder to extra in case one of the fields is recursive\n        let encoderRef = ref Unchecked.defaultof<_>\n        let extra = extra |> Map.add t.FullName encoderRef\n        let encoder =\n            if FSharpType.IsRecord(t, allowAccessToPrivateRepresentation=true) then\n                let setters =\n                    FSharpType.GetRecordFields(t, allowAccessToPrivateRepresentation=true)\n                    |> Array.map (fun fi ->\n                        let targetKey = Util.Casing.convert caseStrategy fi.Name\n                        let encode = autoEncoder extra caseStrategy skipNullField fi.PropertyType\n                        fun (source: obj) (target: JsonValue) ->\n                            let value = FSharpValue.GetRecordField(source, fi)\n                            if not skipNullField || (skipNullField && not (isNull value)) then // Discard null fields\n                                target.[targetKey] <- encode value\n                            target)\n                fun (source: obj) ->\n                    (JsonValue(), setters) ||> Seq.fold (fun target set -> set source target)\n            elif FSharpType.IsUnion(t, allowAccessToPrivateRepresentation=true) then\n                fun (value: obj) ->\n                    let info, fields = FSharpValue.GetUnionFields(value, t, allowAccessToPrivateRepresentation=true)\n                    match fields.Length with\n                    | 0 -> string info.Name\n                    | len ->\n                        let fieldTypes = info.GetFields()\n                        let target = Array.zeroCreate<JsonValue> (len + 1)\n                        target.[0] <- string info.Name\n                        for i = 1 to len do\n                            let encode = autoEncoder extra caseStrategy skipNullField fieldTypes.[i-1].PropertyType\n                            target.[i] <- encode fields.[i-1]\n                        array target\n            else\n                // Don't use failwithf here, for some reason F#/Fable compiles it as a function\n                // when the return type is a function too, so it doesn't fail immediately\n                sprintf \"Cannot generate auto encoder for %s. Please pass an extra encoder.\" t.FullName\n                |> failwith\n        encoderRef := encoder\n        encoder\n\n    and private autoEncoder (extra: Map<string, ref<BoxedEncoder>>) caseStrategy (skipNullField : bool) (t: System.Type) : BoxedEncoder =\n      let fullname = t.FullName\n      match Map.tryFind fullname extra with\n      | Some encoderRef -> fun v -> encoderRef.contents v\n      | None ->\n        if t.IsArray then\n            let encoder = t.GetElementType() |> autoEncoder extra caseStrategy skipNullField\n            fun (value: obj) ->\n                value :?> obj seq |> Seq.map encoder |> seq\n        elif t.IsEnum then\n            let enumType = System.Enum.GetUnderlyingType(t).FullName\n            if enumType = typeof<sbyte>.FullName then\n                boxEncoder sbyte\n            elif enumType = typeof<byte>.FullName then\n                boxEncoder byte\n            elif enumType = typeof<int16>.FullName then\n                boxEncoder int16\n            elif enumType = typeof<uint16>.FullName then\n                boxEncoder uint16\n            elif enumType = typeof<int>.FullName then\n                boxEncoder int\n            elif enumType = typeof<uint32>.FullName then\n                boxEncoder uint32\n            else\n                failwithf\n                    \"\"\"Cannot generate auto encoder for %s.\nThoth.Json.Net only support the folluwing enum types:\n- sbyte\n- byte\n- int16\n- uint16\n- int\n- uint32\nIf you can't use one of these types, please pass an extra encoder.\n                    \"\"\" t.FullName\n        elif t.IsGenericType then\n            if FSharpType.IsTuple(t) then\n                let encoders =\n                    FSharpType.GetTupleElements(t)\n                    |> Array.map (autoEncoder extra caseStrategy skipNullField)\n                fun (value: obj) ->\n                    FSharpValue.GetTupleFields(value)\n                    |> Seq.mapi (fun i x -> encoders.[i] x) |> seq\n            else\n                let fullname = t.GetGenericTypeDefinition().FullName\n                if fullname = typedefof<obj option>.FullName then\n                    // Evaluate lazily so we don't need to generate the encoder for null values\n                    let encoder = lazy\n                                    t.GenericTypeArguments.[0]\n                                    |> autoEncoder extra caseStrategy skipNullField\n                                    |> option\n                                    |> boxEncoder\n                    boxEncoder(fun (value: obj) ->\n                        if isNull value then nil\n                        else encoder.Value value)\n                elif fullname = typedefof<obj list>.FullName\n                    || fullname = typedefof<Set<string>>.FullName then\n                    // Disable seq support for now because I don't know how to implements to on Thoth.Json.Net\n                    // || fullname = typedefof<obj seq>.FullName then\n                    let encoder = t.GenericTypeArguments.[0] |> autoEncoder extra caseStrategy skipNullField\n                    fun (value: obj) ->\n                        value :?> obj seq |> Seq.map encoder |> seq\n                elif fullname = typedefof< Map<string, obj> >.FullName then\n                    let keyType = t.GenericTypeArguments.[0]\n                    let valueEncoder = t.GenericTypeArguments.[1] |> autoEncoder extra caseStrategy skipNullField\n                    if keyType.FullName = typeof<string>.FullName\n                        || keyType.FullName = typeof<System.Guid>.FullName then\n                        fun value ->\n                            // Fable compiles Guids as strings so this works, but maybe we should make the conversion explicit\n                            // (see dotnet version) in case Fable implementation of Guids change\n                            (JsonValue(), value :?> Map<string, obj>)\n                            ||> Seq.fold (fun target (KeyValue(k,v)) ->\n                                target.[k] <- valueEncoder v\n                                target)\n                    else\n                        let keyEncoder = keyType |> autoEncoder extra caseStrategy skipNullField\n                        fun value ->\n                            value :?> Map<string, obj> |> Seq.map (fun (KeyValue(k,v)) ->\n                                array [|keyEncoder k; valueEncoder v|]) |> seq\n                else\n                    autoEncodeRecordsAndUnions extra caseStrategy skipNullField t\n        else\n            if fullname = typeof<bool>.FullName then\n                boxEncoder bool\n            elif fullname = typeof<unit>.FullName then\n                boxEncoder unit\n            elif fullname = typeof<string>.FullName then\n                boxEncoder string\n            elif fullname = typeof<sbyte>.FullName then\n                boxEncoder sbyte\n            elif fullname = typeof<byte>.FullName then\n                boxEncoder byte\n            elif fullname = typeof<int16>.FullName then\n                boxEncoder int16\n            elif fullname = typeof<uint16>.FullName then\n                boxEncoder uint16\n            elif fullname = typeof<int>.FullName then\n                boxEncoder int\n            elif fullname = typeof<uint32>.FullName then\n                boxEncoder uint32\n            elif fullname = typeof<float>.FullName then\n                boxEncoder float\n            elif fullname = typeof<float32>.FullName then\n                boxEncoder float32\n            // These number types require extra libraries in Fable. To prevent penalizing\n            // all users, extra encoders (withInt64, etc) must be passed when they're needed.\n\n            // elif fullname = typeof<int64>.FullName then\n            //     boxEncoder int64\n            // elif fullname = typeof<uint64>.FullName then\n            //     boxEncoder uint64\n            // elif fullname = typeof<bigint>.FullName then\n            //     boxEncoder bigint\n            // elif fullname = typeof<decimal>.FullName then\n            //     boxEncoder decimal\n            elif fullname = typeof<System.DateTime>.FullName then\n                boxEncoder datetime\n            elif fullname = typeof<System.DateTimeOffset>.FullName then\n                boxEncoder datetimeOffset\n            elif fullname = typeof<System.TimeSpan>.FullName then\n                boxEncoder timespan\n            elif fullname = typeof<System.Guid>.FullName then\n                boxEncoder guid\n            elif fullname = typeof<obj>.FullName then\n                boxEncoder id\n            else\n                autoEncodeRecordsAndUnions extra caseStrategy skipNullField t\n\n    let private makeExtra (extra: ExtraCoders option) =\n        match extra with\n        | None -> Map.empty\n        | Some e -> Map.map (fun _ (enc,_) -> ref enc) e.Coders\n\n    type Auto =\n        static member generateEncoderCached<'T>(?caseStrategy : CaseStrategy, ?extra: ExtraCoders, ?skipNullField: bool, [<Inject>] ?resolver: ITypeResolver<'T>): Encoder<'T> =\n            let t = Util.resolveType resolver\n            let caseStrategy = defaultArg caseStrategy PascalCase\n            let skipNullField = defaultArg skipNullField true\n\n            let key =\n                t.FullName\n                |> (+) (Operators.string caseStrategy)\n                |> (+) (extra |> Option.map (fun e -> e.Hash) |> Option.defaultValue \"\")\n\n            Util.CachedEncoders.GetOrAdd(key , fun _ ->\n                autoEncoder (makeExtra extra) caseStrategy skipNullField t) |> unboxEncoder\n\n        static member generateEncoder<'T>(?caseStrategy : CaseStrategy, ?extra: ExtraCoders, ?skipNullField: bool, [<Inject>] ?resolver: ITypeResolver<'T>): Encoder<'T> =\n            let caseStrategy = defaultArg caseStrategy PascalCase\n            let skipNullField = defaultArg skipNullField true\n            Util.resolveType resolver\n            |> autoEncoder (makeExtra extra) caseStrategy skipNullField |> unboxEncoder\n\n        static member toString(space : int, value : 'T, ?caseStrategy : CaseStrategy, ?extra: ExtraCoders, ?skipNullField: bool, [<Inject>] ?resolver: ITypeResolver<'T>) : string =\n            let encoder = Auto.generateEncoder(?caseStrategy=caseStrategy, ?extra=extra, ?skipNullField=skipNullField, ?resolver=resolver)\n            encoder value |> toString space\n\n    ///**Description**\n    /// Convert a `Value` into a prettified string.\n    ///**Parameters**\n    ///  * `space` - parameter of type `int` - Amount of indentation\n    ///  * `value` - parameter of type `obj` - Value to convert\n    ///\n    ///**Output Type**\n    ///  * `string`\n    ///\n    ///**Exceptions**\n    ///\n    [<System.Obsolete(\"Please use toString instead\")>]\n    let encode (space: int) (value: JsonValue) : string = toString space value\n","import { List, declare, Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, toInt, op_Modulus, op_Multiply, fromInteger, fromBits } from \"../Long.js\";\nimport { ofList, copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\nexport const BigNat = declare(function BigInt_BigNat(bound, digits) {\n  this.bound = bound | 0;\n  this.digits = digits;\n}, Record);\nexport function BigNat$reflection() {\n  return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\nexport function BigNatModule$002EFFT$$$pow32($x$$1, $n$$2) {\n  BigNatModule$002EFFT$$$pow32: while (true) {\n    const x = $x$$1,\n          n = $n$$2;\n\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      $x$$1 = x * x;\n      $n$$2 = ~~(n / 2);\n      continue BigNatModule$002EFFT$$$pow32;\n    } else {\n      return x * BigNatModule$002EFFT$$$pow32(x * x, ~~(n / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$$$leastBounding2Power(b) {\n  const findBounding2Power = function findBounding2Power($b$$1$$4, $tp$$5, $i$$6) {\n    findBounding2Power: while (true) {\n      const b$$1 = $b$$1$$4,\n            tp = $tp$$5,\n            i = $i$$6;\n\n      if (b$$1 <= tp) {\n        return [tp, i];\n      } else {\n        $b$$1$$4 = b$$1;\n        $tp$$5 = tp * 2;\n        $i$$6 = i + 1;\n        continue findBounding2Power;\n      }\n\n      break;\n    }\n  };\n\n  return findBounding2Power(b, 1, 0);\n}\nexport const BigNatModule$002EFFT$$$p = fromBits(2013265921, 0, false);\nconst BigNatModule$002EFFT$$$patternInput$004075 = [27, 15, 31, 440564289];\nexport const BigNatModule$002EFFT$$$w = BigNatModule$002EFFT$$$patternInput$004075[3];\nexport const BigNatModule$002EFFT$$$m = BigNatModule$002EFFT$$$patternInput$004075[1];\nexport const BigNatModule$002EFFT$$$k = BigNatModule$002EFFT$$$patternInput$004075[0];\nexport const BigNatModule$002EFFT$$$g = BigNatModule$002EFFT$$$patternInput$004075[2];\nexport const BigNatModule$002EFFT$$$primeP = BigNatModule$002EFFT$$$p;\nexport const BigNatModule$002EFFT$$$maxBitsInsideFp = 30;\nexport const BigNatModule$002EFFT$002EFp$$$p = 2013265921;\nexport const BigNatModule$002EFFT$002EFp$$$p64 = fromBits(2013265921, 0, true);\nexport function BigNatModule$002EFFT$002EFp$$$toInt(x$$1) {\n  return ~~x$$1;\n}\nexport function BigNatModule$002EFFT$002EFp$$$ofInt32(x$$2) {\n  return x$$2 >>> 0;\n}\nexport const BigNatModule$002EFFT$002EFp$$$mzero = 0;\nexport const BigNatModule$002EFFT$002EFp$$$mone = 1;\nexport const BigNatModule$002EFFT$002EFp$$$mtwo = 2;\nexport function BigNatModule$002EFFT$002EFp$$$mpow($x$$3$$9, $n$$1$$10) {\n  BigNatModule$002EFFT$002EFp$$$mpow: while (true) {\n    const x$$3 = $x$$3$$9,\n          n$$1 = $n$$1$$10;\n\n    if (n$$1 === 0) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (n$$1 % 2 === 0) {\n      $x$$3$$9 = toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$1$$10 = ~~(n$$1 / 2);\n      continue BigNatModule$002EFFT$002EFp$$$mpow;\n    } else {\n      const y$$2 = BigNatModule$002EFFT$002EFp$$$mpow(toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, ~~(n$$1 / 2));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(y$$2, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$mpowL($x$$7$$11, $n$$2$$12) {\n  BigNatModule$002EFFT$002EFp$$$mpowL: while (true) {\n    const x$$7 = $x$$7$$11,\n          n$$2 = $n$$2$$12;\n\n    if (equals(n$$2, fromBits(0, 0, false))) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (equals(op_Modulus(n$$2, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n      $x$$7$$11 = toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      $n$$2$$12 = op_Division(n$$2, fromBits(2, 0, false));\n      continue BigNatModule$002EFFT$002EFp$$$mpowL;\n    } else {\n      const y$$5 = BigNatModule$002EFFT$002EFp$$$mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, op_Division(n$$2, fromBits(2, 0, false)));\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(y$$5, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(n$$3) {\n  return BigNatModule$002EFFT$002EFp$$$mpow(BigNatModule$002EFFT$$$w >>> 0, BigNatModule$002EFFT$$$pow32(2, BigNatModule$002EFFT$$$k - n$$3));\n}\nexport function BigNatModule$002EFFT$002EFp$$$minv(x$$11) {\n  return BigNatModule$002EFFT$002EFp$$$mpowL(x$$11, op_Subtraction(BigNatModule$002EFFT$$$primeP, fromBits(2, 0, false)));\n}\nexport function BigNatModule$002EFFT$$$computeFFT(lambda, mu, n$$4, w, u, res, offset) {\n  if (n$$4 === 1) {\n    res[offset] = u[mu];\n  } else {\n    const halfN = ~~(n$$4 / 2) | 0;\n    const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    const offsetHalfN = offset + halfN | 0;\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    let wj = BigNatModule$002EFFT$002EFp$$$mone;\n\n    for (let j = 0; j <= halfN - 1; j++) {\n      const even = res[offset + j];\n      const odd = res[offsetHalfN + j];\n      let y$$8;\n      const x$$13 = wj;\n      y$$8 = toInt(op_Modulus(op_Multiply(fromInteger(x$$13, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offset + j] = (even + y$$8) % BigNatModule$002EFFT$002EFp$$$p;\n      let y$$10;\n      const x$$15 = wj;\n      y$$10 = toInt(op_Modulus(op_Multiply(fromInteger(x$$15, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      res[offsetHalfN + j] = (even + BigNatModule$002EFFT$002EFp$$$p - y$$10) % BigNatModule$002EFFT$002EFp$$$p;\n      const y$$11 = wj;\n      wj = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y$$11, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n  }\n}\nexport function BigNatModule$002EFFT$$$computFftInPlace(n$$5, w$$1, u$$1) {\n  const res$$1 = fill(new Uint32Array(n$$5), 0, n$$5, BigNatModule$002EFFT$002EFp$$$mzero);\n  BigNatModule$002EFFT$$$computeFFT(1, 0, n$$5, w$$1, u$$1, res$$1, 0);\n  return res$$1;\n}\nexport function BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$6, w$$2, uT) {\n  const bigKInv = BigNatModule$002EFFT$002EFp$$$minv(n$$6 >>> 0);\n  return map(function (y$$12) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y$$12, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, BigNatModule$002EFFT$$$computFftInPlace(n$$6, BigNatModule$002EFFT$002EFp$$$minv(w$$2), uT), Uint32Array);\n}\nexport const BigNatModule$002EFFT$$$maxTwoPower = 29;\nexport const BigNatModule$002EFFT$$$twoPowerTable = initialize(BigNatModule$002EFFT$$$maxTwoPower - 1, function (i$$1) {\n  return BigNatModule$002EFFT$$$pow32(2, i$$1);\n}, Int32Array);\nexport function BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(bigK, k, u$$2, v) {\n  const w$$3 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(k);\n  const uT$$1 = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, u$$2);\n  const vT = BigNatModule$002EFFT$$$computFftInPlace(bigK, w$$3, v);\n  const rT = initialize(bigK, function (i$$2) {\n    const x$$19 = uT$$1[i$$2];\n    const y$$14 = vT[i$$2];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$19, true, 6), fromInteger(y$$14, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r = BigNatModule$002EFFT$$$computeInverseFftInPlace(bigK, w$$3, rT);\n  return r;\n}\nexport function BigNatModule$002EFFT$$$padTo(n$$8, u$$3) {\n  const uBound = u$$3.length | 0;\n  return initialize(n$$8, function (i$$3) {\n    return i$$3 < uBound ? BigNatModule$002EFFT$002EFp$$$ofInt32(u$$3[i$$3]) : BigNatModule$002EFFT$002EFp$$$mzero;\n  }, Uint32Array);\n}\nexport function BigNatModule$002EFFT$$$computeFftPolynomialProduct(degu, u$$4, degv, v$$1) {\n  const deguv = degu + degv | 0;\n  const bound = deguv + 1 | 0;\n  const patternInput = BigNatModule$002EFFT$$$leastBounding2Power(bound);\n  const w$$4 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(patternInput[1]);\n  const u$$5 = BigNatModule$002EFFT$$$padTo(patternInput[0], u$$4);\n  const v$$2 = BigNatModule$002EFFT$$$padTo(patternInput[0], v$$1);\n  const uT$$2 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, u$$5);\n  const vT$$1 = BigNatModule$002EFFT$$$computFftInPlace(patternInput[0], w$$4, v$$2);\n  const rT$$1 = initialize(patternInput[0], function (i$$4) {\n    const x$$20 = uT$$2[i$$4];\n    const y$$15 = vT$$1[i$$4];\n    return toInt(op_Modulus(op_Multiply(fromInteger(x$$20, true, 6), fromInteger(y$$15, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r$$1 = BigNatModule$002EFFT$$$computeInverseFftInPlace(patternInput[0], w$$4, rT$$1);\n  return map(BigNatModule$002EFFT$002EFp$$$toInt, r$$1, Int32Array);\n}\nexport const BigNatModule$002EFFT$$$mzero = BigNatModule$002EFFT$002EFp$$$mzero;\nexport const BigNatModule$002EFFT$$$mone = BigNatModule$002EFFT$002EFp$$$mone;\nexport const BigNatModule$002EFFT$$$maxFp = (BigNatModule$002EFFT$002EFp$$$p + BigNatModule$002EFFT$002EFp$$$p - BigNatModule$002EFFT$$$mone) % BigNatModule$002EFFT$002EFp$$$p;\nexport function BigNatModule$$$bound(n$$10) {\n  return n$$10.bound;\n}\nexport function BigNatModule$$$setBound(n$$11, v$$3) {\n  n$$11.bound = v$$3;\n}\nexport function BigNatModule$$$coeff(n$$12, i$$5) {\n  return n$$12.digits[i$$5];\n}\nexport function BigNatModule$$$coeff64(n$$13, i$$6) {\n  return fromInteger(BigNatModule$$$coeff(n$$13, i$$6), false, 2);\n}\nexport function BigNatModule$$$setCoeff(n$$14, i$$7, v$$4) {\n  n$$14.digits[i$$7] = v$$4;\n}\nexport function BigNatModule$$$pow64($x$$23$$48, $n$$15$$49) {\n  BigNatModule$$$pow64: while (true) {\n    const x$$23 = $x$$23$$48,\n          n$$15 = $n$$15$$49;\n\n    if (n$$15 === 0) {\n      return fromBits(1, 0, false);\n    } else if (n$$15 % 2 === 0) {\n      $x$$23$$48 = op_Multiply(x$$23, x$$23);\n      $n$$15$$49 = ~~(n$$15 / 2);\n      continue BigNatModule$$$pow64;\n    } else {\n      return op_Multiply(x$$23, BigNatModule$$$pow64(op_Multiply(x$$23, x$$23), ~~(n$$15 / 2)));\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$pow32($x$$24$$50, $n$$16$$51) {\n  BigNatModule$$$pow32: while (true) {\n    const x$$24 = $x$$24$$50,\n          n$$16 = $n$$16$$51;\n\n    if (n$$16 === 0) {\n      return 1;\n    } else if (n$$16 % 2 === 0) {\n      $x$$24$$50 = x$$24 * x$$24;\n      $n$$16$$51 = ~~(n$$16 / 2);\n      continue BigNatModule$$$pow32;\n    } else {\n      return x$$24 * BigNatModule$$$pow32(x$$24 * x$$24, ~~(n$$16 / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$hash(n$$17) {\n  let res$$2 = 0;\n\n  for (let i$$8 = 0; i$$8 <= n$$17.bound - 1; i$$8++) {\n    res$$2 = n$$17.digits[i$$8] + (res$$2 << 3);\n  }\n\n  return res$$2 | 0;\n}\nexport function BigNatModule$$$maxInt(a, b$$2) {\n  if (a < b$$2) {\n    return b$$2 | 0;\n  } else {\n    return a | 0;\n  }\n}\nexport function BigNatModule$$$minInt(a$$1, b$$3) {\n  if (a$$1 < b$$3) {\n    return a$$1 | 0;\n  } else {\n    return b$$3 | 0;\n  }\n}\nexport const BigNatModule$$$baseBits = 24;\nexport const BigNatModule$$$baseN = 16777216;\nexport const BigNatModule$$$baseMask = 16777215;\nexport const BigNatModule$$$baseNi64 = fromBits(16777216, 0, false);\nexport const BigNatModule$$$baseMaski64 = fromBits(16777215, 0, false);\nexport const BigNatModule$$$baseMaskU = fromBits(16777215, 0, true);\nexport const BigNatModule$$$baseMask32A = 16777215;\nexport const BigNatModule$$$baseMask32B = 255;\nexport const BigNatModule$$$baseShift32B = 24;\nexport const BigNatModule$$$baseMask64A = 16777215;\nexport const BigNatModule$$$baseMask64B = 16777215;\nexport const BigNatModule$$$baseMask64C = 65535;\nexport const BigNatModule$$$baseShift64B = 24;\nexport const BigNatModule$$$baseShift64C = 48;\nexport function BigNatModule$$$divbase(x$$25) {\n  return ~~(x$$25 >>> 0 >>> BigNatModule$$$baseBits);\n}\nexport function BigNatModule$$$modbase(x$$26) {\n  return x$$26 & BigNatModule$$$baseMask;\n}\nexport function BigNatModule$$$createN(b$$4) {\n  return new BigNat(b$$4, new Int32Array(b$$4));\n}\nexport function BigNatModule$$$copyN(x$$27) {\n  return new BigNat(x$$27.bound, copy(x$$27.digits, Int32Array));\n}\nexport function BigNatModule$$$normN(n$$18) {\n  const findLeastBound = function findLeastBound($na$$62, $i$$9$$63) {\n    findLeastBound: while (true) {\n      const na = $na$$62,\n            i$$9 = $i$$9$$63;\n\n      if (i$$9 === -1 ? true : na[i$$9] !== 0) {\n        return i$$9 + 1 | 0;\n      } else {\n        $na$$62 = na;\n        $i$$9$$63 = i$$9 - 1;\n        continue findLeastBound;\n      }\n\n      break;\n    }\n  };\n\n  const bound$$1 = findLeastBound(n$$18.digits, n$$18.bound - 1) | 0;\n  n$$18.bound = bound$$1;\n  return n$$18;\n}\nexport const BigNatModule$$$boundInt = 2;\nexport const BigNatModule$$$boundInt64 = 3;\nexport const BigNatModule$$$boundBase = 1;\nexport function BigNatModule$$$embed(x$$28) {\n  const x$$29 = (x$$28 < 0 ? 0 : x$$28) | 0;\n\n  if (x$$29 < BigNatModule$$$baseN) {\n    const r$$2 = BigNatModule$$$createN(1);\n    r$$2.digits[0] = x$$29;\n    return BigNatModule$$$normN(r$$2);\n  } else {\n    const r$$3 = BigNatModule$$$createN(BigNatModule$$$boundInt);\n\n    for (let i$$10 = 0; i$$10 <= BigNatModule$$$boundInt - 1; i$$10++) {\n      r$$3.digits[i$$10] = ~~(x$$29 / BigNatModule$$$pow32(BigNatModule$$$baseN, i$$10)) % BigNatModule$$$baseN;\n    }\n\n    return BigNatModule$$$normN(r$$3);\n  }\n}\nexport function BigNatModule$$$embed64(x$$30) {\n  const x$$31 = compare(x$$30, fromBits(0, 0, false)) < 0 ? fromBits(0, 0, false) : x$$30;\n  const r$$4 = BigNatModule$$$createN(BigNatModule$$$boundInt64);\n\n  for (let i$$11 = 0; i$$11 <= BigNatModule$$$boundInt64 - 1; i$$11++) {\n    r$$4.digits[i$$11] = ~~toInt(op_Modulus(op_Division(x$$31, BigNatModule$$$pow64(BigNatModule$$$baseNi64, i$$11)), BigNatModule$$$baseNi64));\n  }\n\n  return BigNatModule$$$normN(r$$4);\n}\nexport function BigNatModule$$$eval32(n$$19) {\n  if (n$$19.bound === 1) {\n    return n$$19.digits[0] | 0;\n  } else {\n    let acc = 0;\n\n    for (let i$$12 = n$$19.bound - 1; i$$12 >= 0; i$$12--) {\n      acc = n$$19.digits[i$$12] + BigNatModule$$$baseN * acc;\n    }\n\n    return acc | 0;\n  }\n}\nexport function BigNatModule$$$eval64(n$$20) {\n  if (n$$20.bound === 1) {\n    return fromInteger(n$$20.digits[0], false, 2);\n  } else {\n    let acc$$1 = fromBits(0, 0, false);\n\n    for (let i$$13 = n$$20.bound - 1; i$$13 >= 0; i$$13--) {\n      acc$$1 = op_Addition(fromInteger(n$$20.digits[i$$13], false, 2), op_Multiply(BigNatModule$$$baseNi64, acc$$1));\n    }\n\n    return acc$$1;\n  }\n}\nexport const BigNatModule$$$one = BigNatModule$$$embed(1);\nexport const BigNatModule$$$zero = BigNatModule$$$embed(0);\nexport function BigNatModule$$$restrictTo(d, n$$21) {\n  return new BigNat(BigNatModule$$$minInt(d, n$$21.bound), n$$21.digits);\n}\nexport function BigNatModule$$$shiftUp(d$$1, n$$22) {\n  const m = BigNatModule$$$createN(n$$22.bound + d$$1);\n\n  for (let i$$14 = 0; i$$14 <= n$$22.bound - 1; i$$14++) {\n    m.digits[i$$14 + d$$1] = n$$22.digits[i$$14];\n  }\n\n  return m;\n}\nexport function BigNatModule$$$shiftDown(d$$2, n$$23) {\n  if (n$$23.bound - d$$2 <= 0) {\n    return BigNatModule$$$zero;\n  } else {\n    const m$$1 = BigNatModule$$$createN(n$$23.bound - d$$2);\n\n    for (let i$$15 = 0; i$$15 <= m$$1.bound - 1; i$$15++) {\n      m$$1.digits[i$$15] = n$$23.digits[i$$15 + d$$2];\n    }\n\n    return m$$1;\n  }\n}\nexport function BigNatModule$$$degree(n$$24) {\n  return n$$24.bound - 1;\n}\nexport function BigNatModule$$$addP($i$$16$$75, $n$$25$$76, $c$$77, $p$$78, $q$$79, $r$$5$$80) {\n  BigNatModule$$$addP: while (true) {\n    const i$$16 = $i$$16$$75,\n          n$$25 = $n$$25$$76,\n          c = $c$$77,\n          p = $p$$78,\n          q = $q$$79,\n          r$$5 = $r$$5$$80;\n\n    if (i$$16 < n$$25) {\n      const x$$32 = (i$$16 < p.bound ? p.digits[i$$16] : 0) + (i$$16 < q.bound ? q.digits[i$$16] : 0) + c | 0;\n      r$$5.digits[i$$16] = BigNatModule$$$modbase(x$$32);\n      const c$$1 = BigNatModule$$$divbase(x$$32) | 0;\n      $i$$16$$75 = i$$16 + 1;\n      $n$$25$$76 = n$$25;\n      $c$$77 = c$$1;\n      $p$$78 = p;\n      $q$$79 = q;\n      $r$$5$$80 = r$$5;\n      continue BigNatModule$$$addP;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$add(p$$1, q$$1) {\n  const rbound = 1 + BigNatModule$$$maxInt(p$$1.bound, q$$1.bound) | 0;\n  const r$$6 = BigNatModule$$$createN(rbound);\n  BigNatModule$$$addP(0, rbound, 0, p$$1, q$$1, r$$6);\n  return BigNatModule$$$normN(r$$6);\n}\nexport function BigNatModule$$$subP($i$$19$$83, $n$$26$$84, $c$$2$$85, $p$$2$$86, $q$$2$$87, $r$$7$$88) {\n  BigNatModule$$$subP: while (true) {\n    const i$$19 = $i$$19$$83,\n          n$$26 = $n$$26$$84,\n          c$$2 = $c$$2$$85,\n          p$$2 = $p$$2$$86,\n          q$$2 = $q$$2$$87,\n          r$$7 = $r$$7$$88;\n\n    if (i$$19 < n$$26) {\n      const x$$33 = (i$$19 < p$$2.bound ? p$$2.digits[i$$19] : 0) - (i$$19 < q$$2.bound ? q$$2.digits[i$$19] : 0) + c$$2 | 0;\n\n      if (x$$33 > 0) {\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$33);\n        const c$$3 = BigNatModule$$$divbase(x$$33) | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$3;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      } else {\n        const x$$34 = x$$33 + BigNatModule$$$baseN | 0;\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$34);\n        const c$$4 = BigNatModule$$$divbase(x$$34) - 1 | 0;\n        $i$$19$$83 = i$$19 + 1;\n        $n$$26$$84 = n$$26;\n        $c$$2$$85 = c$$4;\n        $p$$2$$86 = p$$2;\n        $q$$2$$87 = q$$2;\n        $r$$7$$88 = r$$7;\n        continue BigNatModule$$$subP;\n      }\n    } else {\n      const underflow = c$$2 !== 0;\n      return underflow;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$sub(p$$3, q$$3) {\n  const rbound$$1 = BigNatModule$$$maxInt(p$$3.bound, q$$3.bound) | 0;\n  const r$$8 = BigNatModule$$$createN(rbound$$1);\n  const underflow$$1 = BigNatModule$$$subP(0, rbound$$1, 0, p$$3, q$$3, r$$8);\n\n  if (underflow$$1) {\n    return BigNatModule$$$embed(0);\n  } else {\n    return BigNatModule$$$normN(r$$8);\n  }\n}\nexport function BigNatModule$$$isZero(p$$4) {\n  return p$$4.bound === 0;\n}\nexport function BigNatModule$$$IsZero(p$$5) {\n  return BigNatModule$$$isZero(p$$5);\n}\nexport function BigNatModule$$$isOne(p$$6) {\n  if (p$$6.bound === 1) {\n    return p$$6.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$equal(p$$7, q$$4) {\n  if (p$$7.bound === q$$4.bound) {\n    const check = function check($pa$$96, $qa$$97, $i$$22$$98) {\n      check: while (true) {\n        const pa = $pa$$96,\n              qa = $qa$$97,\n              i$$22 = $i$$22$$98;\n\n        if (i$$22 === -1) {\n          return true;\n        } else if (pa[i$$22] === qa[i$$22]) {\n          $pa$$96 = pa;\n          $qa$$97 = qa;\n          $i$$22$$98 = i$$22 - 1;\n          continue check;\n        } else {\n          return false;\n        }\n\n        break;\n      }\n    };\n\n    return check(p$$7.digits, q$$4.digits, p$$7.bound - 1);\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$shiftCompare(p$$8, pn, q$$5, qn) {\n  if (p$$8.bound + pn < q$$5.bound + qn) {\n    return -1 | 0;\n  } else if (p$$8.bound + pn > q$$5.bound + pn) {\n    return 1;\n  } else {\n    const check$$1 = function check$$1($pa$$1$$103, $qa$$1$$104, $i$$23$$105) {\n      check$$1: while (true) {\n        const pa$$1 = $pa$$1$$103,\n              qa$$1 = $qa$$1$$104,\n              i$$23 = $i$$23$$105;\n\n        if (i$$23 === -1) {\n          return 0;\n        } else {\n          const pai = (i$$23 < pn ? 0 : pa$$1[i$$23 - pn]) | 0;\n          const qai = (i$$23 < qn ? 0 : qa$$1[i$$23 - qn]) | 0;\n\n          if (pai === qai) {\n            $pa$$1$$103 = pa$$1;\n            $qa$$1$$104 = qa$$1;\n            $i$$23$$105 = i$$23 - 1;\n            continue check$$1;\n          } else if (pai < qai) {\n            return -1 | 0;\n          } else {\n            return 1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return check$$1(p$$8.digits, q$$5.digits, p$$8.bound + pn - 1) | 0;\n  }\n}\nexport function BigNatModule$$$compare(p$$9, q$$6) {\n  if (p$$9.bound < q$$6.bound) {\n    return -1 | 0;\n  } else if (p$$9.bound > q$$6.bound) {\n    return 1;\n  } else {\n    const check$$2 = function check$$2($pa$$2$$108, $qa$$2$$109, $i$$24$$110) {\n      check$$2: while (true) {\n        const pa$$2 = $pa$$2$$108,\n              qa$$2 = $qa$$2$$109,\n              i$$24 = $i$$24$$110;\n\n        if (i$$24 === -1) {\n          return 0;\n        } else if (pa$$2[i$$24] === qa$$2[i$$24]) {\n          $pa$$2$$108 = pa$$2;\n          $qa$$2$$109 = qa$$2;\n          $i$$24$$110 = i$$24 - 1;\n          continue check$$2;\n        } else if (pa$$2[i$$24] < qa$$2[i$$24]) {\n          return -1 | 0;\n        } else {\n          return 1;\n        }\n\n        break;\n      }\n    };\n\n    return check$$2(p$$9.digits, q$$6.digits, p$$9.bound - 1) | 0;\n  }\n}\nexport function BigNatModule$$$lt(p$$10, q$$7) {\n  return BigNatModule$$$compare(p$$10, q$$7) === -1;\n}\nexport function BigNatModule$$$gt(p$$11, q$$8) {\n  return BigNatModule$$$compare(p$$11, q$$8) === 1;\n}\nexport function BigNatModule$$$lte(p$$12, q$$9) {\n  return BigNatModule$$$compare(p$$12, q$$9) !== 1;\n}\nexport function BigNatModule$$$gte(p$$13, q$$10) {\n  return BigNatModule$$$compare(p$$13, q$$10) !== -1;\n}\nexport function BigNatModule$$$min(a$$2, b$$5) {\n  if (BigNatModule$$$lt(a$$2, b$$5)) {\n    return a$$2;\n  } else {\n    return b$$5;\n  }\n}\nexport function BigNatModule$$$max(a$$3, b$$6) {\n  if (BigNatModule$$$lt(a$$3, b$$6)) {\n    return b$$6;\n  } else {\n    return a$$3;\n  }\n}\nexport function BigNatModule$$$contributeArr($a$$4$$123, $i$$25$$124, $c$$5$$125) {\n  BigNatModule$$$contributeArr: while (true) {\n    const a$$4 = $a$$4$$123,\n          i$$25 = $i$$25$$124,\n          c$$5 = $c$$5$$125;\n    const x$$35 = op_Addition(fromInteger(a$$4[i$$25], false, 2), c$$5);\n    const c$$6 = op_Division(x$$35, BigNatModule$$$baseNi64);\n    let x$$38;\n    const value = op_BitwiseAnd(x$$35, BigNatModule$$$baseMaski64);\n    x$$38 = ~~toInt(value);\n    a$$4[i$$25] = x$$38;\n\n    if (compare(c$$6, fromBits(0, 0, false)) > 0) {\n      $a$$4$$123 = a$$4;\n      $i$$25$$124 = i$$25 + 1;\n      $c$$5$$125 = c$$6;\n      continue BigNatModule$$$contributeArr;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$scale(k$$2, p$$14) {\n  const rbound$$2 = p$$14.bound + BigNatModule$$$boundInt | 0;\n  const r$$9 = BigNatModule$$$createN(rbound$$2);\n  const k$$3 = fromInteger(k$$2, false, 2);\n\n  for (let i$$26 = 0; i$$26 <= p$$14.bound - 1; i$$26++) {\n    const kpi = op_Multiply(k$$3, fromInteger(p$$14.digits[i$$26], false, 2));\n    BigNatModule$$$contributeArr(r$$9.digits, i$$26, kpi);\n  }\n\n  return BigNatModule$$$normN(r$$9);\n}\nexport function BigNatModule$$$mulSchoolBookBothSmall(p$$15, q$$11) {\n  var value$$1;\n  const r$$11 = BigNatModule$$$createN(2);\n  const rak = op_Multiply(fromInteger(p$$15, false, 2), fromInteger(q$$11, false, 2));\n  BigNatModule$$$setCoeff(r$$11, 0, (value$$1 = op_BitwiseAnd(rak, BigNatModule$$$baseMaski64), (~~toInt(value$$1))));\n  BigNatModule$$$setCoeff(r$$11, 1, ~~toInt(op_Division(rak, BigNatModule$$$baseNi64)));\n  return BigNatModule$$$normN(r$$11);\n}\nexport function BigNatModule$$$mulSchoolBookCarry($r$$12$$130, $c$$8$$131, $k$$4$$132) {\n  var value$$2;\n\n  BigNatModule$$$mulSchoolBookCarry: while (true) {\n    const r$$12 = $r$$12$$130,\n          c$$8 = $c$$8$$131,\n          k$$4 = $k$$4$$132;\n\n    if (compare(c$$8, fromBits(0, 0, false)) > 0) {\n      const rak$$1 = op_Addition(BigNatModule$$$coeff64(r$$12, k$$4), c$$8);\n      BigNatModule$$$setCoeff(r$$12, k$$4, (value$$2 = op_BitwiseAnd(rak$$1, BigNatModule$$$baseMaski64), (~~toInt(value$$2))));\n      $r$$12$$130 = r$$12;\n      $c$$8$$131 = op_Division(rak$$1, BigNatModule$$$baseNi64);\n      $k$$4$$132 = k$$4 + 1;\n      continue BigNatModule$$$mulSchoolBookCarry;\n    } else {\n      void null;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$mulSchoolBookOneSmall(p$$16, q$$12) {\n  var value$$3;\n  const bp = BigNatModule$$$bound(p$$16) | 0;\n  const rbound$$3 = bp + 1 | 0;\n  const r$$13 = BigNatModule$$$createN(rbound$$3);\n  const q$$13 = fromInteger(q$$12, false, 2);\n  let c$$9 = fromBits(0, 0, false);\n\n  for (let i$$28 = 0; i$$28 <= bp - 1; i$$28++) {\n    const rak$$2 = op_Addition(op_Addition(c$$9, BigNatModule$$$coeff64(r$$13, i$$28)), op_Multiply(BigNatModule$$$coeff64(p$$16, i$$28), q$$13));\n    BigNatModule$$$setCoeff(r$$13, i$$28, (value$$3 = op_BitwiseAnd(rak$$2, BigNatModule$$$baseMaski64), (~~toInt(value$$3))));\n    c$$9 = op_Division(rak$$2, BigNatModule$$$baseNi64);\n  }\n\n  BigNatModule$$$mulSchoolBookCarry(r$$13, c$$9, bp);\n  return BigNatModule$$$normN(r$$13);\n}\nexport function BigNatModule$$$mulSchoolBookNeitherSmall(p$$17, q$$14) {\n  var value$$4;\n  const rbound$$4 = p$$17.bound + q$$14.bound | 0;\n  const r$$14 = BigNatModule$$$createN(rbound$$4);\n\n  for (let i$$29 = 0; i$$29 <= p$$17.bound - 1; i$$29++) {\n    const pai$$1 = fromInteger(p$$17.digits[i$$29], false, 2);\n    let c$$10 = fromBits(0, 0, false);\n    let k$$5 = i$$29 | 0;\n\n    for (let j$$1 = 0; j$$1 <= q$$14.bound - 1; j$$1++) {\n      const qaj = fromInteger(q$$14.digits[j$$1], false, 2);\n      const rak$$3 = op_Addition(op_Addition(fromInteger(r$$14.digits[k$$5], false, 2), c$$10), op_Multiply(pai$$1, qaj));\n      r$$14.digits[k$$5] = (value$$4 = op_BitwiseAnd(rak$$3, BigNatModule$$$baseMaski64), (~~toInt(value$$4)));\n      c$$10 = op_Division(rak$$3, BigNatModule$$$baseNi64);\n      k$$5 = k$$5 + 1;\n    }\n\n    BigNatModule$$$mulSchoolBookCarry(r$$14, c$$10, k$$5);\n  }\n\n  return BigNatModule$$$normN(r$$14);\n}\nexport function BigNatModule$$$mulSchoolBook(p$$18, q$$15) {\n  const pSmall = BigNatModule$$$bound(p$$18) === 1;\n  const qSmall = BigNatModule$$$bound(q$$15) === 1;\n\n  if (pSmall ? qSmall : false) {\n    return BigNatModule$$$mulSchoolBookBothSmall(BigNatModule$$$coeff(p$$18, 0), BigNatModule$$$coeff(q$$15, 0));\n  } else if (pSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(q$$15, BigNatModule$$$coeff(p$$18, 0));\n  } else if (qSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(p$$18, BigNatModule$$$coeff(q$$15, 0));\n  } else {\n    return BigNatModule$$$mulSchoolBookNeitherSmall(p$$18, q$$15);\n  }\n}\nexport const BigNatModule$002Eencoding = declare(function BigInt_BigNatModule_encoding(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n  this.bigL = bigL | 0;\n  this.twoToBigL = twoToBigL | 0;\n  this.k = k | 0;\n  this.bigK = bigK | 0;\n  this.bigN = bigN | 0;\n  this.split = split | 0;\n  this.splits = splits;\n}, Record);\nexport function BigNatModule$002Eencoding$reflection() {\n  return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule$002Eencoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\nexport function BigNatModule$$$mkEncoding(bigL, k$$6, bigK$$2, bigN) {\n  return new BigNatModule$002Eencoding(bigL, BigNatModule$$$pow32(2, bigL), k$$6, bigK$$2, bigN, ~~(BigNatModule$$$baseBits / bigL), initialize(~~(BigNatModule$$$baseBits / bigL), function (i$$30) {\n    return BigNatModule$$$pow32(2, bigL * i$$30);\n  }, Int32Array));\n}\nexport const BigNatModule$$$table = [BigNatModule$$$mkEncoding(1, 28, 268435456, 268435456), BigNatModule$$$mkEncoding(2, 26, 67108864, 134217728), BigNatModule$$$mkEncoding(3, 24, 16777216, 50331648), BigNatModule$$$mkEncoding(4, 22, 4194304, 16777216), BigNatModule$$$mkEncoding(5, 20, 1048576, 5242880), BigNatModule$$$mkEncoding(6, 18, 262144, 1572864), BigNatModule$$$mkEncoding(7, 16, 65536, 458752), BigNatModule$$$mkEncoding(8, 14, 16384, 131072), BigNatModule$$$mkEncoding(9, 12, 4096, 36864), BigNatModule$$$mkEncoding(10, 10, 1024, 10240), BigNatModule$$$mkEncoding(11, 8, 256, 2816), BigNatModule$$$mkEncoding(12, 6, 64, 768), BigNatModule$$$mkEncoding(13, 4, 16, 208)];\nexport function BigNatModule$$$calculateTableTow(bigL$$1) {\n  const k$$7 = BigNatModule$002EFFT$$$maxBitsInsideFp - 2 * bigL$$1 | 0;\n  const bigK$$3 = BigNatModule$$$pow64(fromBits(2, 0, false), k$$7);\n  const N = op_Multiply(bigK$$3, fromInteger(bigL$$1, false, 2));\n  return [bigL$$1, k$$7, bigK$$3, N];\n}\nexport function BigNatModule$$$encodingGivenResultBits(bitsRes) {\n  const selectFrom = function selectFrom($i$$31$$145) {\n    selectFrom: while (true) {\n      const i$$31 = $i$$31$$145;\n\n      if (i$$31 + 1 < BigNatModule$$$table.length ? bitsRes < BigNatModule$$$table[i$$31 + 1].bigN : false) {\n        $i$$31$$145 = i$$31 + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule$$$table[i$$31];\n      }\n\n      break;\n    }\n  };\n\n  if (bitsRes >= BigNatModule$$$table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nexport const BigNatModule$$$bitmask = initialize(BigNatModule$$$baseBits, function (i$$32) {\n  return BigNatModule$$$pow32(2, i$$32) - 1;\n}, Int32Array);\nexport const BigNatModule$$$twopowers = initialize(BigNatModule$$$baseBits, function (i$$33) {\n  return BigNatModule$$$pow32(2, i$$33);\n}, Int32Array);\nexport const BigNatModule$$$twopowersI64 = initialize(BigNatModule$$$baseBits, function (i$$34) {\n  return BigNatModule$$$pow64(fromBits(2, 0, false), i$$34);\n}, Array);\nexport function BigNatModule$$$wordBits(word) {\n  const hi = function hi($k$$8$$147) {\n    hi: while (true) {\n      const k$$8 = $k$$8$$147;\n\n      if (k$$8 === 0) {\n        return 0;\n      } else if ((word & BigNatModule$$$twopowers[k$$8 - 1]) !== 0) {\n        return k$$8 | 0;\n      } else {\n        $k$$8$$147 = k$$8 - 1;\n        continue hi;\n      }\n\n      break;\n    }\n  };\n\n  return hi(BigNatModule$$$baseBits) | 0;\n}\nexport function BigNatModule$$$bits(u$$6) {\n  if (u$$6.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule$$$degree(u$$6) * BigNatModule$$$baseBits + BigNatModule$$$wordBits(u$$6.digits[BigNatModule$$$degree(u$$6)]) | 0;\n  }\n}\nexport function BigNatModule$$$extractBits(n$$27, enc, bi) {\n  const bj = bi + enc.bigL - 1 | 0;\n  const biw = ~~(bi / BigNatModule$$$baseBits) | 0;\n  const bjw = ~~(bj / BigNatModule$$$baseBits) | 0;\n\n  if (biw !== bjw) {\n    const x$$47 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const y$$17 = (bjw < n$$27.bound ? n$$27.digits[bjw] : 0) | 0;\n    const xbit = bi % BigNatModule$$$baseBits | 0;\n    const nxbits = BigNatModule$$$baseBits - xbit | 0;\n    const x$$48 = x$$47 >> xbit | 0;\n    const y$$18 = y$$17 << nxbits | 0;\n    const x$$49 = x$$48 | y$$18 | 0;\n    const x$$50 = x$$49 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$50 | 0;\n  } else {\n    const x$$51 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const xbit$$1 = bi % BigNatModule$$$baseBits | 0;\n    const x$$52 = x$$51 >> xbit$$1 | 0;\n    const x$$53 = x$$52 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$53 | 0;\n  }\n}\nexport function BigNatModule$$$encodePoly(enc$$1, n$$28) {\n  const poly = fill(new Uint32Array(enc$$1.bigK), 0, enc$$1.bigK, BigNatModule$002EFFT$002EFp$$$ofInt32(0));\n  const biMax = n$$28.bound * BigNatModule$$$baseBits | 0;\n\n  const encoder = function encoder($i$$38$$154, $bi$$1$$155) {\n    encoder: while (true) {\n      const i$$38 = $i$$38$$154,\n            bi$$1 = $bi$$1$$155;\n\n      if (i$$38 === enc$$1.bigK ? true : bi$$1 > biMax) {\n        void null;\n      } else {\n        const pi = BigNatModule$$$extractBits(n$$28, enc$$1, bi$$1) | 0;\n        poly[i$$38] = BigNatModule$002EFFT$002EFp$$$ofInt32(pi);\n        const i$$39 = i$$38 + 1 | 0;\n        const bi$$2 = bi$$1 + enc$$1.bigL | 0;\n        $i$$38$$154 = i$$39;\n        $bi$$1$$155 = bi$$2;\n        continue encoder;\n      }\n\n      break;\n    }\n  };\n\n  encoder(0, 0);\n  return poly;\n}\nexport function BigNatModule$$$decodeResultBits(enc$$2, poly$$1) {\n  let n$$29 = 0;\n\n  for (let i$$40 = 0; i$$40 <= poly$$1.length - 1; i$$40++) {\n    if (poly$$1[i$$40] !== BigNatModule$002EFFT$$$mzero) {\n      n$$29 = i$$40;\n    } else {\n      void null;\n    }\n  }\n\n  const rbits = BigNatModule$002EFFT$$$maxBitsInsideFp + enc$$2.bigL * n$$29 + 1 | 0;\n  return rbits + 1 | 0;\n}\nexport function BigNatModule$$$decodePoly(enc$$3, poly$$2) {\n  const rbound$$5 = ~~(BigNatModule$$$decodeResultBits(enc$$3, poly$$2) / BigNatModule$$$baseBits) + 1 | 0;\n  const r$$15 = BigNatModule$$$createN(rbound$$5);\n\n  const evaluate = function evaluate($i$$41$$160, $j$$2$$161, $d$$3$$162) {\n    evaluate: while (true) {\n      const i$$41 = $i$$41$$160,\n            j$$2 = $j$$2$$161,\n            d$$3 = $d$$3$$162;\n\n      if (i$$41 === enc$$3.bigK) {\n        void null;\n      } else {\n        if (j$$2 >= rbound$$5) {\n          void null;\n        } else {\n          const x$$54 = op_Multiply(fromInteger(BigNatModule$002EFFT$002EFp$$$toInt(poly$$2[i$$41]), false, 2), BigNatModule$$$twopowersI64[d$$3]);\n          BigNatModule$$$contributeArr(r$$15.digits, j$$2, x$$54);\n        }\n\n        const i$$43 = i$$41 + 1 | 0;\n        const d$$4 = d$$3 + enc$$3.bigL | 0;\n        const patternInput$$1 = d$$4 >= BigNatModule$$$baseBits ? [j$$2 + 1, d$$4 - BigNatModule$$$baseBits] : [j$$2, d$$4];\n        $i$$41$$160 = i$$43;\n        $j$$2$$161 = patternInput$$1[0];\n        $d$$3$$162 = patternInput$$1[1];\n        continue evaluate;\n      }\n\n      break;\n    }\n  };\n\n  evaluate(0, 0, 0);\n  return BigNatModule$$$normN(r$$15);\n}\nexport function BigNatModule$$$quickMulUsingFft(u$$7, v$$5) {\n  const bitsRes$$1 = BigNatModule$$$bits(u$$7) + BigNatModule$$$bits(v$$5) | 0;\n  const enc$$4 = BigNatModule$$$encodingGivenResultBits(bitsRes$$1);\n  const upoly = BigNatModule$$$encodePoly(enc$$4, u$$7);\n  const vpoly = BigNatModule$$$encodePoly(enc$$4, v$$5);\n  const rpoly = BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(enc$$4.bigK, enc$$4.k, upoly, vpoly);\n  const r$$17 = BigNatModule$$$decodePoly(enc$$4, rpoly);\n  return BigNatModule$$$normN(r$$17);\n}\nexport const BigNatModule$$$minDigitsKaratsuba = 16;\nexport function BigNatModule$$$recMulKaratsuba(mul, p$$19, q$$16) {\n  const bp$$1 = p$$19.bound | 0;\n  const bq = q$$16.bound | 0;\n  const bmax = BigNatModule$$$maxInt(bp$$1, bq) | 0;\n\n  if (bmax > BigNatModule$$$minDigitsKaratsuba) {\n    const k$$9 = ~~(bmax / 2) | 0;\n    const a0 = BigNatModule$$$restrictTo(k$$9, p$$19);\n    const a1 = BigNatModule$$$shiftDown(k$$9, p$$19);\n    const b0 = BigNatModule$$$restrictTo(k$$9, q$$16);\n    const b1 = BigNatModule$$$shiftDown(k$$9, q$$16);\n    const q0 = mul(a0, b0);\n    const q1 = mul(BigNatModule$$$add(a0, a1), BigNatModule$$$add(b0, b1));\n    const q2 = mul(a1, b1);\n    const p1 = BigNatModule$$$sub(q1, BigNatModule$$$add(q0, q2));\n    const r$$18 = BigNatModule$$$add(q0, BigNatModule$$$shiftUp(k$$9, BigNatModule$$$add(p1, BigNatModule$$$shiftUp(k$$9, q2))));\n    return r$$18;\n  } else {\n    return BigNatModule$$$mulSchoolBook(p$$19, q$$16);\n  }\n}\nexport function BigNatModule$$$mulKaratsuba(x$$55, y$$19) {\n  return BigNatModule$$$recMulKaratsuba(BigNatModule$$$mulKaratsuba, x$$55, y$$19);\n}\nexport const BigNatModule$$$productDigitsUpperSchoolBook = ~~(64000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$singleDigitForceSchoolBook = ~~(32000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$productDigitsUpperFft = ~~(BigNatModule$$$table[0].bigN / BigNatModule$$$baseBits);\nexport function BigNatModule$$$mul(p$$20, q$$17) {\n  return BigNatModule$$$mulSchoolBook(p$$20, q$$17);\n}\nexport function BigNatModule$$$scaleSubInPlace(x$$57, f, a$$5, n$$30) {\n  const patternInput$$2 = [x$$57.digits, BigNatModule$$$degree(x$$57)];\n  const patternInput$$3 = [a$$5.digits, BigNatModule$$$degree(a$$5)];\n  const f$$1 = fromInteger(f, false, 2);\n  let j$$4 = 0;\n  let z$$7 = op_Multiply(f$$1, fromInteger(patternInput$$3[0][0], false, 2));\n\n  while (compare(z$$7, fromBits(0, 0, false)) > 0 ? true : j$$4 < patternInput$$3[1]) {\n    if (j$$4 > patternInput$$2[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    } else {\n      void null;\n    }\n\n    let zLo;\n    let value$$6;\n    const x$$59 = z$$7;\n    const value$$5 = op_BitwiseAnd(x$$59, BigNatModule$$$baseMaski64);\n    value$$6 = ~~toInt(value$$5);\n    zLo = value$$6;\n    let zHi;\n    const x$$60 = z$$7;\n    zHi = op_Division(x$$60, BigNatModule$$$baseNi64);\n\n    if (zLo <= patternInput$$2[0][j$$4 + n$$30]) {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] - zLo;\n    } else {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] + (BigNatModule$$$baseN - zLo);\n      zHi = op_Addition(zHi, fromBits(1, 0, false));\n    }\n\n    if (j$$4 < patternInput$$3[1]) {\n      z$$7 = op_Addition(zHi, op_Multiply(f$$1, fromInteger(patternInput$$3[0][j$$4 + 1], false, 2)));\n    } else {\n      z$$7 = zHi;\n    }\n\n    j$$4 = j$$4 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$57);\n}\nexport function BigNatModule$$$scaleSub(x$$61, f$$2, a$$7, n$$31) {\n  const freshx = BigNatModule$$$add(x$$61, BigNatModule$$$zero);\n  BigNatModule$$$scaleSubInPlace(freshx, f$$2, a$$7, n$$31);\n  return BigNatModule$$$normN(freshx);\n}\nexport function BigNatModule$$$scaleAddInPlace(x$$62, f$$3, a$$8, n$$32) {\n  const patternInput$$4 = [x$$62.digits, BigNatModule$$$degree(x$$62)];\n  const patternInput$$5 = [a$$8.digits, BigNatModule$$$degree(a$$8)];\n  const f$$4 = fromInteger(f$$3, false, 2);\n  let j$$5 = 0;\n  let z$$8 = op_Multiply(f$$4, fromInteger(patternInput$$5[0][0], false, 2));\n\n  while (compare(z$$8, fromBits(0, 0, false)) > 0 ? true : j$$5 < patternInput$$5[1]) {\n    if (j$$5 > patternInput$$4[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    } else {\n      void null;\n    }\n\n    let zLo$$1;\n    let value$$8;\n    const x$$64 = z$$8;\n    const value$$7 = op_BitwiseAnd(x$$64, BigNatModule$$$baseMaski64);\n    value$$8 = ~~toInt(value$$7);\n    zLo$$1 = value$$8;\n    let zHi$$1;\n    const x$$65 = z$$8;\n    zHi$$1 = op_Division(x$$65, BigNatModule$$$baseNi64);\n\n    if (zLo$$1 < BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]) {\n      patternInput$$4[0][j$$5 + n$$32] = patternInput$$4[0][j$$5 + n$$32] + zLo$$1;\n    } else {\n      patternInput$$4[0][j$$5 + n$$32] = zLo$$1 - (BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]);\n      zHi$$1 = op_Addition(zHi$$1, fromBits(1, 0, false));\n    }\n\n    if (j$$5 < patternInput$$5[1]) {\n      z$$8 = op_Addition(zHi$$1, op_Multiply(f$$4, fromInteger(patternInput$$5[0][j$$5 + 1], false, 2)));\n    } else {\n      z$$8 = zHi$$1;\n    }\n\n    j$$5 = j$$5 + 1;\n  }\n\n  void BigNatModule$$$normN(x$$62);\n}\nexport function BigNatModule$$$scaleAdd(x$$66, f$$5, a$$10, n$$33) {\n  const freshx$$1 = BigNatModule$$$add(x$$66, BigNatModule$$$zero);\n  BigNatModule$$$scaleAddInPlace(freshx$$1, f$$5, a$$10, n$$33);\n  return BigNatModule$$$normN(freshx$$1);\n}\nexport function BigNatModule$$$removeFactor(x$$67, a$$11, n$$34) {\n  const patternInput$$6 = [BigNatModule$$$degree(a$$11), BigNatModule$$$degree(x$$67)];\n\n  if (patternInput$$6[1] < patternInput$$6[0] + n$$34) {\n    return 0;\n  } else {\n    let f$$6;\n\n    if (patternInput$$6[0] === 0) {\n      if (patternInput$$6[1] === n$$34) {\n        f$$6 = ~~(x$$67.digits[n$$34] / a$$11.digits[0]);\n      } else {\n        const f64 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), fromInteger(a$$11.digits[0], false, 2));\n        f$$6 = ~~toInt(f64);\n      }\n    } else if (patternInput$$6[1] === patternInput$$6[0] + n$$34) {\n      f$$6 = ~~(x$$67.digits[patternInput$$6[1]] / (a$$11.digits[patternInput$$6[0]] + 1));\n    } else {\n      const f64$$1 = op_Division(op_Addition(op_Multiply(fromInteger(x$$67.digits[patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(x$$67.digits[patternInput$$6[1] - 1], false, 2)), op_Addition(fromInteger(a$$11.digits[patternInput$$6[0]], false, 2), fromBits(1, 0, false)));\n      f$$6 = ~~toInt(f64$$1);\n    }\n\n    if (f$$6 === 0) {\n      const lte = BigNatModule$$$shiftCompare(a$$11, n$$34, x$$67, 0) !== 1;\n\n      if (lte) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f$$6 | 0;\n    }\n  }\n}\nexport function BigNatModule$$$divmod(b$$7, a$$12) {\n  if (BigNatModule$$$isZero(a$$12)) {\n    throw new Error();\n  } else if (BigNatModule$$$degree(b$$7) < BigNatModule$$$degree(a$$12)) {\n    return [BigNatModule$$$zero, b$$7];\n  } else {\n    const x$$68 = BigNatModule$$$copyN(b$$7);\n    const d$$6 = BigNatModule$$$createN(BigNatModule$$$degree(b$$7) - BigNatModule$$$degree(a$$12) + 1 + 1);\n    let p$$21 = BigNatModule$$$degree(b$$7) | 0;\n    const m$$2 = BigNatModule$$$degree(a$$12) | 0;\n    let n$$35 = p$$21 - m$$2 | 0;\n\n    const Invariant = function Invariant(tupledArg) {\n      void null;\n    };\n\n    let finished = false;\n\n    while (!finished) {\n      Invariant([d$$6, x$$68, n$$35, p$$21]);\n      const f$$7 = BigNatModule$$$removeFactor(x$$68, a$$12, n$$35) | 0;\n\n      if (f$$7 > 0) {\n        BigNatModule$$$scaleSubInPlace(x$$68, f$$7, a$$12, n$$35);\n        BigNatModule$$$scaleAddInPlace(d$$6, f$$7, BigNatModule$$$one, n$$35);\n        Invariant([d$$6, x$$68, n$$35, p$$21]);\n      } else {\n        finished = f$$7 === 0 ? n$$35 === 0 : false;\n\n        if (!finished) {\n          if (p$$21 === m$$2 + n$$35) {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21]);\n            n$$35 = n$$35 - 1;\n          } else {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21 - 1]);\n            n$$35 = n$$35 - 1;\n            p$$21 = p$$21 - 1;\n          }\n        } else {\n          void null;\n        }\n      }\n    }\n\n    return [BigNatModule$$$normN(d$$6), BigNatModule$$$normN(x$$68)];\n  }\n}\nexport function BigNatModule$$$div(b$$8, a$$13) {\n  return BigNatModule$$$divmod(b$$8, a$$13)[0];\n}\nexport function BigNatModule$$$rem(b$$9, a$$14) {\n  return BigNatModule$$$divmod(b$$9, a$$14)[1];\n}\nexport function BigNatModule$$$bitAnd(a$$15, b$$10) {\n  const rbound$$6 = BigNatModule$$$minInt(a$$15.bound, b$$10.bound) | 0;\n  const r$$19 = BigNatModule$$$createN(rbound$$6);\n\n  for (let i$$44 = 0; i$$44 <= r$$19.bound - 1; i$$44++) {\n    r$$19.digits[i$$44] = a$$15.digits[i$$44] & b$$10.digits[i$$44];\n  }\n\n  return BigNatModule$$$normN(r$$19);\n}\nexport function BigNatModule$$$bitOr(a$$16, b$$11) {\n  const rbound$$7 = BigNatModule$$$maxInt(a$$16.bound, b$$11.bound) | 0;\n  const r$$20 = BigNatModule$$$createN(rbound$$7);\n\n  for (let i$$45 = 0; i$$45 <= a$$16.bound - 1; i$$45++) {\n    r$$20.digits[i$$45] = r$$20.digits[i$$45] | a$$16.digits[i$$45];\n  }\n\n  for (let i$$46 = 0; i$$46 <= b$$11.bound - 1; i$$46++) {\n    r$$20.digits[i$$46] = r$$20.digits[i$$46] | b$$11.digits[i$$46];\n  }\n\n  return BigNatModule$$$normN(r$$20);\n}\nexport function BigNatModule$$$bitXor(a$$17, b$$12) {\n  const rbound$$8 = BigNatModule$$$maxInt(a$$17.bound, b$$12.bound) | 0;\n  const r$$21 = BigNatModule$$$createN(rbound$$8);\n\n  for (let i$$47 = 0; i$$47 <= a$$17.bound - 1; i$$47++) {\n    r$$21.digits[i$$47] = r$$21.digits[i$$47] ^ a$$17.digits[i$$47];\n  }\n\n  for (let i$$48 = 0; i$$48 <= b$$12.bound - 1; i$$48++) {\n    r$$21.digits[i$$48] = r$$21.digits[i$$48] ^ b$$12.digits[i$$48];\n  }\n\n  return BigNatModule$$$normN(r$$21);\n}\nexport function BigNatModule$$$hcf(a$$18, b$$13) {\n  const hcfloop = function hcfloop($a$$19$$206, $b$$14$$207) {\n    hcfloop: while (true) {\n      const a$$19 = $a$$19$$206,\n            b$$14 = $b$$14$$207;\n\n      if (BigNatModule$$$equal(BigNatModule$$$zero, a$$19)) {\n        return b$$14;\n      } else {\n        const patternInput$$8 = BigNatModule$$$divmod(b$$14, a$$19);\n        $a$$19$$206 = patternInput$$8[1];\n        $b$$14$$207 = a$$19;\n        continue hcfloop;\n      }\n\n      break;\n    }\n  };\n\n  if (BigNatModule$$$lt(a$$18, b$$13)) {\n    return hcfloop(a$$18, b$$13);\n  } else {\n    return hcfloop(b$$13, a$$18);\n  }\n}\nexport const BigNatModule$$$two = BigNatModule$$$embed(2);\nexport function BigNatModule$$$powi(x$$69, n$$36) {\n  const power = function power($acc$$2$$210, $x$$70$$211, $n$$37$$212) {\n    power: while (true) {\n      const acc$$2 = $acc$$2$$210,\n            x$$70 = $x$$70$$211,\n            n$$37 = $n$$37$$212;\n\n      if (n$$37 === 0) {\n        return acc$$2;\n      } else if (n$$37 % 2 === 0) {\n        $acc$$2$$210 = acc$$2;\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      } else {\n        $acc$$2$$210 = BigNatModule$$$mul(x$$70, acc$$2);\n        $x$$70$$211 = BigNatModule$$$mul(x$$70, x$$70);\n        $n$$37$$212 = ~~(n$$37 / 2);\n        continue power;\n      }\n\n      break;\n    }\n  };\n\n  return power(BigNatModule$$$one, x$$69, n$$36);\n}\nexport function BigNatModule$$$pow(x$$71, n$$38) {\n  const power$$1 = function power$$1($acc$$3$$215, $x$$72$$216, $n$$39$$217) {\n    power$$1: while (true) {\n      const acc$$3 = $acc$$3$$215,\n            x$$72 = $x$$72$$216,\n            n$$39 = $n$$39$$217;\n\n      if (BigNatModule$$$isZero(n$$39)) {\n        return acc$$3;\n      } else {\n        const patternInput$$9 = BigNatModule$$$divmod(n$$39, BigNatModule$$$two);\n\n        if (BigNatModule$$$isZero(patternInput$$9[1])) {\n          $acc$$3$$215 = acc$$3;\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        } else {\n          $acc$$3$$215 = BigNatModule$$$mul(x$$72, acc$$3);\n          $x$$72$$216 = BigNatModule$$$mul(x$$72, x$$72);\n          $n$$39$$217 = patternInput$$9[0];\n          continue power$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return power$$1(BigNatModule$$$one, x$$71, n$$38);\n}\nexport function BigNatModule$$$toFloat(n$$40) {\n  const basef = BigNatModule$$$baseN;\n\n  const evalFloat = function evalFloat($acc$$4$$219, $k$$10$$220, $i$$49$$221) {\n    evalFloat: while (true) {\n      const acc$$4 = $acc$$4$$219,\n            k$$10 = $k$$10$$220,\n            i$$49 = $i$$49$$221;\n\n      if (i$$49 === n$$40.bound) {\n        return acc$$4;\n      } else {\n        $acc$$4$$219 = acc$$4 + k$$10 * n$$40.digits[i$$49];\n        $k$$10$$220 = k$$10 * basef;\n        $i$$49$$221 = i$$49 + 1;\n        continue evalFloat;\n      }\n\n      break;\n    }\n  };\n\n  return evalFloat(0, 1, 0);\n}\nexport function BigNatModule$$$ofInt32(n$$41) {\n  return BigNatModule$$$embed(n$$41);\n}\nexport function BigNatModule$$$ofInt64(n$$42) {\n  return BigNatModule$$$embed64(n$$42);\n}\nexport function BigNatModule$$$toUInt32(n$$43) {\n  const matchValue = n$$43.bound | 0;\n\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        const value$$9 = n$$43.digits[0] | 0;\n        return value$$9 >>> 0;\n      }\n\n    case 2:\n      {\n        const patternInput$$10 = [n$$43.digits[0], n$$43.digits[1]];\n\n        if (patternInput$$10[1] > BigNatModule$$$baseMask32B) {\n          throw new Error();\n        } else {\n          void null;\n        }\n\n        return ((patternInput$$10[0] & BigNatModule$$$baseMask32A) >>> 0) + ((patternInput$$10[1] & BigNatModule$$$baseMask32B) >>> 0 << BigNatModule$$$baseShift32B >>> 0);\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toUInt64(n$$44) {\n  const matchValue$$1 = n$$44.bound | 0;\n\n  switch (matchValue$$1) {\n    case 0:\n      {\n        return fromBits(0, 0, true);\n      }\n\n    case 1:\n      {\n        const value$$10 = n$$44.digits[0] | 0;\n        return fromInteger(value$$10, true, 2);\n      }\n\n    case 2:\n      {\n        const patternInput$$11 = [n$$44.digits[0], n$$44.digits[1]];\n        return op_Addition(fromInteger(patternInput$$11[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$11[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B));\n      }\n\n    case 3:\n      {\n        const patternInput$$12 = [n$$44.digits[0], n$$44.digits[1], n$$44.digits[2]];\n\n        if (patternInput$$12[2] > BigNatModule$$$baseMask64C) {\n          throw new Error();\n        } else {\n          void null;\n        }\n\n        return op_Addition(op_Addition(fromInteger(patternInput$$12[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$12[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B)), op_LeftShift(fromInteger(patternInput$$12[2] & BigNatModule$$$baseMask64C, true, 2), BigNatModule$$$baseShift64C));\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toString(n$$45) {\n  const degn = BigNatModule$$$degree(n$$45) | 0;\n\n  const route = function route($prior$$227, $k$$11$$228, $ten2k$$229) {\n    route: while (true) {\n      const prior = $prior$$227,\n            k$$11 = $k$$11$$228,\n            ten2k = $ten2k$$229;\n\n      if (BigNatModule$$$degree(ten2k) > degn) {\n        return new List([k$$11, ten2k], prior);\n      } else {\n        $prior$$227 = new List([k$$11, ten2k], prior);\n        $k$$11$$228 = k$$11 + 1;\n        $ten2k$$229 = BigNatModule$$$mul(ten2k, ten2k);\n        continue route;\n      }\n\n      break;\n    }\n  };\n\n  const kten2ks = route(new List(), 0, BigNatModule$$$embed(10));\n\n  const collect = function collect(isLeading, digits, n$$46, _arg1$$1) {\n    if (_arg1$$1.tail != null) {\n      const patternInput$$13 = BigNatModule$$$divmod(n$$46, _arg1$$1.head[1]);\n\n      if (isLeading ? BigNatModule$$$isZero(patternInput$$13[0]) : false) {\n        const digits$$1 = collect(isLeading, digits, patternInput$$13[1], _arg1$$1.tail);\n        return digits$$1;\n      } else {\n        const digits$$2 = collect(false, digits, patternInput$$13[1], _arg1$$1.tail);\n        const digits$$3 = collect(isLeading, digits$$2, patternInput$$13[0], _arg1$$1.tail);\n        return digits$$3;\n      }\n    } else {\n      const n$$47 = BigNatModule$$$eval32(n$$46) | 0;\n\n      if (isLeading ? n$$47 === 0 : false) {\n        return digits;\n      } else {\n        return new List(int32ToString(n$$47), digits);\n      }\n    }\n  };\n\n  const digits$$4 = collect(true, new List(), n$$45, kten2ks);\n\n  if (digits$$4.tail == null) {\n    return \"0\";\n  } else {\n    let arg00;\n    arg00 = ofList(digits$$4, Array);\n    return join(\"\", arg00);\n  }\n}\nexport function BigNatModule$$$ofString(str) {\n  const len = str.length | 0;\n\n  if (isNullOrEmpty(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  } else {\n    void null;\n  }\n\n  const ten = BigNatModule$$$embed(10);\n\n  const build = function build($acc$$5$$235, $i$$50$$236) {\n    build: while (true) {\n      const acc$$5 = $acc$$5$$235,\n            i$$50 = $i$$50$$236;\n\n      if (i$$50 === len) {\n        return acc$$5;\n      } else {\n        const c$$12 = str[i$$50];\n        const d$$7 = c$$12.charCodeAt(0) - \"0\".charCodeAt(0) | 0;\n\n        if (0 <= d$$7 ? d$$7 <= 9 : false) {\n          $acc$$5$$235 = BigNatModule$$$add(BigNatModule$$$mul(ten, acc$$5), BigNatModule$$$embed(d$$7));\n          $i$$50$$236 = i$$50 + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n\n      break;\n    }\n  };\n\n  return build(BigNatModule$$$embed(0), 0);\n}\nexport function BigNatModule$$$isSmall(n$$48) {\n  return n$$48.bound <= 1;\n}\nexport function BigNatModule$$$getSmall(n$$49) {\n  if (0 < n$$49.bound) {\n    return n$$49.digits[0] | 0;\n  } else {\n    return 0;\n  }\n}\nexport function BigNatModule$$$factorial(n$$50) {\n  const productR = function productR(a$$20, b$$15) {\n    if (BigNatModule$$$equal(a$$20, b$$15)) {\n      return a$$20;\n    } else {\n      const m$$3 = BigNatModule$$$div(BigNatModule$$$add(a$$20, b$$15), BigNatModule$$$ofInt32(2));\n      return BigNatModule$$$mul(productR(a$$20, m$$3), productR(BigNatModule$$$add(m$$3, BigNatModule$$$one), b$$15));\n    }\n  };\n\n  return productR(BigNatModule$$$one, n$$50);\n}","import { declare, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { BigNatModule$$$factorial as BigNatModule$0024$0024$0024factorial, BigNatModule$$$ofString as BigNatModule$0024$0024$0024ofString, BigNatModule$$$toFloat as BigNatModule$0024$0024$0024toFloat, BigNatModule$$$toUInt64 as BigNatModule$0024$0024$0024toUInt64, BigNatModule$$$toUInt32 as BigNatModule$0024$0024$0024toUInt32, BigNatModule$$$pow as BigNatModule$0024$0024$0024pow, BigNatModule$$$rem as BigNatModule$0024$0024$0024rem, BigNatModule$$$two as BigNatModule$0024$0024$0024two, BigNatModule$$$lte as BigNatModule$0024$0024$0024lte, BigNatModule$$$hcf as BigNatModule$0024$0024$0024hcf, BigNatModule$$$bitXor as BigNatModule$0024$0024$0024bitXor, BigNatModule$$$bitOr as BigNatModule$0024$0024$0024bitOr, BigNatModule$$$bitAnd as BigNatModule$0024$0024$0024bitAnd, BigNatModule$$$divmod as BigNatModule$0024$0024$0024divmod, BigNatModule$$$mul as BigNatModule$0024$0024$0024mul, BigNatModule$$$isOne as BigNatModule$0024$0024$0024isOne, BigNatModule$$$sub as BigNatModule$0024$0024$0024sub, BigNatModule$$$gte as BigNatModule$0024$0024$0024gte, BigNatModule$$$scale as BigNatModule$0024$0024$0024scale, BigNatModule$$$add as BigNatModule$0024$0024$0024add, BigNatModule$$$one as BigNatModule$0024$0024$0024one, BigNatModule$$$ofInt64 as BigNatModule$0024$0024$0024ofInt64, BigNatModule$$$toString as BigNatModule$0024$0024$0024toString, BigNatModule$$$hash as BigNatModule$0024$0024$0024hash, BigNatModule$$$gt as BigNatModule$0024$0024$0024gt, BigNatModule$$$lt as BigNatModule$0024$0024$0024lt, BigNatModule$$$isZero as BigNatModule$0024$0024$0024isZero, BigNatModule$$$equal as BigNatModule$0024$0024$0024equal, BigNatModule$$$getSmall as BigNatModule$0024$0024$0024getSmall, BigNatModule$$$isSmall as BigNatModule$0024$0024$0024isSmall, BigNatModule$$$ofInt32 as BigNatModule$0024$0024$0024ofInt32 } from \"./n\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, compare, fromBits, op_UnaryNegation, fromInteger } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\nexport const BigInteger = declare(function BigInt_BigInteger(signInt, v) {\n  const $this$$1 = this;\n  void null;\n  $this$$1.signInt = signInt;\n  $this$$1.v = v;\n  void null;\n}, Record);\nexport function BigInteger$reflection() {\n  return class_type(\"BigInt.BigInteger\", undefined, BigInteger);\n}\nexport function BigInteger$$$$002Ector$$Z2BE94A1(signInt, v) {\n  return this instanceof BigInteger ? BigInteger.call(this, signInt, v) : new BigInteger(signInt, v);\n}\n\n(function BigInteger$$$$002Ecctor() {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule$0024$0024$0024ofInt32, Array);\n  BigInteger.one = BigInteger$$$$002Ector$$Z524259A4(1);\n  BigInteger.two = BigInteger$$$$002Ector$$Z524259A4(2);\n  BigInteger.zero = BigInteger$$$$002Ector$$Z524259A4(0);\n  void null;\n})();\n\nexport function BigInteger$$$nat$$Z67CCE57D(n$$1) {\n  if (BigNatModule$0024$0024$0024isSmall(n$$1) ? BigNatModule$0024$0024$0024getSmall(n$$1) < BigInteger.smallLim : false) {\n    return BigInteger.smallPosTab[BigNatModule$0024$0024$0024getSmall(n$$1)];\n  } else {\n    return n$$1;\n  }\n}\nexport function BigInteger$$$create$$Z2BE94A1(s, n$$2) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(s, BigInteger$$$nat$$Z67CCE57D(n$$2));\n}\nexport function BigInteger$$$posn$$Z67CCE57D(n$$3) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(n$$3));\n}\nexport function BigInteger$$$negn$$Z67CCE57D(n$$4) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(n$$4));\n}\nexport function BigInteger$$get_Sign(x) {\n  if (BigInteger$$get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nexport function BigInteger$$get_SignInt(x$$1) {\n  return x$$1.signInt;\n}\nexport function BigInteger$$get_V(x$$2) {\n  return x$$2.v;\n}\nexport function BigInteger$$$op_Equality$$56F059C0(x$$3, y) {\n  const matchValue = [BigInteger$$get_SignInt(x$$3), BigInteger$$get_SignInt(y)];\n  var $target$$12;\n\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 1;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 8;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 3;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 6;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 4;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 5;\n    } else {\n      $target$$12 = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      $target$$12 = 2;\n    } else if (matchValue[1] === 0) {\n      $target$$12 = 7;\n    } else if (matchValue[1] === 1) {\n      $target$$12 = 0;\n    } else {\n      $target$$12 = 9;\n    }\n  } else {\n    $target$$12 = 9;\n  }\n\n  switch ($target$$12) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_Inequality$$56F059C0(x$$4, y$$1) {\n  return !BigInteger$$$op_Equality$$56F059C0(x$$4, y$$1);\n}\nexport function BigInteger$$$op_LessThan$$56F059C0(x$$5, y$$2) {\n  const matchValue$$1 = [BigInteger$$get_SignInt(x$$5), BigInteger$$get_SignInt(y$$2)];\n  var $target$$17;\n\n  if (matchValue$$1[0] === -1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 1;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 8;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 3;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 0) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 6;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 4;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 5;\n    } else {\n      $target$$17 = 9;\n    }\n  } else if (matchValue$$1[0] === 1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$17 = 2;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$17 = 7;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$17 = 0;\n    } else {\n      $target$$17 = 9;\n    }\n  } else {\n    $target$$17 = 9;\n  }\n\n  switch ($target$$17) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(x$$5), BigInteger$$get_V(y$$2));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(y$$2), BigInteger$$get_V(x$$5));\n      }\n\n    case 2:\n      {\n        return false;\n      }\n\n    case 3:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n        }\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n      }\n\n    case 6:\n      {\n        return false;\n      }\n\n    case 7:\n      {\n        return false;\n      }\n\n    case 8:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThan$$56F059C0(x$$6, y$$3) {\n  const matchValue$$2 = [BigInteger$$get_SignInt(x$$6), BigInteger$$get_SignInt(y$$3)];\n  var $target$$20;\n\n  if (matchValue$$2[0] === -1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 1;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 8;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 3;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 0) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 6;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 4;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 5;\n    } else {\n      $target$$20 = 9;\n    }\n  } else if (matchValue$$2[0] === 1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$20 = 2;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$20 = 7;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 9;\n    }\n  } else {\n    $target$$20 = 9;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(x$$6), BigInteger$$get_V(y$$3));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(y$$3), BigInteger$$get_V(x$$6));\n      }\n\n    case 2:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n        }\n      }\n\n    case 3:\n      {\n        return false;\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return false;\n      }\n\n    case 6:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n      }\n\n    case 7:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6));\n      }\n\n    case 8:\n      {\n        return false;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$compare$$56F059C0(n$$5, nn) {\n  if (BigInteger$$$op_LessThan$$56F059C0(n$$5, nn)) {\n    return -1 | 0;\n  } else if (BigInteger$$$op_Equality$$56F059C0(n$$5, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nexport function BigInteger$$$hash$$Z665282C2(z) {\n  if (BigInteger$$get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger$$get_SignInt(z) + BigNatModule$0024$0024$0024hash(BigInteger$$get_V(z)) | 0;\n  }\n}\n\nBigInteger.prototype.toString = function () {\n  const x$$7 = this;\n  const matchValue$$3 = BigInteger$$get_SignInt(x$$7) | 0;\n\n  switch (matchValue$$3) {\n    case -1:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$7)) ? \"0\" : \"-\" + BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    case 0:\n      {\n        return \"0\";\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\");\n      }\n  }\n};\n\nexport function BigInteger$$get_StructuredDisplayString(x$$8) {\n  return String(x$$8);\n}\n\nBigInteger.prototype.Equals = function (obj) {\n  const this$ = this;\n  return obj instanceof BigInteger ? BigInteger$$$op_Equality$$56F059C0(this$, obj) : false;\n};\n\nBigInteger.prototype.GetHashCode = function () {\n  const x$$9 = this;\n  return BigInteger$$$hash$$Z665282C2(x$$9) | 0;\n};\n\nexport function BigInteger$$$$002Ector$$Z524259A4(n$$6) {\n  if (n$$6 >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(n$$6)));\n  } else if (n$$6 === -2147483648) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(fromInteger(n$$6, false, 2)))));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(op_UnaryNegation_Int32(n$$6))));\n  }\n}\nexport function BigInteger$$$$002Ector$$Z524259C1(n$$7) {\n  if (compare(n$$7, fromBits(0, 0, false)) >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(n$$7)));\n  } else if (equals(n$$7, fromBits(0, 2147483648, false))) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024add(BigNatModule$0024$0024$0024ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule$0024$0024$0024one)));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(n$$7))));\n  }\n}\nexport function BigInteger$$$get_One() {\n  return BigInteger.one;\n}\nexport function BigInteger$$$get_Two() {\n  return BigInteger.two;\n}\nexport function BigInteger$$$get_Zero() {\n  return BigInteger.zero;\n}\nexport function BigInteger$$$op_UnaryNegation$$Z665282C2(z$$1) {\n  const matchValue$$4 = BigInteger$$get_SignInt(z$$1) | 0;\n\n  if (matchValue$$4 === 0) {\n    return BigInteger$$$get_Zero();\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(matchValue$$4), BigInteger$$get_V(z$$1));\n  }\n}\nexport function BigInteger$$$Scale$$Z320F31E(k, z$$2) {\n  if (BigInteger$$get_SignInt(z$$2) === 0) {\n    return BigInteger$$$get_Zero();\n  } else if (k < 0) {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(BigInteger$$get_SignInt(z$$2)), BigNatModule$0024$0024$0024scale(op_UnaryNegation_Int32(k), BigInteger$$get_V(z$$2)));\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(z$$2), BigNatModule$0024$0024$0024scale(k, BigInteger$$get_V(z$$2)));\n  }\n}\nexport function BigInteger$$$subnn$$6A57060(nx, ny) {\n  if (BigNatModule$0024$0024$0024gte(nx, ny)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(nx, ny));\n  } else {\n    return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(ny, nx));\n  }\n}\nexport function BigInteger$$$addnn$$6A57060(nx$$1, ny$$1) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024add(nx$$1, ny$$1));\n}\nexport function BigInteger$$get_IsZero(x$$10) {\n  if (BigInteger$$get_SignInt(x$$10) === 0) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$10));\n  }\n}\nexport function BigInteger$$get_IsOne(x$$11) {\n  if (BigInteger$$get_SignInt(x$$11) === 1) {\n    return BigNatModule$0024$0024$0024isOne(BigInteger$$get_V(x$$11));\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$op_Addition$$56F059C0(x$$12, y$$4) {\n  if (BigInteger$$get_IsZero(y$$4)) {\n    return x$$12;\n  } else if (BigInteger$$get_IsZero(x$$12)) {\n    return y$$4;\n  } else {\n    const matchValue$$5 = [BigInteger$$get_SignInt(x$$12), BigInteger$$get_SignInt(y$$4)];\n    var $target$$38;\n\n    if (matchValue$$5[0] === -1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 1;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 3;\n      } else {\n        $target$$38 = 4;\n      }\n    } else if (matchValue$$5[0] === 1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$38 = 2;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$38 = 0;\n      } else {\n        $target$$38 = 4;\n      }\n    } else {\n      $target$$38 = 4;\n    }\n\n    switch ($target$$38) {\n      case 0:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4)));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$4), BigInteger$$get_V(x$$12));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Subtraction$$56F059C0(x$$13, y$$5) {\n  if (BigInteger$$get_IsZero(y$$5)) {\n    return x$$13;\n  } else if (BigInteger$$get_IsZero(x$$13)) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(y$$5);\n  } else {\n    const matchValue$$6 = [BigInteger$$get_SignInt(x$$13), BigInteger$$get_SignInt(y$$5)];\n    var $target$$41;\n\n    if (matchValue$$6[0] === -1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 1;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 3;\n      } else {\n        $target$$41 = 4;\n      }\n    } else if (matchValue$$6[0] === 1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$41 = 2;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$41 = 0;\n      } else {\n        $target$$41 = 4;\n      }\n    } else {\n      $target$$41 = 4;\n    }\n\n    switch ($target$$41) {\n      case 0:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$5), BigInteger$$get_V(x$$13));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5)));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Multiply$$56F059C0(x$$14, y$$6) {\n  if (BigInteger$$get_IsZero(x$$14)) {\n    return x$$14;\n  } else if (BigInteger$$get_IsZero(y$$6)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(x$$14)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(y$$6)) {\n    return x$$14;\n  } else {\n    const m = BigNatModule$0024$0024$0024mul(BigInteger$$get_V(x$$14), BigInteger$$get_V(y$$6));\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(x$$14) * BigInteger$$get_SignInt(y$$6), m);\n  }\n}\nexport function BigInteger$$$DivRem$$56F059C0(x$$15, y$$7) {\n  if (BigInteger$$get_IsZero(y$$7)) {\n    throw new Error();\n  } else {\n    void null;\n  }\n\n  if (BigInteger$$get_IsZero(x$$15)) {\n    return [BigInteger$$$get_Zero(), BigInteger$$$get_Zero()];\n  } else {\n    const patternInput = BigNatModule$0024$0024$0024divmod(BigInteger$$get_V(x$$15), BigInteger$$get_V(y$$7));\n    const matchValue$$7 = [BigInteger$$get_SignInt(x$$15), BigInteger$$get_SignInt(y$$7)];\n    var $target$$46;\n\n    if (matchValue$$7[0] === -1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 1;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 3;\n      } else {\n        $target$$46 = 4;\n      }\n    } else if (matchValue$$7[0] === 1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$46 = 2;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$46 = 0;\n      } else {\n        $target$$46 = 4;\n      }\n    } else {\n      $target$$46 = 4;\n    }\n\n    switch ($target$$46) {\n      case 0:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 1:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 2:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 3:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Division$$56F059C0(x$$16, y$$8) {\n  const tuple = BigInteger$$$DivRem$$56F059C0(x$$16, y$$8);\n  return tuple[0];\n}\nexport function BigInteger$$$op_Modulus$$56F059C0(x$$17, y$$9) {\n  const tuple$$1 = BigInteger$$$DivRem$$56F059C0(x$$17, y$$9);\n  return tuple$$1[1];\n}\nexport function BigInteger$$$op_RightShift$$62E082A2(x$$18, y$$10) {\n  return BigInteger$$$op_Division$$56F059C0(x$$18, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$10));\n}\nexport function BigInteger$$$op_LeftShift$$62E082A2(x$$19, y$$11) {\n  return BigInteger$$$op_Multiply$$56F059C0(x$$19, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$11));\n}\nexport function BigInteger$$$op_BitwiseAnd$$56F059C0(x$$20, y$$12) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitAnd(BigInteger$$get_V(x$$20), BigInteger$$get_V(y$$12)));\n}\nexport function BigInteger$$$op_BitwiseOr$$56F059C0(x$$21, y$$13) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitOr(BigInteger$$get_V(x$$21), BigInteger$$get_V(y$$13)));\n}\nexport function BigInteger$$$op_ExclusiveOr$$56F059C0(x$$22, y$$14) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitXor(BigInteger$$get_V(x$$22), BigInteger$$get_V(y$$14)));\n}\nexport function BigInteger$$$GreatestCommonDivisor$$56F059C0(x$$23, y$$15) {\n  const matchValue$$8 = [BigInteger$$get_SignInt(x$$23), BigInteger$$get_SignInt(y$$15)];\n\n  if (matchValue$$8[0] === 0) {\n    if (matchValue$$8[1] === 0) {\n      return BigInteger$$$get_Zero();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(y$$15));\n    }\n  } else if (matchValue$$8[1] === 0) {\n    return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(x$$23));\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024hcf(BigInteger$$get_V(x$$23), BigInteger$$get_V(y$$15)));\n  }\n}\nexport function BigInteger$$get_IsNegative(x$$24) {\n  if (BigInteger$$get_SignInt(x$$24) === -1) {\n    return !BigInteger$$get_IsZero(x$$24);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$get_IsPositive(x$$25) {\n  if (BigInteger$$get_SignInt(x$$25) === 1) {\n    return !BigInteger$$get_IsZero(x$$25);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$Abs$$Z665282C2(x$$26) {\n  if (BigInteger$$get_SignInt(x$$26) === -1) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(x$$26);\n  } else {\n    return x$$26;\n  }\n}\nexport function BigInteger$$$op_LessThanOrEqual$$56F059C0(x$$27, y$$16) {\n  const matchValue$$9 = [BigInteger$$get_SignInt(x$$27), BigInteger$$get_SignInt(y$$16)];\n  var $target$$68;\n\n  if (matchValue$$9[0] === -1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 1;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 6;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 3;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 0) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 8;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 4;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 7;\n    } else {\n      $target$$68 = 9;\n    }\n  } else if (matchValue$$9[0] === 1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$68 = 2;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$68 = 5;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$68 = 0;\n    } else {\n      $target$$68 = 9;\n    }\n  } else {\n    $target$$68 = 9;\n  }\n\n  switch ($target$$68) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(x$$27), BigInteger$$get_V(y$$16));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(y$$16), BigInteger$$get_V(x$$27));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        return true;\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27));\n      }\n\n    case 6:\n      {\n        return true;\n      }\n\n    case 7:\n      {\n        return true;\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThanOrEqual$$56F059C0(x$$28, y$$17) {\n  const matchValue$$10 = [BigInteger$$get_SignInt(x$$28), BigInteger$$get_SignInt(y$$17)];\n  var $target$$71;\n\n  if (matchValue$$10[0] === -1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 1;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 6;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 3;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 0) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 8;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 4;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 7;\n    } else {\n      $target$$71 = 9;\n    }\n  } else if (matchValue$$10[0] === 1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$71 = 2;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$71 = 5;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$71 = 0;\n    } else {\n      $target$$71 = 9;\n    }\n  } else {\n    $target$$71 = 9;\n  }\n\n  switch ($target$$71) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(x$$28), BigInteger$$get_V(y$$17));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(y$$17), BigInteger$$get_V(x$$28));\n      }\n\n    case 2:\n      {\n        return true;\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return true;\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n      }\n\n    case 8:\n      {\n        return true;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$Pow$$62E082A2(x$$29, y$$18) {\n  if (y$$18 < 0) {\n    throw new Error(\"y\");\n  } else {\n    void null;\n  }\n\n  const matchValue$$11 = [BigInteger$$get_IsZero(x$$29), y$$18];\n\n  if (matchValue$$11[0]) {\n    if (matchValue$$11[1] === 0) {\n      return BigInteger$$$get_One();\n    } else {\n      return BigInteger$$$get_Zero();\n    }\n  } else {\n    const yval = BigInteger$$$$002Ector$$Z524259A4(y$$18);\n    return BigInteger$$$create$$Z2BE94A1(BigNatModule$0024$0024$0024isZero(BigNatModule$0024$0024$0024rem(BigInteger$$get_V(yval), BigNatModule$0024$0024$0024two)) ? 1 : BigInteger$$get_SignInt(x$$29), BigNatModule$0024$0024$0024pow(BigInteger$$get_V(x$$29), BigInteger$$get_V(yval)));\n  }\n}\nexport function BigInteger$$get_ToInt32(x$$30) {\n  if (BigInteger$$get_IsZero(x$$30)) {\n    return 0;\n  } else {\n    const u = BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$30));\n\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger$$get_SignInt(x$$30) * ~~u | 0;\n    } else if (BigInteger$$get_SignInt(x$$30) === -1 ? u === 2147483647 + 1 >>> 0 : false) {\n      return -2147483648 | 0;\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt32(x$$31) {\n  if (BigInteger$$get_IsZero(x$$31)) {\n    return 0;\n  } else {\n    return BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$31));\n  }\n}\nexport function BigInteger$$get_ToInt64(x$$32) {\n  if (BigInteger$$get_IsZero(x$$32)) {\n    return fromBits(0, 0, false);\n  } else {\n    const u$$1 = BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$32));\n\n    if (compare(u$$1, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n      return op_Multiply(fromInteger(BigInteger$$get_SignInt(x$$32), false, 2), fromValue(u$$1, false));\n    } else if (BigInteger$$get_SignInt(x$$32) === -1 ? equals(u$$1, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n      return fromBits(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt64(x$$33) {\n  if (BigInteger$$get_IsZero(x$$33)) {\n    return fromBits(0, 0, true);\n  } else {\n    return BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$33));\n  }\n}\nexport function BigInteger$$get_ToDouble(x$$34) {\n  const matchValue$$12 = BigInteger$$get_SignInt(x$$34) | 0;\n\n  switch (matchValue$$12) {\n    case -1:\n      {\n        return -BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$get_ToSByte(x$$35) {\n  return (BigInteger$$get_ToInt32(x$$35) + 0x80 & 0xFF) - 0x80;\n}\nexport function BigInteger$$get_ToByte(x$$36) {\n  return BigInteger$$get_ToUInt32(x$$36) & 0xFF;\n}\nexport function BigInteger$$get_ToInt16(x$$37) {\n  return (BigInteger$$get_ToInt32(x$$37) + 0x8000 & 0xFFFF) - 0x8000;\n}\nexport function BigInteger$$get_ToUInt16(x$$38) {\n  return BigInteger$$get_ToUInt32(x$$38) & 0xFFFF;\n}\nexport function BigInteger$$get_ToSingle(x$$39) {\n  return BigInteger$$get_ToDouble(x$$39);\n}\nexport function BigInteger$$get_ToDecimal(x$$40) {\n  return new Decimal(BigInteger$$get_ToDouble(x$$40));\n}\nexport function BigInteger$$$Parse$$Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  } else {\n    void null;\n  }\n\n  const text$$1 = text.trim();\n  const len = text$$1.length | 0;\n\n  if (len === 0) {\n    throw new Error();\n  } else {\n    void null;\n  }\n\n  const matchValue$$13 = [text$$1[0], len];\n\n  if (matchValue$$13[0] === \"+\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue$$13[0] === \"-\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1));\n  }\n}\nexport function BigInteger$$get_IsSmall(x$$41) {\n  if (BigInteger$$get_IsZero(x$$41)) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isSmall(BigInteger$$get_V(x$$41));\n  }\n}\nexport function BigInteger$$$Factorial$$Z665282C2(x$$42) {\n  if (BigInteger$$get_IsNegative(x$$42)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  } else {\n    void null;\n  }\n\n  if (BigInteger$$get_IsPositive(x$$42)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024factorial(BigInteger$$get_V(x$$42)));\n  } else {\n    return BigInteger$$$get_One();\n  }\n}\nexport function BigInteger$$$op_UnaryPlus$$Z665282C2(n1) {\n  return n1;\n}\nexport function BigInteger$$$FromInt64$$Z524259C1(x$$43) {\n  return BigInteger$$$$002Ector$$Z524259C1(x$$43);\n}\nexport function BigInteger$$$FromInt32$$Z524259A4(x$$44) {\n  return BigInteger$$$$002Ector$$Z524259A4(x$$44);\n}\n\nBigInteger.prototype.CompareTo = function (obj$$1) {\n  const this$$$1 = this;\n\n  if (obj$$1 instanceof BigInteger) {\n    return BigInteger$$$compare$$56F059C0(this$$$1, obj$$1) | 0;\n  } else {\n    throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n  }\n};","import { BigInteger$$$op_Inequality$$56F059C0 as BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0, BigInteger$$$op_Equality$$56F059C0 as BigInteger$0024$0024$0024op_Equality$0024$002456F059C0, BigInteger$$$op_GreaterThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0, BigInteger$$$op_GreaterThan$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0, BigInteger$$$op_LessThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0, BigInteger$$$op_LessThan$$56F059C0 as BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0, BigInteger$$$op_ExclusiveOr$$56F059C0 as BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0, BigInteger$$$op_BitwiseOr$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0, BigInteger$$$op_BitwiseAnd$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0, BigInteger$$$op_LeftShift$$62E082A2 as BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2, BigInteger$$$op_RightShift$$62E082A2 as BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2, BigInteger$$$op_UnaryPlus$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2, BigInteger$$$op_UnaryNegation$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2, BigInteger$$$op_Modulus$$56F059C0 as BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0, BigInteger$$$op_Division$$56F059C0 as BigInteger$0024$0024$0024op_Division$0024$002456F059C0, BigInteger$$$op_Multiply$$56F059C0 as BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0, BigInteger$$$op_Subtraction$$56F059C0 as BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0, BigInteger$$$op_Addition$$56F059C0 as BigInteger$0024$0024$0024op_Addition$0024$002456F059C0, BigInteger$$get_IsOne as BigInteger$0024$0024get_IsOne, BigInteger$$get_IsZero as BigInteger$0024$0024get_IsZero, BigInteger$$get_Sign as BigInteger$0024$0024get_Sign, BigInteger$$get_ToDecimal as BigInteger$0024$0024get_ToDecimal, BigInteger$$get_ToDouble as BigInteger$0024$0024get_ToDouble, BigInteger$$get_ToSingle as BigInteger$0024$0024get_ToSingle, BigInteger$$get_ToUInt64 as BigInteger$0024$0024get_ToUInt64, BigInteger$$get_ToInt64 as BigInteger$0024$0024get_ToInt64, BigInteger$$get_ToUInt32 as BigInteger$0024$0024get_ToUInt32, BigInteger$$get_ToInt32 as BigInteger$0024$0024get_ToInt32, BigInteger$$get_ToUInt16 as BigInteger$0024$0024get_ToUInt16, BigInteger$$get_ToInt16 as BigInteger$0024$0024get_ToInt16, BigInteger$$get_ToByte as BigInteger$0024$0024get_ToByte, BigInteger$$get_ToSByte as BigInteger$0024$0024get_ToSByte, BigInteger$$$$002Ector$$Z524259A4 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4, BigInteger$$$$002Ector$$Z524259C1 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1, BigInteger$$$get_Two as BigInteger$0024$0024$0024get_Two, BigInteger$$$get_One as BigInteger$0024$0024$0024get_One, BigInteger$$$Abs$$Z665282C2 as BigInteger$0024$0024$0024Abs$0024$0024Z665282C2, BigInteger$$$Pow$$62E082A2 as BigInteger$0024$0024$0024Pow$0024$002462E082A2, BigInteger$$$GreatestCommonDivisor$$56F059C0 as BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0, BigInteger$$$DivRem$$56F059C0 as BigInteger$0024$0024$0024DivRem$0024$002456F059C0, BigInteger$$$Parse$$Z721C83C5 as BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5, BigInteger$$$get_Zero as BigInteger$0024$0024$0024get_Zero, BigInteger } from \"./BigInt/z\";\nimport { fromInteger } from \"./Long.js\";\nimport { min, comparePrimitives, equals as equals$$1, structuralHash } from \"./Util.js\";\nimport { delay, unfold, rangeNumber } from \"./Seq.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { List } from \"./Types.js\";\nimport { fill, reverse, ofList } from \"./Array.js\";\nexport function isBigInt(x) {\n  return x instanceof BigInteger;\n}\nexport function tryParse(str) {\n  try {\n    const res = BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(str);\n    return [true, res];\n  } catch (matchValue) {\n    return [false, BigInteger$0024$0024$0024get_Zero()];\n  }\n}\nexport function parse(arg00) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(arg00);\n}\nexport function divRem(arg00$$1, arg01) {\n  return BigInteger$0024$0024$0024DivRem$0024$002456F059C0(arg00$$1, arg01);\n}\nexport function greatestCommonDivisor(arg00$$2, arg01$$1) {\n  return BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0(arg00$$2, arg01$$1);\n}\nexport function pow(arg00$$3, arg01$$2) {\n  return BigInteger$0024$0024$0024Pow$0024$002462E082A2(arg00$$3, arg01$$2);\n}\nexport function abs(arg00$$4) {\n  return BigInteger$0024$0024$0024Abs$0024$0024Z665282C2(arg00$$4);\n}\nexport const zero = BigInteger$0024$0024$0024get_Zero();\nexport const one = BigInteger$0024$0024$0024get_One();\nexport const two = BigInteger$0024$0024$0024get_Two();\nexport function fromString(s) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(s);\n}\nexport function fromZero() {\n  return BigInteger$0024$0024$0024get_Zero();\n}\nexport function fromOne() {\n  return BigInteger$0024$0024$0024get_One();\n}\nexport function fromInt64(i) {\n  return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(i);\n}\nexport function fromInt32(i$$1) {\n  var value;\n\n  if (i$$1 > 2147483647) {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1((value = i$$1, (fromInteger(value, false, 6))));\n  } else {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(i$$1);\n  }\n}\nexport function toSByte(x$$1) {\n  return BigInteger$0024$0024get_ToSByte(x$$1);\n}\nexport function toByte(x$$2) {\n  return BigInteger$0024$0024get_ToByte(x$$2);\n}\nexport function toInt16(x$$3) {\n  return BigInteger$0024$0024get_ToInt16(x$$3);\n}\nexport function toUInt16(x$$4) {\n  return BigInteger$0024$0024get_ToUInt16(x$$4);\n}\nexport function toInt32(x$$5) {\n  return BigInteger$0024$0024get_ToInt32(x$$5);\n}\nexport function toUInt32(x$$6) {\n  return BigInteger$0024$0024get_ToUInt32(x$$6);\n}\nexport function toInt64(x$$7) {\n  return BigInteger$0024$0024get_ToInt64(x$$7);\n}\nexport function toUInt64(x$$8) {\n  return BigInteger$0024$0024get_ToUInt64(x$$8);\n}\nexport function toSingle(x$$9) {\n  return BigInteger$0024$0024get_ToSingle(x$$9);\n}\nexport function toDouble(x$$10) {\n  return BigInteger$0024$0024get_ToDouble(x$$10);\n}\nexport function toDecimal(x$$11) {\n  return BigInteger$0024$0024get_ToDecimal(x$$11);\n}\nexport function sign(x$$12) {\n  return BigInteger$0024$0024get_Sign(x$$12);\n}\nexport function isZero(x$$13) {\n  return BigInteger$0024$0024get_IsZero(x$$13);\n}\nexport function isOne(x$$14) {\n  return BigInteger$0024$0024get_IsOne(x$$14);\n}\nexport function hash(x$$15) {\n  return structuralHash(x$$15);\n}\nexport function compare(x$$16, y) {\n  return x$$16.CompareTo(y);\n}\nexport function equals(x$$17, y$$1) {\n  return equals$$1(x$$17, y$$1);\n}\nexport function toString(x$$18) {\n  return String(x$$18);\n}\nexport const get_Zero = BigInteger$0024$0024$0024get_Zero();\nexport const get_One = BigInteger$0024$0024$0024get_One();\nexport function op_Addition(arg00$$5, arg01$$3) {\n  return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(arg00$$5, arg01$$3);\n}\nexport function op_Subtraction(arg00$$6, arg01$$4) {\n  return BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0(arg00$$6, arg01$$4);\n}\nexport function op_Multiply(arg00$$7, arg01$$5) {\n  return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(arg00$$7, arg01$$5);\n}\nexport function op_Division(arg00$$8, arg01$$6) {\n  return BigInteger$0024$0024$0024op_Division$0024$002456F059C0(arg00$$8, arg01$$6);\n}\nexport function op_Modulus(arg00$$9, arg01$$7) {\n  return BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0(arg00$$9, arg01$$7);\n}\nexport function op_UnaryNegation(arg00$$10) {\n  return BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2(arg00$$10);\n}\nexport function op_UnaryPlus(arg00$$11) {\n  return BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2(arg00$$11);\n}\nexport function op_RightShift(arg00$$12, arg01$$8) {\n  return BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(arg00$$12, arg01$$8);\n}\nexport function op_LeftShift(arg00$$13, arg01$$9) {\n  return BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(arg00$$13, arg01$$9);\n}\nexport function op_BitwiseAnd(arg00$$14, arg01$$10) {\n  return BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(arg00$$14, arg01$$10);\n}\nexport function op_BitwiseOr(arg00$$15, arg01$$11) {\n  return BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0(arg00$$15, arg01$$11);\n}\nexport function op_ExclusiveOr(arg00$$16, arg01$$12) {\n  return BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0(arg00$$16, arg01$$12);\n}\nexport function op_LessThan(arg00$$17, arg01$$13) {\n  return BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0(arg00$$17, arg01$$13);\n}\nexport function op_LessThanOrEqual(arg00$$18, arg01$$14) {\n  return BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0(arg00$$18, arg01$$14);\n}\nexport function op_GreaterThan(arg00$$19, arg01$$15) {\n  return BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0(arg00$$19, arg01$$15);\n}\nexport function op_GreaterThanOrEqual(arg00$$20, arg01$$16) {\n  return BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0(arg00$$20, arg01$$16);\n}\nexport function op_Equality(arg00$$21, arg01$$17) {\n  return BigInteger$0024$0024$0024op_Equality$0024$002456F059C0(arg00$$21, arg01$$17);\n}\nexport function op_Inequality(arg00$$22, arg01$$18) {\n  return BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0(arg00$$22, arg01$$18);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n  if (lowBitFound) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (currByte === 0) {\n    return [0, false];\n  } else {\n    let firstBitIndex;\n    const list = ofSeq(rangeNumber(0, 1, 7));\n    firstBitIndex = find(function predicate(i$$2) {\n      return (currByte & 1 << i$$2) > 0;\n    }, list);\n    return [(currByte ^ 254 << firstBitIndex) & 255, true];\n  }\n}\n\nexport function toByteArray(value$$1) {\n  if (equals$$1(value$$1, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    const isPositive = value$$1.CompareTo(zero) > 0;\n    const value$$2 = isPositive ? value$$1 : BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$1);\n    let mask32;\n    let i$$3;\n    i$$3 = fromInteger(4294967295, false, 6);\n    mask32 = fromInt64(i$$3);\n\n    const loop = function loop($accumBytes$$74, $consumeValue$$75, $lowBitFound$$1$$76) {\n      var value$$9, value$$10, value$$11;\n\n      loop: while (true) {\n        const accumBytes = $accumBytes$$74,\n              consumeValue = $consumeValue$$75,\n              lowBitFound$$1 = $lowBitFound$$1$$76;\n\n        if (consumeValue.CompareTo(zero) <= 0) {\n          let accumBytes$$1;\n\n          if (isPositive) {\n            accumBytes$$1 = skipWhile(function predicate$$1(b) {\n              return b === 0;\n            }, accumBytes);\n          } else {\n            accumBytes$$1 = skipWhile(function predicate$$2(b$$1) {\n              return b$$1 === 255;\n            }, accumBytes);\n          }\n\n          const isHighBitOne = (head(accumBytes$$1) & 128) !== 0;\n          const accumBytes$$2 = (isPositive ? isHighBitOne : false) ? new List(0, accumBytes$$1) : (!isPositive ? !isHighBitOne : false) ? new List(255, accumBytes$$1) : accumBytes$$1;\n          let array;\n          array = ofList(accumBytes$$2, Uint8Array);\n          return reverse(array, Uint8Array);\n        } else {\n          let currValue;\n          const x$$19 = BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(consumeValue, mask32);\n          currValue = toUInt32(x$$19);\n\n          if (isPositive) {\n            let b0;\n            b0 = currValue & 0xFF;\n            let b1;\n            const value$$5 = currValue >>> 8;\n            b1 = value$$5 & 0xFF;\n            let b2;\n            const value$$6 = currValue >>> 16;\n            b2 = value$$6 & 0xFF;\n            let b3;\n            const value$$7 = currValue >>> 24;\n            b3 = value$$7 & 0xFF;\n            $accumBytes$$74 = new List(b3, new List(b2, new List(b1, new List(b0, accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = false;\n            continue loop;\n          } else {\n            const patternInput = flipTwosComplement((currValue & 0xFF), lowBitFound$$1);\n            const patternInput$$1 = flipTwosComplement((value$$9 = currValue >>> 8, (value$$9 & 0xFF)), patternInput[1]);\n            const patternInput$$2 = flipTwosComplement((value$$10 = currValue >>> 16, (value$$10 & 0xFF)), patternInput$$1[1]);\n            const patternInput$$3 = flipTwosComplement((value$$11 = currValue >>> 24, (value$$11 & 0xFF)), patternInput$$2[1]);\n            $accumBytes$$74 = new List(patternInput$$3[0], new List(patternInput$$2[0], new List(patternInput$$1[0], new List(patternInput[0], accumBytes))));\n            $consumeValue$$75 = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(consumeValue, 32);\n            $lowBitFound$$1$$76 = patternInput$$3[1];\n            continue loop;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop(new List(), value$$2, false);\n  }\n}\nexport function fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  } else {\n    void null;\n  }\n\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    const isPositive$$1 = (bytes[bytes.length - 1] & 128) === 0;\n    const buffer = fill(new Uint8Array(4), 0, 4, 0);\n\n    const loop$$1 = function loop$$1($accumUInt32$$80, $currIndex$$81, $bytesRemaining$$82, $lowBitFound$$6$$83) {\n      loop$$1: while (true) {\n        const accumUInt32 = $accumUInt32$$80,\n              currIndex = $currIndex$$81,\n              bytesRemaining = $bytesRemaining$$82,\n              lowBitFound$$6 = $lowBitFound$$6$$83;\n\n        if (bytesRemaining === 0) {\n          let value$$14;\n          value$$14 = fold(function folder(acc, value$$12) {\n            var i$$4;\n            return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(acc, 32), (i$$4 = (fromInteger(value$$12, false, 6)), (fromInt64(i$$4))));\n          }, zero, accumUInt32);\n\n          if (isPositive$$1) {\n            return value$$14;\n          } else {\n            return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$14);\n          }\n        } else {\n          const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n\n          for (let i$$5 = 0; i$$5 <= bytesToProcess - 1; i$$5++) {\n            buffer[i$$5] = bytes[currIndex + i$$5];\n          }\n\n          if (isPositive$$1) {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            const value$$15 = (((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$15, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = false;\n            continue loop$$1;\n          } else {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            const patternInput$$4 = flipTwosComplement(buffer[0], lowBitFound$$6);\n            const patternInput$$5 = flipTwosComplement(buffer[1], patternInput$$4[1]);\n            const patternInput$$6 = flipTwosComplement(buffer[2], patternInput$$5[1]);\n            const patternInput$$7 = flipTwosComplement(buffer[3], patternInput$$6[1]);\n            const value$$16 = (((patternInput$$4[0] | patternInput$$5[0] << 8 >>> 0) >>> 0 | patternInput$$6[0] << 16 >>> 0) >>> 0 | patternInput$$7[0] << 24 >>> 0) >>> 0;\n            $accumUInt32$$80 = new List(value$$16, accumUInt32);\n            $currIndex$$81 = currIndex + bytesToProcess;\n            $bytesRemaining$$82 = bytesRemaining - bytesToProcess;\n            $lowBitFound$$6$$83 = patternInput$$7[1];\n            continue loop$$1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop$$1(new List(), 0, bytes.length, false);\n  }\n}\nexport function makeRangeStepFunction(step, last) {\n  const stepComparedWithZero = step.CompareTo(zero) | 0;\n\n  if (stepComparedWithZero === 0) {\n    throw new Error(\"The step of a range cannot be zero\");\n  } else {\n    void null;\n  }\n\n  const stepGreaterThanZero = stepComparedWithZero > 0;\n  return function (x$$20) {\n    const comparedWithLast = x$$20.CompareTo(last) | 0;\n    return ((stepGreaterThanZero ? comparedWithLast <= 0 : false) ? true : !stepGreaterThanZero ? comparedWithLast >= 0 : false) ? [x$$20, BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(x$$20, step)] : undefined;\n  };\n}\nexport function range(first, step$$1, last$$1) {\n  const stepFn = makeRangeStepFunction(step$$1, last$$1);\n  return delay(function () {\n    return unfold(stepFn, first);\n  });\n}","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, padWithZeros } from \"./Util\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, _refValue) {\n    try {\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n//# sourceMappingURL=DateOffset.js.map","\nnamespace Thoth.Json\nopen System.Text.RegularExpressions\n\n[<RequireQualifiedAccess>]\nmodule Decode =\n\n    open System.Globalization\n    open Fable.Core\n    open Fable.Core.JsInterop\n\n    module internal Helpers =\n        [<Emit(\"typeof $0\")>]\n        let jsTypeof (_ : JsonValue) : string = jsNative\n\n        [<Emit(\"$0 instanceof SyntaxError\")>]\n        let isSyntaxError (_ : JsonValue) : bool = jsNative\n\n        let inline getField (fieldName: string) (o: JsonValue) = o?(fieldName)\n        let inline isString (o: JsonValue) : bool = o :? string\n\n        let inline isBoolean (o: JsonValue) : bool = o :? bool\n\n        let inline isNumber (o: JsonValue) : bool = jsTypeof o = \"number\"\n\n        let inline isArray (o: JsonValue) : bool = JS.Constructors.Array.isArray(o)\n\n        [<Emit(\"$0 === null ? false : (Object.getPrototypeOf($0 || false) === Object.prototype)\")>]\n        let isObject (_ : JsonValue) : bool = jsNative\n\n        let inline isNaN (o: JsonValue) : bool = JS.Constructors.Number.isNaN(!!o)\n\n        let inline isNullValue (o: JsonValue): bool = isNull o\n\n        /// is the value an integer? This returns false for 1.1, NaN, Infinite, ...\n        [<Emit(\"isFinite($0) && Math.floor($0) === $0\")>]\n        let isIntegralValue (_: JsonValue) : bool = jsNative\n\n        [<Emit(\"$1 <= $0 && $0 < $2\")>]\n        let isBetweenInclusive(_v: JsonValue, _min: obj, _max: obj) = jsNative\n\n        [<Emit(\"isFinite($0) && !($0 % 1)\")>]\n        let isIntFinite (_: JsonValue) : bool = jsNative\n\n        let isUndefined (o: JsonValue): bool = jsTypeof o = \"undefined\"\n\n        [<Emit(\"JSON.stringify($0, null, 4) + ''\")>]\n        let anyToString (_: JsonValue) : string = jsNative\n\n        let inline isFunction (o: JsonValue) : bool = jsTypeof o = \"function\"\n\n        let inline objectKeys (o: JsonValue) : string seq = upcast JS.Constructors.Object.keys(o)\n        let inline asBool (o: JsonValue): bool = unbox o\n        let inline asInt (o: JsonValue): int = unbox o\n        let inline asFloat (o: JsonValue): float = unbox o\n        let inline asFloat32 (o: JsonValue): float32 = unbox o\n        let inline asString (o: JsonValue): string = unbox o\n        let inline asArray (o: JsonValue): JsonValue[] = unbox o\n\n    let private genericMsg msg value newLine =\n        try\n            \"Expecting \"\n                + msg\n                + \" but instead got:\"\n                + (if newLine then \"\\n\" else \" \")\n                + (Helpers.anyToString value)\n        with\n            | _ ->\n                \"Expecting \"\n                + msg\n                + \" but decoder failed. Couldn't report given value due to circular structure.\"\n                + (if newLine then \"\\n\" else \" \")\n\n    let private errorToString (path : string, error) =\n        let reason =\n            match error with\n            | BadPrimitive (msg, value) ->\n                genericMsg msg value false\n            | BadType (msg, value) ->\n                genericMsg msg value true\n            | BadPrimitiveExtra (msg, value, reason) ->\n                genericMsg msg value false + \"\\nReason: \" + reason\n            | BadField (msg, value) ->\n                genericMsg msg value true\n            | BadPath (msg, value, fieldName) ->\n                genericMsg msg value true + (\"\\nNode `\" + fieldName + \"` is unkown.\")\n            | TooSmallArray (msg, value) ->\n                \"Expecting \" + msg + \".\\n\" + (Helpers.anyToString value)\n            | BadOneOf messages ->\n                \"The following errors were found:\\n\\n\" + String.concat \"\\n\\n\" messages\n            | FailMessage msg ->\n                \"The following `failure` occurred with the decoder: \" + msg\n\n        match error with\n        | BadOneOf _ ->\n            // Don't need to show the path here because each error case will show it's own path\n            reason\n        | _ ->\n            \"Error at: `\" + path + \"`\\n\" + reason\n\n    ///////////////\n    // Runners ///\n    /////////////\n\n    let fromValue (path : string) (decoder : Decoder<'T>) =\n        fun value ->\n            match decoder path value with\n            | Ok success ->\n                Ok success\n            | Error error ->\n                Error (errorToString error)\n\n    let fromString (decoder : Decoder<'T>) =\n        fun value ->\n            try\n               let json = JS.JSON.parse value\n               fromValue \"$\" decoder json\n            with\n                | ex when Helpers.isSyntaxError ex ->\n                    Error(\"Given an invalid JSON: \" + ex.Message)\n\n    let unsafeFromString (decoder : Decoder<'T>) =\n        fun value ->\n            match fromString decoder value with\n            | Ok x -> x\n            | Error msg -> failwith msg\n\n    [<System.Obsolete(\"Please use fromValue instead\")>]\n    let decodeValue (path : string) (decoder : Decoder<'T>) = fromValue path decoder\n\n    [<System.Obsolete(\"Please use fromString instead\")>]\n    let decodeString (decoder : Decoder<'T>) = fromString decoder\n\n    //////////////////\n    // Primitives ///\n    ////////////////\n\n    let string : Decoder<string> =\n        fun path value ->\n            if Helpers.isString value then\n                Ok(Helpers.asString value)\n            else\n                (path, BadPrimitive(\"a string\", value)) |> Error\n\n    let guid : Decoder<System.Guid> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.Guid.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a guid\", value)) |> Error\n            else (path, BadPrimitive(\"a guid\", value)) |> Error\n\n    let unit : Decoder<unit> =\n        fun path value ->\n            if Helpers.isNullValue value then\n                Ok ()\n            else\n                (path, BadPrimitive(\"null\", value)) |> Error\n\n    let inline private integral\n                    (name : string)\n                    (tryParse : (string -> bool * 'T))\n                    (min : 'T)\n                    (max : 'T)\n                    (conv : float -> 'T) : Decoder< 'T > =\n\n        fun path value ->\n            if Helpers.isNumber value then\n                let value : float = unbox value\n                if Helpers.isIntegralValue value then\n                    if (float min) <= value && value <= (float max) then\n                        Ok(conv value)\n                    else\n                        (path, BadPrimitiveExtra(name, value, \"Value was either too large or too small for \" + name)) |> Error\n                else\n                    (path, BadPrimitiveExtra(name, value, \"Value is not an integral value\")) |> Error\n            elif Helpers.isString value then\n                match tryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(name, value)) |> Error\n            else\n                (path, BadPrimitive(name, value)) |> Error\n\n    let sbyte : Decoder<sbyte> =\n        integral\n            \"a sbyte\"\n            System.SByte.TryParse\n            System.SByte.MinValue\n            System.SByte.MaxValue\n            sbyte\n\n    /// Alias to Decode.uint8\n    let byte : Decoder<byte> =\n        integral\n            \"a byte\"\n            System.Byte.TryParse\n            System.Byte.MinValue\n            System.Byte.MaxValue\n            byte\n\n    let int16 : Decoder<int16> =\n        integral\n            \"an int16\"\n            System.Int16.TryParse\n            System.Int16.MinValue\n            System.Int16.MaxValue\n            int16\n\n    let uint16 : Decoder<uint16> =\n        integral\n            \"an uint16\"\n            System.UInt16.TryParse\n            System.UInt16.MinValue\n            System.UInt16.MaxValue\n            uint16\n\n    let int : Decoder<int> =\n        integral\n            \"an int\"\n            System.Int32.TryParse\n            System.Int32.MinValue\n            System.Int32.MaxValue\n            int\n\n    let uint32 : Decoder<uint32> =\n        integral\n            \"an uint32\"\n            System.UInt32.TryParse\n            System.UInt32.MinValue\n            System.UInt32.MaxValue\n            uint32\n\n    let int64 : Decoder<int64> =\n        integral\n            \"an int64\"\n            System.Int64.TryParse\n            System.Int64.MinValue\n            System.Int64.MaxValue\n            int64\n\n    let uint64 : Decoder<uint64> =\n        integral\n            \"an uint64\"\n            System.UInt64.TryParse\n            System.UInt64.MinValue\n            System.UInt64.MaxValue\n            uint64\n\n    let bigint : Decoder<bigint> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asInt value |> bigint |> Ok\n            elif Helpers.isString value then\n                // TODO: BigInt.TryParse has been added in Fable 2.1.4\n                // Don't use it for now to support lower Fable versions\n                try\n                    bigint.Parse (Helpers.asString value) |> Ok\n                with _ ->\n                    (path, BadPrimitive(\"a bigint\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a bigint\", value)) |> Error\n\n    let bool : Decoder<bool> =\n        fun path value ->\n            if Helpers.isBoolean value then\n                Ok(Helpers.asBool value)\n            else\n                (path, BadPrimitive(\"a boolean\", value)) |> Error\n\n    let float : Decoder<float> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Ok(Helpers.asFloat value)\n            else\n                (path, BadPrimitive(\"a float\", value)) |> Error\n\n    let float32 : Decoder<float32> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Ok(Helpers.asFloat32 value)\n            else\n                (path, BadPrimitive(\"a float32\", value)) |> Error\n\n    let decimal : Decoder<decimal> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asFloat value |> decimal |> Ok\n            elif Helpers.isString value then\n                match System.Decimal.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a decimal\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a decimal\", value)) |> Error\n\n    let datetime : Decoder<System.DateTime> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.DateTime.TryParse (Helpers.asString value) with\n                | true, x -> x.ToUniversalTime() |> Ok\n                | _ -> (path, BadPrimitive(\"a datetime\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a datetime\", value)) |> Error\n\n    let datetimeOffset : Decoder<System.DateTimeOffset> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.DateTimeOffset.TryParse(Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a datetimeoffset\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a datetime\", value)) |> Error\n\n    let timespan : Decoder<System.TimeSpan> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.TimeSpan.TryParse(Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a timespan\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a timespan\", value)) |> Error\n\n    /////////////////////////\n    // Object primitives ///\n    ///////////////////////\n\n    let private decodeMaybeNull path (decoder : Decoder<'T>) value =\n        // The decoder may be an option decoder so give it an opportunity to check null values\n        match decoder path value with\n        | Ok v -> Ok(Some v)\n        | Error _ when Helpers.isNullValue value -> Ok None\n        | Error er -> Error er\n\n    let optional (fieldName : string) (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun path value ->\n            if Helpers.isObject value then\n                let fieldValue = Helpers.getField fieldName value\n                if Helpers.isUndefined fieldValue then Ok None\n                else decodeMaybeNull (path + \".\" + fieldName) decoder fieldValue\n            else\n                Error(path, BadType(\"an object\", value))\n\n    let private badPathError fieldNames currentPath value =\n        let currentPath = defaultArg currentPath (\"$\"::fieldNames |> String.concat \".\")\n        let msg = \"an object with path `\" + (String.concat \".\" fieldNames) + \"`\"\n        Error(currentPath, BadPath (msg, value, List.tryLast fieldNames |> Option.defaultValue \"\"))\n\n    let optionalAt (fieldNames : string list) (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun firstPath firstValue ->\n            ((firstPath, firstValue, None), fieldNames)\n            ||> List.fold (fun (curPath, curValue, res) field ->\n                match res with\n                | Some _ -> curPath, curValue, res\n                | None ->\n                    if Helpers.isNullValue curValue then\n                        let res = badPathError fieldNames (Some curPath) firstValue\n                        curPath, curValue, Some res\n                    elif Helpers.isObject curValue then\n                        let curValue = Helpers.getField field curValue\n                        curPath + \".\" + field, curValue, None\n                    else\n                        let res = Error(curPath, BadType(\"an object\", curValue))\n                        curPath, curValue, Some res)\n            |> function\n                | _, _, Some res -> res\n                | lastPath, lastValue, None ->\n                    if Helpers.isUndefined lastValue then Ok None\n                    else decodeMaybeNull lastPath decoder lastValue\n\n    let field (fieldName: string) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun path value ->\n            if Helpers.isObject value then\n                let fieldValue = Helpers.getField fieldName value\n                if Helpers.isUndefined fieldValue then\n                    Error(path, BadField (\"an object with a field named `\" + fieldName + \"`\", value))\n                else\n                    decoder (path + \".\" + fieldName) fieldValue\n            else\n                Error(path, BadType(\"an object\", value))\n\n    let at (fieldNames: string list) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun firstPath firstValue ->\n            ((firstPath, firstValue, None), fieldNames)\n            ||> List.fold (fun (curPath, curValue, res) field ->\n                match res with\n                | Some _ -> curPath, curValue, res\n                | None ->\n                    if Helpers.isNullValue curValue then\n                        let res = badPathError fieldNames (Some curPath) firstValue\n                        curPath, curValue, Some res\n                    elif Helpers.isObject curValue then\n                        let curValue = Helpers.getField field curValue\n                        if Helpers.isUndefined curValue then\n                            let res = badPathError fieldNames None firstValue\n                            curPath, curValue, Some res\n                        else\n                            curPath + \".\" + field, curValue, None\n                    else\n                        let res = Error(curPath, BadType(\"an object\", curValue))\n                        curPath, curValue, Some res)\n            |> function\n                | _, _, Some res -> res\n                | lastPath, lastValue, None ->\n                    decoder lastPath lastValue\n\n    let index (requestedIndex: int) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun path value ->\n            let currentPath = path + \".[\" + (Operators.string requestedIndex) + \"]\"\n            if Helpers.isArray value then\n                let vArray = Helpers.asArray value\n                if requestedIndex < vArray.Length then\n                    decoder currentPath (vArray.[requestedIndex])\n                else\n                    let msg =\n                        \"a longer array. Need index `\"\n                            + (requestedIndex.ToString())\n                            + \"` but there are only `\"\n                            + (vArray.Length.ToString())\n                            + \"` entries\"\n\n                    (currentPath, TooSmallArray(msg, value))\n                    |> Error\n            else\n                (currentPath, BadPrimitive(\"an array\", value))\n                |> Error\n\n    let option (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun path value ->\n            if Helpers.isNullValue value then Ok None\n            else decoder path value |> Result.map Some\n\n    //////////////////////\n    // Data structure ///\n    ////////////////////\n\n    let list (decoder : Decoder<'value>) : Decoder<'value list> =\n        fun path value ->\n            if Helpers.isArray value then\n                let mutable i = -1\n                let tokens = Helpers.asArray value\n                (Ok [], tokens) ||> Array.fold (fun acc value ->\n                    i <- i + 1\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match decoder (path + \".[\" + (i.ToString()) + \"]\") value with\n                        | Error er -> Error er\n                        | Ok value -> Ok (value::acc))\n                |> Result.map List.rev\n            else\n                (path, BadPrimitive (\"a list\", value))\n                |> Error\n\n    let seq (decoder : Decoder<'value>) : Decoder<'value seq> =\n        fun path value ->\n            if Helpers.isArray value then\n                let mutable i = -1\n                let tokens = Helpers.asArray value\n                (Ok (seq []), tokens) ||> Array.fold (fun acc value ->\n                    i <- i + 1\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match decoder (path + \".[\" + (i.ToString()) + \"]\") value with\n                        | Error er -> Error er\n                        | Ok value -> Ok (Seq.append [value] acc))\n                |> Result.map Seq.rev\n            else\n                (path, BadPrimitive (\"a seq\", value))\n                |> Error\n\n    let array (decoder : Decoder<'value>) : Decoder<'value array> =\n        fun path value ->\n            if Helpers.isArray value then\n                let mutable i = -1\n                let tokens = Helpers.asArray value\n                let arr = Array.zeroCreate tokens.Length\n                (Ok arr, tokens) ||> Array.fold (fun acc value ->\n                    i <- i + 1\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match decoder (path + \".[\" + (i.ToString()) + \"]\") value with\n                        | Error er -> Error er\n                        | Ok value -> acc.[i] <- value; Ok acc)\n            else\n                (path, BadPrimitive (\"an array\", value))\n                |> Error\n\n    let keyValuePairs (decoder : Decoder<'value>) : Decoder<(string * 'value) list> =\n        fun path value ->\n            if Helpers.isObject value then\n                (Ok [], Helpers.objectKeys value) ||> Seq.fold (fun acc prop ->\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match Helpers.getField prop value |> decoder path with\n                        | Error er -> Error er\n                        | Ok value -> (prop, value)::acc |> Ok)\n                |> Result.map List.rev\n            else\n                (path, BadPrimitive (\"an object\", value))\n                |> Error\n\n    //////////////////////////////\n    // Inconsistent Structure ///\n    ////////////////////////////\n\n    let oneOf (decoders : Decoder<'value> list) : Decoder<'value> =\n        fun path value ->\n            let rec runner (decoders : Decoder<'value> list) (errors : string list) =\n                match decoders with\n                | head::tail ->\n                    match fromValue path head value with\n                    | Ok v ->\n                        Ok v\n                    | Error error -> runner tail (errors @ [error])\n                | [] -> (path, BadOneOf errors) |> Error\n\n            runner decoders []\n\n    //////////////////////\n    // Fancy decoding ///\n    ////////////////////\n\n    let nil (output : 'a) : Decoder<'a> =\n        fun path value ->\n            if Helpers.isNullValue value then\n                Ok output\n            else\n                (path, BadPrimitive(\"null\", value)) |> Error\n\n    let value _ v = Ok v\n\n    let succeed (output : 'a) : Decoder<'a> =\n        fun _ _ ->\n            Ok output\n\n    let fail (msg: string) : Decoder<'a> =\n        fun path _ ->\n            (path, FailMessage msg) |> Error\n\n    let andThen (cb: 'a -> Decoder<'b>) (decoder : Decoder<'a>) : Decoder<'b> =\n        fun path value ->\n            match decoder path value with\n            | Error error -> Error error\n            | Ok result -> cb result path value\n\n    /////////////////////\n    // Map functions ///\n    ///////////////////\n\n    let map\n        (ctor : 'a -> 'value)\n        (d1 : Decoder<'a>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value with\n            | Ok v1 -> Ok (ctor v1)\n            | Error er -> Error er\n\n    let map2\n        (ctor : 'a -> 'b -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value with\n            | Ok v1, Ok v2 -> Ok (ctor v1 v2)\n            | Error er,_ -> Error er\n            | _,Error er -> Error er\n\n    let map3\n        (ctor : 'a -> 'b -> 'c -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value with\n            | Ok v1, Ok v2, Ok v3 -> Ok (ctor v1 v2 v3)\n            | Error er,_,_ -> Error er\n            | _,Error er,_ -> Error er\n            | _,_,Error er -> Error er\n\n    let map4\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4 -> Ok (ctor v1 v2 v3 v4)\n            | Error er,_,_,_ -> Error er\n            | _,Error er,_,_ -> Error er\n            | _,_,Error er,_ -> Error er\n            | _,_,_,Error er -> Error er\n\n    let map5\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5 -> Ok (ctor v1 v2 v3 v4 v5)\n            | Error er,_,_,_,_ -> Error er\n            | _,Error er,_,_,_ -> Error er\n            | _,_,Error er,_,_ -> Error er\n            | _,_,_,Error er,_ -> Error er\n            | _,_,_,_,Error er -> Error er\n\n    let map6\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6 -> Ok (ctor v1 v2 v3 v4 v5 v6)\n            | Error er,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_ -> Error er\n            | _,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,Error er -> Error er\n\n    let map7\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>)\n        (d7 : Decoder<'g>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value, d7 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6, Ok v7 -> Ok (ctor v1 v2 v3 v4 v5 v6 v7)\n            | Error er,_,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_,_ -> Error er\n            | _,_,_,Error er,_,_,_ -> Error er\n            | _,_,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,_,Error er -> Error er\n\n    let map8\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'h -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>)\n        (d7 : Decoder<'g>)\n        (d8 : Decoder<'h>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value, d7 path value, d8 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6, Ok v7, Ok v8 -> Ok (ctor v1 v2 v3 v4 v5 v6 v7 v8)\n            | Error er,_,_,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_,_,_ -> Error er\n            | _,_,_,Error er,_,_,_,_ -> Error er\n            | _,_,_,_,Error er,_,_,_ -> Error er\n            | _,_,_,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,_,_,Error er -> Error er\n\n    let dict (decoder : Decoder<'value>) : Decoder<Map<string, 'value>> =\n        map Map.ofList (keyValuePairs decoder)\n\n    //////////////////////\n    // Object builder ///\n    ////////////////////\n\n    type IRequiredGetter =\n        abstract Field : string -> Decoder<'a> -> 'a\n        abstract At : List<string> -> Decoder<'a> -> 'a\n        abstract Raw : Decoder<'a> -> 'a\n\n    type IOptionalGetter =\n        abstract Field : string -> Decoder<'a> -> 'a option\n        abstract At : List<string> -> Decoder<'a> -> 'a option\n        abstract Raw : Decoder<'a> -> 'a option\n\n    type IGetters =\n        abstract Required: IRequiredGetter\n        abstract Optional: IOptionalGetter\n\n    let private unwrapWith (errors: ResizeArray<DecoderError>) path (decoder: Decoder<'T>) value: 'T =\n        match decoder path value with\n        | Ok v -> v\n        | Error er -> errors.Add(er); Unchecked.defaultof<'T>\n\n    type Getters<'T>(path: string, v: 'T) =\n        let mutable errors = ResizeArray<DecoderError>()\n        let required =\n            { new IRequiredGetter with\n                member __.Field (fieldName : string) (decoder : Decoder<_>) =\n                    unwrapWith errors path (field fieldName decoder) v\n                member __.At (fieldNames : string list) (decoder : Decoder<_>) =\n                    unwrapWith errors path (at fieldNames decoder) v\n                member __.Raw (decoder: Decoder<_>) =\n                    unwrapWith errors path decoder v }\n        let optional =\n            { new IOptionalGetter with\n                member __.Field (fieldName : string) (decoder : Decoder<_>) =\n                    unwrapWith errors path (optional fieldName decoder) v\n                member __.At (fieldNames : string list) (decoder : Decoder<_>) =\n                    unwrapWith errors path (optionalAt fieldNames decoder) v\n                member __.Raw (decoder: Decoder<_>) =\n                    match decoder path v with\n                    | Ok v -> Some v\n                    | Error((_, reason) as error) ->\n                        match reason with\n                        | BadPrimitive(_,v)\n                        | BadPrimitiveExtra(_,v,_)\n                        | BadType(_,v) ->\n                            if Helpers.isNullValue v then None\n                            else errors.Add(error); Unchecked.defaultof<_>\n                        | BadField _\n                        | BadPath _ -> None\n                        | TooSmallArray _\n                        | FailMessage _\n                        | BadOneOf _ -> errors.Add(error); Unchecked.defaultof<_> }\n        member __.Errors: _ list = Seq.toList errors\n        interface IGetters with\n            member __.Required = required\n            member __.Optional = optional\n\n    let object (builder: IGetters -> 'value) : Decoder<'value> =\n        fun path v ->\n            let getters = Getters(path, v)\n            let result = builder getters\n            match getters.Errors with\n            | [] -> Ok result\n            | fst::_ as errors ->\n                if errors.Length > 1 then\n                    let errors = List.map errorToString errors\n                    (path, BadOneOf errors) |> Error\n                else\n                    Error fst\n\n    ///////////////////////\n    // Tuples decoders ///\n    ////////////////////\n\n    let tuple2 (decoder1: Decoder<'T1>) (decoder2: Decoder<'T2>) : Decoder<'T1 * 'T2> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                succeed (v1, v2)\n            )\n        )\n\n    let tuple3 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>) : Decoder<'T1 * 'T2 * 'T3> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    succeed (v1, v2, v3)\n                )\n            )\n        )\n\n    let tuple4 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>) : Decoder<'T1 * 'T2 * 'T3 * 'T4> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        succeed (v1, v2, v3, v4)\n                    )\n                )\n            )\n        )\n\n    let tuple5 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            succeed (v1, v2, v3, v4, v5)\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple6 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                succeed (v1, v2, v3, v4, v5, v6)\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple7 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>)\n               (decoder7: Decoder<'T7>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                index 6 decoder7\n                                |> andThen (fun v7 ->\n                                    succeed (v1, v2, v3, v4, v5, v6, v7)\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple8 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>)\n               (decoder7: Decoder<'T7>)\n               (decoder8: Decoder<'T8>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                index 6 decoder7\n                                |> andThen (fun v7 ->\n                                    index 7 decoder8\n                                    |> andThen (fun v8 ->\n                                        succeed (v1, v2, v3, v4, v5, v6, v7, v8)\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    ////////////\n    // Enum ///\n    /////////\n\n    module Enum =\n\n        let inline byte<'TEnum when 'TEnum : enum<byte>> : Decoder<'TEnum> =\n            byte\n            |> andThen (fun value ->\n                LanguagePrimitives.EnumOfValue<byte, 'TEnum> value\n                |> succeed\n            )\n\n        let inline sbyte<'TEnum when 'TEnum : enum<sbyte>> : Decoder<'TEnum> =\n            sbyte\n            |> andThen (fun value ->\n                LanguagePrimitives.EnumOfValue<sbyte, 'TEnum> value\n                |> succeed\n            )\n\n        let inline int16<'TEnum when 'TEnum : enum<int16>> : Decoder<'TEnum> =\n            int16\n            |> andThen (fun value ->\n                LanguagePrimitives.EnumOfValue<int16, 'TEnum> value\n                |> succeed\n            )\n\n        let inline uint16<'TEnum when 'TEnum : enum<uint16>> : Decoder<'TEnum> =\n            uint16\n            |> andThen (fun value ->\n                LanguagePrimitives.EnumOfValue<uint16, 'TEnum> value\n                |> succeed\n            )\n\n        let inline int<'TEnum when 'TEnum : enum<int>> : Decoder<'TEnum> =\n            int\n            |> andThen (fun value ->\n                LanguagePrimitives.EnumOfValue<int, 'TEnum> value\n                |> succeed\n            )\n\n        let inline uint32<'TEnum when 'TEnum : enum<uint32>> : Decoder<'TEnum> =\n            uint32\n            |> andThen (fun value ->\n                LanguagePrimitives.EnumOfValue<uint32, 'TEnum> value\n                |> succeed\n            )\n\n    //////////////////\n    // Reflection ///\n    ////////////////\n\n    open FSharp.Reflection\n\n    // As generics are erased by Fable, let's just do an unsafe cast for performance\n    let inline boxDecoder (d: Decoder<'T>): BoxedDecoder =\n        !!d // d >> Result.map box\n\n    let inline unboxDecoder (d: BoxedDecoder): Decoder<'T> =\n        !!d // d >> Result.map unbox\n\n    // This is used to force Fable use a generic comparer for map keys\n    let private toMap<'key, 'value when 'key: comparison> (xs: ('key*'value) seq) = Map.ofSeq xs\n    let private toSet<'key when 'key: comparison> (xs: 'key seq) = Set.ofSeq xs\n\n    let private autoObject (decoderInfos: (string * BoxedDecoder)[]) (path : string) (value: JsonValue) =\n        if not (Helpers.isObject value) then\n            (path, BadPrimitive (\"an object\", value)) |> Error\n        else\n            (decoderInfos, Ok []) ||> Array.foldBack (fun (name, decoder) acc ->\n                match acc with\n                | Error _ -> acc\n                | Ok result ->\n                    Helpers.getField name value\n                    |> decoder (path + \".\" + name)\n                    |> Result.map (fun v -> v::result))\n\n    let inline private enumDecoder<'UnderlineType when 'UnderlineType : equality>\n        (decoder : Decoder<'UnderlineType>)\n        (toString : 'UnderlineType -> string)\n        (t: System.Type) =\n\n            fun path value ->\n                match decoder path value with\n                | Ok enumValue ->\n                    System.Enum.GetValues(t)\n                    |> Seq.cast<'UnderlineType>\n                    |> Seq.contains enumValue\n                    |> function\n                    | true ->\n                        System.Enum.Parse(t, toString enumValue)\n                        |> Ok\n                    | false ->\n                        (path, BadPrimitiveExtra(t.FullName, value, \"Unkown value provided for the enum\"))\n                        |> Error\n                | Error msg ->\n                    Error msg\n\n    let private autoObject2 (keyDecoder: BoxedDecoder) (valueDecoder: BoxedDecoder) (path : string) (value: JsonValue) =\n        if not (Helpers.isObject value) then\n            (path, BadPrimitive (\"an object\", value)) |> Error\n        else\n            (Ok [], Helpers.objectKeys(value)) ||> Seq.fold (fun acc name ->\n                match acc with\n                | Error _ -> acc\n                | Ok acc ->\n                    match keyDecoder path name with\n                    | Error er -> Error er\n                    | Ok k ->\n                        Helpers.getField name value\n                        |> valueDecoder (path + \".\" + name)\n                        |> function\n                            | Error er -> Error er\n                            | Ok v -> (k,v)::acc |> Ok)\n\n    let private mixedArray msg (decoders: BoxedDecoder[]) (path: string) (values: JsonValue[]): Result<JsonValue list, DecoderError> =\n        if decoders.Length <> values.Length then\n            (path, sprintf \"Expected %i %s but got %i\" decoders.Length msg values.Length\n            |> FailMessage) |> Error\n        else\n            (values, decoders, Ok [])\n            |||> Array.foldBack2 (fun value decoder acc ->\n                match acc with\n                | Error _ -> acc\n                | Ok result -> decoder path value |> Result.map (fun v -> v::result))\n\n    let rec private makeUnion extra caseStrategy t name (path : string) (values: JsonValue[]) =\n        let uci =\n            FSharpType.GetUnionCases(t, allowAccessToPrivateRepresentation=true)\n            |> Array.tryFind (fun x -> x.Name = name)\n        match uci with\n        | None -> (path, FailMessage(\"Cannot find case \" + name + \" in \" + t.FullName)) |> Error\n        | Some uci ->\n            if values.Length = 0 then\n                FSharpValue.MakeUnion(uci, [||], allowAccessToPrivateRepresentation=true) |> Ok\n            else\n                let decoders = uci.GetFields() |> Array.map (fun fi -> autoDecoder extra caseStrategy false fi.PropertyType)\n                mixedArray \"union fields\" decoders path values\n                |> Result.map (fun values -> FSharpValue.MakeUnion(uci, List.toArray values, allowAccessToPrivateRepresentation=true))\n\n    and private autoDecodeRecordsAndUnions extra (caseStrategy : CaseStrategy) (isOptional : bool) (t: System.Type) : BoxedDecoder =\n        // Add the decoder to extra in case one of the fields is recursive\n        let decoderRef = ref Unchecked.defaultof<_>\n        let extra = extra |> Map.add t.FullName decoderRef\n        let decoder =\n            if FSharpType.IsRecord(t, allowAccessToPrivateRepresentation=true) then\n                let decoders =\n                    FSharpType.GetRecordFields(t, allowAccessToPrivateRepresentation=true)\n                    |> Array.map (fun fi -> \n                        let name = Util.Casing.convert caseStrategy fi.Name\n                        name, autoDecoder extra caseStrategy false fi.PropertyType)\n                fun path value ->\n                    autoObject decoders path value\n                    |> Result.map (fun xs -> FSharpValue.MakeRecord(t, List.toArray xs, allowAccessToPrivateRepresentation=true))\n\n            elif FSharpType.IsUnion(t, allowAccessToPrivateRepresentation=true) then\n                fun path (value: JsonValue) ->\n                    if Helpers.isString(value) then\n                        let name = Helpers.asString value\n                        makeUnion extra caseStrategy t name path [||]\n                    elif Helpers.isArray(value) then\n                        let values = Helpers.asArray value\n                        let name = Helpers.asString values.[0]\n                        makeUnion extra caseStrategy t name path values.[1..]\n                    else (path, BadPrimitive(\"a string or array\", value)) |> Error\n\n            else\n                if isOptional then\n                    // The error will only happen at runtime if the value is not null\n                    // See https://github.com/MangelMaxime/Thoth/pull/84#issuecomment-444837773\n                    boxDecoder(fun path value -> Error(path, BadType(\"an extra coder for \" + t.FullName, value)))\n                else\n                    // Don't use failwithf here, for some reason F#/Fable compiles it as a function\n                    // when the return type is a function too, so it doesn't fail immediately\n                    sprintf \"Cannot generate auto decoder for %s. Please pass an extra decoder.\" t.FullName |> failwith\n        decoderRef := decoder\n        decoder\n\n    and private autoDecoder (extra: Map<string, ref<BoxedDecoder>>) caseStrategy (isOptional : bool) (t: System.Type) : BoxedDecoder =\n      let fullname = t.FullName\n      match Map.tryFind fullname extra with\n      | Some decoderRef -> fun path value -> decoderRef.contents path value\n      | None ->\n        if t.IsArray then\n            let decoder = t.GetElementType() |> autoDecoder extra caseStrategy false\n            array decoder |> boxDecoder\n        elif t.IsEnum then\n            let enumType = System.Enum.GetUnderlyingType(t).FullName\n            if enumType = typeof<sbyte>.FullName then\n                enumDecoder<sbyte> sbyte Operators.string t |> boxDecoder\n            elif enumType = typeof<byte>.FullName then\n                enumDecoder<byte> byte Operators.string t |> boxDecoder\n            elif enumType = typeof<int16>.FullName then\n                enumDecoder<int16> int16 Operators.string t |> boxDecoder\n            elif enumType = typeof<uint16>.FullName then\n                enumDecoder<uint16> uint16 Operators.string t |> boxDecoder\n            elif enumType = typeof<int>.FullName then\n                enumDecoder<int> int Operators.string t |> boxDecoder\n            elif enumType = typeof<uint32>.FullName then\n                enumDecoder<uint32> uint32 Operators.string t |> boxDecoder\n            else\n                failwithf\n                    \"\"\"Cannot generate auto decoder for %s.\nThoth.Json.Net only support the folluwing enum types:\n- sbyte\n- byte\n- int16\n- uint16\n- int\n- uint32\nIf you can't use one of these types, please pass an extra decoder.\n                    \"\"\" t.FullName\n        elif t.IsGenericType then\n            if FSharpType.IsTuple(t) then\n                let decoders = FSharpType.GetTupleElements(t) |> Array.map (autoDecoder extra caseStrategy false)\n                fun path value ->\n                    if Helpers.isArray value then\n                        mixedArray \"tuple elements\" decoders path (Helpers.asArray value)\n                        |> Result.map (fun xs -> FSharpValue.MakeTuple(List.toArray xs, t))\n                    else (path, BadPrimitive (\"an array\", value)) |> Error\n            else\n                let fullname = t.GetGenericTypeDefinition().FullName\n                if fullname = typedefof<obj option>.FullName then\n                    t.GenericTypeArguments.[0] |> (autoDecoder extra caseStrategy true) |> option |> boxDecoder\n                elif fullname = typedefof<obj list>.FullName then\n                    t.GenericTypeArguments.[0] |> (autoDecoder extra caseStrategy false) |> list |> boxDecoder\n                // Disable seq support because I don't know how to implement it on Thoth.Json.Net side\n                // elif fullname = typedefof<obj seq>.FullName then\n                //     t.GenericTypeArguments.[0] |> (autoDecoder extra caseStrategy false) |> seq |> boxDecoder\n                elif fullname = typedefof< Map<string, obj> >.FullName then\n                    let keyDecoder = t.GenericTypeArguments.[0] |> autoDecoder extra caseStrategy false\n                    let valueDecoder = t.GenericTypeArguments.[1] |> autoDecoder extra caseStrategy false\n                    oneOf [\n                        autoObject2 keyDecoder valueDecoder\n                        list (tuple2 keyDecoder valueDecoder)\n                    ] |> map (fun ar -> toMap (unbox ar) |> box)\n                elif fullname = typedefof< Set<string> >.FullName then\n                    let decoder = t.GenericTypeArguments.[0] |> autoDecoder extra caseStrategy false\n                    fun path value ->\n                        match array decoder path value with\n                        | Error er -> Error er\n                        | Ok ar -> toSet (unbox ar) |> box |> Ok\n                else\n                    autoDecodeRecordsAndUnions extra caseStrategy isOptional t\n        else\n            if fullname = typeof<bool>.FullName then\n                boxDecoder bool\n            elif fullname = typedefof<unit>.FullName then\n                boxDecoder unit\n            elif fullname = typeof<string>.FullName then\n                boxDecoder string\n            elif fullname = typeof<sbyte>.FullName then\n                boxDecoder sbyte\n            elif fullname = typeof<byte>.FullName then\n                boxDecoder byte\n            elif fullname = typeof<int16>.FullName then\n                boxDecoder int16\n            elif fullname = typeof<uint16>.FullName then\n                boxDecoder uint16\n            elif fullname = typeof<int>.FullName then\n                boxDecoder int\n            elif fullname = typeof<uint32>.FullName then\n                boxDecoder uint32\n            elif fullname = typeof<float>.FullName then\n                boxDecoder float\n            elif fullname = typeof<float32>.FullName then\n                boxDecoder float32\n            // These number types require extra libraries in Fable. To prevent penalizing\n            // all users, extra decoders (withInt64, etc) must be passed when they're needed.\n\n            // elif fullname = typeof<int64>.FullName then\n            //     boxDecoder int64\n            // elif fullname = typeof<uint64>.FullName then\n            //     boxDecoder uint64\n            // elif fullname = typeof<bigint>.FullName then\n            //     boxDecoder bigint\n            // elif fullname = typeof<decimal>.FullName then\n            //     boxDecoder decimal\n            elif fullname = typeof<System.DateTime>.FullName then\n                boxDecoder datetime\n            elif fullname = typeof<System.DateTimeOffset>.FullName then\n                boxDecoder datetimeOffset\n            elif fullname = typeof<System.TimeSpan>.FullName then\n                boxDecoder timespan\n            elif fullname = typeof<System.Guid>.FullName then\n                boxDecoder guid\n            elif fullname = typeof<obj>.FullName then\n                fun _ v -> Ok v\n            else autoDecodeRecordsAndUnions extra caseStrategy isOptional t\n\n    let private makeExtra (extra: ExtraCoders option) =\n        match extra with\n        | None -> Map.empty\n        | Some e -> Map.map (fun _ (_,dec) -> ref dec) e.Coders\n\n    type Auto =\n        static member generateDecoderCached<'T>(?caseStrategy : CaseStrategy, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Decoder<'T> =\n            let t = Util.resolveType resolver\n            let caseStrategy = defaultArg caseStrategy PascalCase\n\n            let key =\n                t.FullName\n                |> (+) (Operators.string caseStrategy)\n                |> (+) (extra |> Option.map (fun e -> e.Hash) |> Option.defaultValue \"\")\n\n            Util.CachedDecoders.GetOrAdd(key, fun _ ->\n                autoDecoder (makeExtra extra) caseStrategy false t) |> unboxDecoder\n\n        static member generateDecoder<'T>(?caseStrategy : CaseStrategy, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Decoder<'T> =\n            let caseStrategy = defaultArg caseStrategy PascalCase\n            Util.resolveType resolver\n            |> autoDecoder (makeExtra extra) caseStrategy false |> unboxDecoder\n\n        static member fromString<'T>(json: string, ?caseStrategy : CaseStrategy, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Result<'T, string> =\n            let decoder = Auto.generateDecoder(?caseStrategy=caseStrategy, ?extra=extra, ?resolver=resolver)\n            fromString decoder json\n\n        static member unsafeFromString<'T>(json: string, ?caseStrategy : CaseStrategy, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): 'T =\n            let decoder = Auto.generateDecoder(?caseStrategy=caseStrategy, ?extra=extra, ?resolver=resolver)\n            match fromString decoder json with\n            | Ok x -> x\n            | Error msg -> failwith msg\n","module Thoth.Fetch\n\nopen Fetch\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json\n\ntype FetchError =\n    | PreparingRequestFailed of exn\n    | DecodingFailed of string\n    | FetchFailed of Response\n    | NetworkError of exn\n\nmodule Helper =\n\n    [<Erase>]\n    type GlobalFetch =\n        [<Global>]\n        static member fetch (req: RequestInfo, ?init: RequestInit): JS.Promise<Response> = jsNative\n\n    let fetch (url: string) (init: RequestProperties list): JS.Promise<Response> =\n        GlobalFetch.fetch (RequestInfo.Url url, requestProps init)\n\n    let withContentTypeJson data headers =\n        match data with\n        | Some _ -> ContentType \"application/json\" :: headers\n        | _ -> headers\n\n    let encode data caseStrategy extra dataResolver =\n        let encoder =\n            Encode.Auto.generateEncoderCached (?caseStrategy = caseStrategy, ?extra = extra, ?resolver = dataResolver)\n\n        data\n        |> encoder\n        |> Encode.toString 0\n\n    let withBody data caseStrategy extra dataResolver properties =\n        data\n        |> Option.map (fun data ->\n            encode data caseStrategy extra dataResolver\n            |> (!^)\n            |> Body\n            |> fun body -> body :: properties)\n        |> Option.defaultValue properties\n\n    let withProperties custom properties =\n        custom\n        |> Option.map ((@) properties)\n        |> Option.defaultValue properties\n\n    let eitherUnit (responseResolver: ITypeResolver<'Response>) cont =\n        if responseResolver.ResolveType().FullName = typedefof<unit>.FullName then Ok(unbox())\n        else cont()\n\n    let resolve (response: Response) caseStrategy extra (decoder: Decoder<'Response> option)\n        (responseResolver: ITypeResolver<'Response> option) =\n\n        let decoder =\n            decoder\n            |> Option.defaultValue\n                (Decode.Auto.generateDecoderCached\n                    (?caseStrategy = caseStrategy, ?extra = extra, ?resolver = responseResolver))\n\n        let decode body = Decode.fromString decoder body\n\n        let eitherUnitOr = eitherUnit responseResolver.Value\n\n        promise {\n            let! result =\n                if response.Ok then\n                    promise {\n                        let! body = response.text()\n                        return eitherUnitOr <| fun () ->\n                            match decode body with\n                            | Ok value -> Ok value\n                            | Error msg -> DecodingFailed msg |> Error\n                    }\n                else\n                    FetchFailed response |> Error\n                    |> Promise.lift\n            return result\n        }\n\n    let message error =\n        match error with\n        | PreparingRequestFailed exn ->\n            \"[Thoth.Fetch] Request preparation failed:\\n\\n\" + exn.Message\n        | DecodingFailed msg ->\n            \"[Thoth.Fetch] Error while decoding the response:\\n\\n\" + msg\n        | FetchFailed response ->\n            \"[Thoth.Fetch] Request failed:\\n\\n\" + string response.Status + \" \" + response.StatusText + \" for URL \" + response.Url\n        | NetworkError exn ->\n            \"[Thoth.Fetch] A network error occured:\\n\\n\" + exn.Message\n\nopen Helper\n\ntype Fetch =\n\n    /// **Description**\n    ///\n    /// Send a request to the specified resource and decodes the response.\n    ///\n    /// If fetch and decoding succeed, we return `Ok 'Response`.\n    ///\n    /// If we fail, we return `Error (FetchError)` containing an better explanation.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `httpMethod` - optional parameter of type `HttpMethod` - HttpMethod used for Request, defaults to **GET**\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<Result<'Response,FetchError>>`\n    ///\n    /// **Exceptions**\n    ///\n    static member tryFetchAs<'Data, 'Response> (url: string, ?decoder: Decoder<'Response>, ?data: 'Data,\n                                                ?httpMethod: HttpMethod, ?properties: RequestProperties list,\n                                                ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy,\n                                                ?extra: ExtraCoders,\n                                                [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                                [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        try\n            let properties =\n                [ Method <| defaultArg httpMethod HttpMethod.GET\n                  requestHeaders (defaultArg headers [] |> withContentTypeJson data) ]\n                |> withBody data caseStrategy extra dataResolver\n                |> withProperties properties\n\n            promise {\n                let! response = fetch url properties\n                return! resolve response caseStrategy extra decoder responseResolver\n            }\n            |> Promise.catch (NetworkError >> Error)\n\n        with exn -> promise { return PreparingRequestFailed exn |> Error }\n\n    /// **Description**\n    ///\n    /// Send a request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"` if data is provided.\n    ///\n    //// An exception will be thrown if fetch fails.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `httpMethod` - optional parameter of type `HttpMethod` - HttpMethod used, defaults to **GET**\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<'Response>`\n    ///\n    /// **Exceptions**\n    ///   * `System.Exception` - Contains information explaining why the request failed\n    ///\n    static member fetchAs<'Data, 'Response> (url: string, ?decoder: Decoder<'Response>, ?data: 'Data,\n                                             ?httpMethod: HttpMethod, ?properties: RequestProperties list,\n                                             ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy, ?extra: ExtraCoders,\n                                             [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                             [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        promise {\n            let! result = Fetch.tryFetchAs<'Data, 'Response>\n                              (url, ?decoder = decoder, ?httpMethod = httpMethod, ?data = data, ?properties = properties,\n                               ?headers = headers, ?caseStrategy = caseStrategy, ?extra = extra,\n                               ?responseResolver = responseResolver, ?dataResolver = dataResolver)\n            let response =\n                match result with\n                | Ok response -> response\n                | Error error -> failwith (message error)\n            return response\n        }\n\n    /// **Description**\n    ///\n    /// Send a **GET** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"` if data is provided.\n    ///\n    //// An exception will be thrown if the request fails.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<'Response>`\n    ///\n    /// **Exceptions**\n    ///   * `System.Exception` - Contains information explaining why the request failed\n    ///\n    static member get<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                         ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy,\n                                         ?extra: ExtraCoders, ?decoder: Decoder<'Response>,\n                                         [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                         [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.fetchAs\n            (url, ?data = data, ?properties = properties, ?headers = headers, ?caseStrategy = caseStrategy, ?extra = extra,\n             ?decoder = decoder, ?responseResolver = responseResolver, ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **GET** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"`.\n    ///\n    //// If we fail, we return `Error (FetchError)` containing an better explanation.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<Result<'Response,FetchError>>`\n    ///\n    /// **Exceptions**\n    ///\n    static member tryGet<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                            ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy, ?extra: ExtraCoders,\n                                            ?decoder: Decoder<'Response>,\n                                            [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                            [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.tryFetchAs\n            (url, ?data = data, ?properties = properties, ?headers = headers, ?caseStrategy = caseStrategy, ?extra = extra,\n             ?decoder = decoder, ?responseResolver = responseResolver, ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **POST** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"` if data is provided.\n    ///\n    //// An exception will be thrown if the request fails.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<'Response>`\n    ///\n    /// **Exceptions**\n    ///   * `System.Exception` - Contains information explaining why the request failed\n    ///\n    static member post<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                          ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy,\n                                          ?extra: ExtraCoders, ?decoder: Decoder<'Response>,\n                                          [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                          [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.fetchAs\n            (url, httpMethod = HttpMethod.POST, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **POST** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"`.\n    ///\n    //// If we failed, we return `Error (FetchError)` containing an better explanation.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<Result<'Response,FetchError>>`\n    ///\n    /// **Exceptions**\n    ///\n    static member tryPost<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                             ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy, ?extra: ExtraCoders,\n                                             ?decoder: Decoder<'Response>,\n                                             [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                             [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.tryFetchAs\n            (url, httpMethod = HttpMethod.POST, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **PUT** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"` if data is provided.\n    ///\n    //// An exception will be thrown if the request fails.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<'Response>`\n    ///\n    /// **Exceptions**\n    ///   * `System.Exception` - Contains information explaining why the request failed\n    ///\n    static member put<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                         ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy,\n                                         ?extra: ExtraCoders, ?decoder: Decoder<'Response>,\n                                         [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                         [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.fetchAs\n            (url, httpMethod = HttpMethod.PUT, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **PUT** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"`.\n    ///\n    //// If we failed, we return `Error (FetchError)` containing an better explanation.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<Result<'Response,FetchError>>`\n    ///\n    /// **Exceptions**\n    ///\n    static member tryPut<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                            ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy, ?extra: ExtraCoders,\n                                            ?decoder: Decoder<'Response>,\n                                            [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                            [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.tryFetchAs\n            (url, httpMethod = HttpMethod.PUT, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **PATCH** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"` if data is provided.\n    ///\n    //// An exception will be thrown if the request fails.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<'Response>`\n    ///\n    /// **Exceptions**\n    ///   * `System.Exception` - Contains information explaining why the request failed\n    ///\n    static member patch<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                           ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy,\n                                           ?extra: ExtraCoders, ?decoder: Decoder<'Response>,\n                                           [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                           [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.fetchAs\n            (url, httpMethod = HttpMethod.PATCH, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **PATCH** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"`.\n    ///\n    //// If we failed, we return `Error (FetchError)` containing an better explanation.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<Result<'Response,FetchError>>`\n    ///\n    /// **Exceptions**\n    ///\n    static member tryPatch<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                              ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy, ?extra: ExtraCoders,\n                                              ?decoder: Decoder<'Response>,\n                                              [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                              [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.tryFetchAs\n            (url, httpMethod = HttpMethod.PATCH, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **DELETE** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"` if data is provided.\n    ///\n    //// An exception will be thrown if the request fails.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<'Response>`\n    ///\n    /// **Exceptions**\n    ///   * `System.Exception` - Contains information explaining why the request failed\n    ///\n    static member delete<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                            ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy, ?extra: ExtraCoders,\n                                            ?decoder: Decoder<'Response>,\n                                            [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                            [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.fetchAs\n            (url, httpMethod = HttpMethod.DELETE, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n\n    /// **Description**\n    ///\n    /// Send a **DELETE** request to the specified resource and decodes the response.\n    ///\n    /// This method set the `ContentType` header to `\"application/json\"`.\n    ///\n    //// If we failed, we return `Error (FetchError)` containing an better explanation.\n    ///\n    /// **Parameters**\n    ///   * `url` - parameter of type `string` - URL to request\n    ///   * `data` - optional parameter of type `'Data` - Data sent via the body, it will be converted to JSON before\n    ///   * `properties` - optional parameter of type `RequestProperties list` - Parameters passed to fetch\n    ///   * `headers` - optional parameter of type `HttpRequestHeaders list` - Parameters passed to fetch's properties\n    ///   * `caseStrategy` - optional parameter of type `CaseStrategy` - Options passed to Thoth.Json to control JSON keys representation\n    ///   * `extra` - optional parameter of type `ExtraCoders` - Options passed to Thoth.Json to extends the known coders\n    ///   * `decoder` - parameter of type `Decoder<'Response>` - Decoder applied to the server response\n    ///   * `responseResolver` - optional parameter of type `ITypeResolver<'Response>` - Used by Fable to provide generic type info\n    ///   * `dataResolver` - parameter of type `ITypeResolver<'Data> option` - Used by Fable to provide generic type info\n    ///\n    /// **Output Type**\n    ///   * `JS.Promise<Result<'Response,FetchError>>`\n    ///\n    /// **Exceptions**\n    ///\n    static member tryDelete<'Data, 'Response> (url: string, ?data: 'Data, ?properties: RequestProperties list,\n                                               ?headers: HttpRequestHeaders list, ?caseStrategy: CaseStrategy,\n                                               ?extra: ExtraCoders, ?decoder: Decoder<'Response>,\n                                               [<Inject>] ?responseResolver: ITypeResolver<'Response>,\n                                               [<Inject>] ?dataResolver: ITypeResolver<'Data>) =\n        Fetch.tryFetchAs\n            (url, httpMethod = HttpMethod.DELETE, ?data = data, ?properties = properties, ?headers = headers,\n             ?caseStrategy = caseStrategy, ?extra = extra, ?decoder = decoder, ?responseResolver = responseResolver,\n             ?dataResolver = dataResolver)\n","namespace DependencyCollapser\n//https://github.com/aolney/dependency-collapser\n\nmodule Rules =\n\n    open System.Collections.Generic\n\n    let tryGetValue (collection:IDictionary<'T,'U>) key =\n        match collection.TryGetValue(key) with\n        | true,v -> Some(v)\n        | false,_ -> None\n\n    let toLower (s:string) =\n        s.ToLower()\n\n    type Token =\n         {\n            ///0-based index\n            Index : int\n            Word : string\n            POS : string\n            ///Defaults to word if empty on creation\n            Lemma : string\n            DependencyType : string\n            Head : int\n            ///The text dominated by this token //apparently unneeded\n            //Span : string\n         } with \n         /// If no lemma is provided, uses word as lemma\n         static member Create(index, word, pos, depType, head)= \n            { Index=index; Word=word; POS=pos; Lemma=word; DependencyType=depType;Head=head} //;Span=\"\"}\n         /// Full constructor\n         static member Create(index,word, pos, lemma, depType, head) = \n            { Index=index; Word=word; POS=pos; Lemma=lemma; DependencyType=depType;Head=head} //;Span=\"\"}\n\n    type Dependency =\n         {\n            Type : string\n            Governor : Token\n            Dependent : Token\n         }\n\n    //TODO: simplify\n    type RuleToken = \n        {\n            ///From index (governor)\n            Index : int\n            ///Governor token (see constructor)\n            Token : Token\n            ///To index (dependent)\n            TargetIndex : int\n            ///Dependent token (see constructor)\n            TargetToken : Token\n            ///Current dependency type (so may not match target/dependent's dependency type)\n            DependencyType : string\n            Durable : bool\n        } with\n        member this.Signature() = \n            let typeString = if this.Durable then \"d\" else \"r\" \n            typeString + this.Index.ToString() + \"_\" + this.TargetIndex.ToString()\n\n    type SpecifierType = Word | POS | Lemma \n\n    type RelationType =  Relation | DurableRelation\n\n    type Property =\n        {\n            /// The type the pattern is applied to\n            Type : SpecifierType\n            /// TheOLDSpecifierTypeer used to reference a matched word\n            Reference : int\n            /// The regular expression pattern\n            Regex : string\n        }\n\n    type Relation = \n        {\n            /// The type the pattern is applied to\n            Type : RelationType\n            /// The reference number of the word specifier of the start word (dependent)\n            From : int\n            /// The reference number of the word specifier of the end word (head)\n            To : int \n            /// The regular expression pattern\n            Regex : string\n        } with\n        member this.Signature() = \n            let typeString = match this.Type with | Relation -> \"r\" | DurableRelation -> \"d\"\n            typeString + this.From.ToString() + \"_\" + this.To.ToString()\n\n\n    /// Find the spanned text for a 0-based index into tokens.\n    /// Note that the dependency parse heads are 1-indexed.\n    let spannedText (token : Token) (tokens: list<Token>) =\n        let frontier = HashSet<int>()\n        frontier.Add(token.Index + 1) |> ignore\n        let mutable notDone = true\n        while notDone do\n            notDone <- false\n            for f in frontier |> List do\n                for t in tokens do\n                    if frontier.Contains( t.Head ) then\n                        notDone <- frontier.Add( t.Index + 1) //if not present already, notDone set to true\n        //\n        frontier |> Seq.sort |> Seq.map( fun f -> tokens.[f-1].Word) |> String.concat \" \"\n            \n    /// Add text of dominated tokens, i.e. a span, to each token\n    //let addSpans (tokens: list<Token>) =\n    //    tokens |> List.map( fun t -> {t with Span=(spannedText t tokens)})\n\n    /// Get the governing token of a token\n    let governor (tokens: list<Token>) (token : Token) =\n        if token.Head > 0 then\n            tokens.[ token.Head - 1]\n        //ROOT token is self-governing\n        else\n            token\n\n    let dependenciesFromTokens tokens =\n        tokens |> List.map( fun token -> { Governor= token |> governor tokens; Dependent = token; Type=token.DependencyType } )\n\n    /// Do a regex match and return an option of the retval\n    let doMatch retVal pattern input =\n        let m = System.Text.RegularExpressions.Regex.Match(input, pattern)\n        if m.Success then Some(retVal) else None\n\n    /// Match on the appropriate property\n    let propertyMatch (property : Property) token =\n        match property.Type with\n        //| Word -> token.Span |> doMatch token.Span property.Regex //assumed span was needed b/c \"getCoveredText\" is called in the original, but apparently that call is scoped to the token.\n        | Word -> token.Word |> doMatch token.Word property.Regex\n        //| POS -> token.POS |> doMatch token.POS property.Regex \n        | POS -> token.POS |> doMatch token.Word property.Regex //This is somewhat undocumented, but often added relations have a name that is the word associated with a POS match. Currently no rules require POS for a POS match in this way.\n        | Lemma -> token.Lemma |> doMatch token.Lemma property.Regex\n\n\n    type Model =\n        {\n            From : int\n            To : int\n            Tokens : Dictionary<int,Token>\n            Relations : ResizeArray<RuleToken>\n            AddedTokens : HashSet<string>\n        } with\n        static member Create(from, To)= \n            { From=from; To=To; Tokens=Dictionary<int,Token>(); Relations=ResizeArray<RuleToken>();AddedTokens=HashSet<string>()}\n        member this.AddRuleToken( ruleToken : RuleToken ) =\n            match this.AddedTokens.Add( sprintf \"%A\" ruleToken ) with\n            | false -> None\n            | true ->\n                //clone the current model with new reference types and fill them\n                let newModel = { \n                    this with \n                        Tokens = Dictionary<int,Token>(this.Tokens)\n                        Relations = ResizeArray<RuleToken>(this.Relations)\n                        AddedTokens = HashSet<string>(this.AddedTokens) //NOTE added tokens will be identical bw original and copy\n                    } \n                match this.Tokens.TryGetValue(ruleToken.Index ),  this.Tokens.TryGetValue(ruleToken.TargetIndex )  with\n                | (false, token), (false, targetToken) -> \n                    newModel.Tokens.Add( ruleToken.Index, ruleToken.Token )\n                    newModel.Tokens.Add( ruleToken.TargetIndex, ruleToken.TargetToken )\n                    newModel.Relations.Add( ruleToken )\n                    Some(newModel)\n                | (true, token), (false, targetToken) when token = ruleToken.Token ->\n                    newModel.Tokens.Add( ruleToken.TargetIndex, ruleToken.TargetToken )\n                    newModel.Relations.Add( ruleToken )\n                    Some(newModel)\n                | (false, token), (true, targetToken) when targetToken = ruleToken.TargetToken ->\n                    newModel.Tokens.Add( ruleToken.Index, ruleToken.Token )\n                    newModel.Relations.Add( ruleToken )\n                    Some(newModel)\n                | _ -> \n                    for relation in this.Relations do if relation = ruleToken then newModel.Relations.Add( ruleToken )\n                    //only emit a new model if it is different from the currenct model\n                    let newModelString = sprintf \"%A\" newModel //hack: we are using types that don't have structural equality, so we fake it\n                    let thisString = sprintf \"%A\" this\n                    if newModelString = thisString then None else Some(newModel)\n\n    type Rule =\n        {\n            Properties : Map<int,Property>\n            Relations : Relation list\n            /// The reference number of the word the new dependency orginates from (dependent)\n            From : int\n            /// The reference number of the word the new dependency goes to (head)\n            To : int\n            /// TODO: rename RelationNameTemplate. Arbitrary label of the relation name; it can contain the word,pos,or lemma matched, e.g. \"relationName:the_Pos_tag_is_{p1}\".\n            RelationName : string\n        } with\n        member this.ResolvedRelationName( model : Model ) =\n            //get all property/relation word matches for this model\n            let matchDictionary = Dictionary<string,string>()\n            this.Properties \n            |> Map.toList \n            |> List.iter( fun (i,property) -> \n                match model.Tokens.[i] |> propertyMatch property with\n                | Some(matchedWords) -> matchDictionary.Add( property |> sprintf \"%A\", matchedWords )\n                | None -> ()\n            )\n            this.Relations\n            |> List.iter( fun relation ->\n                model.Relations\n                |> Seq.iter( fun ruleToken -> \n                    if relation.Signature() = ruleToken.Signature() then\n                        let dependencyType = ruleToken.DependencyType\n                        match dependencyType |> doMatch dependencyType relation.Regex with\n                        | Some(matchedWords) ->  matchDictionary.Add( relation |> sprintf \"%A\", matchedWords )\n                        | None -> ()\n                    ()\n                )\n            )\n\n            let mutable retVal = this.RelationName\n            let regex = System.Text.RegularExpressions.Regex(@\"\\{(\\w+)\\}\")\n            \n            regex.Matches(this.RelationName)\n            |> Seq.cast\n            |> Seq.choose( fun (m : System.Text.RegularExpressions.Match) -> \n                let id = m.Groups.[1].Value         \n                if id.StartsWith(\"r\") || id.StartsWith(\"d\") then //only relations start with r or d\n                    match this.Relations |> List.tryFind( fun relation -> id = relation.Signature() ) with\n                    | Some(r) -> r |> sprintf \"%A\" |> tryGetValue matchDictionary\n                    | None -> None\n                else\n                    this.Properties.[ id.Substring(1) |> System.Int32.Parse ] |> sprintf \"%A\" |> tryGetValue matchDictionary \n\n            )\n            |> Seq.iter( fun s -> \n                retVal <- regex.Replace(retVal, s, 1) //replace only the first found\n                )\n            //\n            retVal |> toLower\n\n    type Stage =\n        {\n            Id : int\n            Rules : Rule list\n        }\n\n\n    ///// Automatically created from OLDstageRuleList to better match jobimtext API\n    let stageRuleList =\n        [{Id = 1;\n          Rules =\n           [{Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"prep\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \"well\";}); (2, {Type = Word;\n                                                            Reference = 2;\n                                                            Regex = \"as\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \".*\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"xcomp\";}; {Type = DurableRelation;\n                                               From = 1;\n                                               To = 2;\n                                               Regex = \"ccomp\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"conj\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"conj\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = DurableRelation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"conj\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"cc\";}; {Type = Relation;\n                                            From = 2;\n                                            To = 3;\n                                            Regex = \"mwe\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = POS;\n                                            Reference = 2;\n                                            Regex = \"IN|TO|VBG\";}); (3, {Type = Word;\n                                                                         Reference = 3;\n                                                                         Regex = \".*\";});\n                 (4, {Type = Word;\n                      Reference = 4;\n                      Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = DurableRelation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"pobj\";}; {Type = DurableRelation;\n                                                                 From = 2;\n                                                                 To = 4;\n                                                                 Regex = \"mwe\";}];\n             From = 1;\n             To = 4;\n             RelationName = \"mwe_helper\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"parataxis\";}; {Type = DurableRelation;\n                                                   From = 1;\n                                                   To = 2;\n                                                   Regex = \"^(?!parataxis|tmod$).*\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"tmod\";}; {Type = DurableRelation;\n                                              From = 1;\n                                              To = 2;\n                                              Regex = \"parataxis\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";}];};\n         {Id = 2;\n          Rules =\n           [{Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"next\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \"to\";});\n                 (4, {Type = Word;\n                      Reference = 4;\n                      Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \".*\";}; {Type = Relation;\n                                            From = 2;\n                                            To = 3;\n                                            Regex = \".*\";}; {Type = Relation;\n                                                             From = 3;\n                                                             To = 4;\n                                                             Regex = \"pobj\";}];\n             From = 1;\n             To = 4;\n             RelationName = \"prep_{w2}_to\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = POS;\n                                            Reference = 2;\n                                            Regex = \"IN|TO|VBG\";}); (3, {Type = Word;\n                                                                         Reference = 3;\n                                                                         Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = DurableRelation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"pobj\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_{w2}\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"as\";}); (3, {Type = Word;\n                                                                  Reference = 3;\n                                                                  Regex = \".*\";});\n                 (4, {Type = Word;\n                      Reference = 4;\n                      Regex = \"such\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"pobj\";}; {Type = Relation;\n                                                                 From = 2;\n                                                                 To = 4;\n                                                                 Regex = \"mwe\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_such_as\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = POS;\n                                            Reference = 2;\n                                            Regex = \"IN|TO\";}); (3, {Type = Word;\n                                                                     Reference = 3;\n                                                                     Regex = \".*\";});\n                 (4, {Type = Word;\n                      Reference = 4;\n                      Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"pobj\";}; {Type = Relation;\n                                                                 From = 2;\n                                                                 To = 4;\n                                                                 Regex = \"punct\";}];\n             From = 1;\n             To = 4;\n             RelationName = \"punct\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = POS;\n                                              Reference = 2;\n                                              Regex = \"IN|TO\";}); (3, {Type = Word;\n                                                                       Reference = 3;\n                                                                       Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"pcomp\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prepc_{w2}\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";});\n                 (2, {Type = Word;\n                      Reference = 2;\n                      Regex = \"and|or|but|nor|in|only|as|at|vs\\.|&|versus|and/or\";});\n                 (3, {Type = Word;\n                      Reference = 3;\n                      Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"cc\";}; {Type = Relation;\n                                            From = 1;\n                                            To = 3;\n                                            Regex = \"conj\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"conj_{w2}\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"not|instead|rather\";});\n                 (3, {Type = Word;\n                      Reference = 3;\n                      Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"cc\";}; {Type = Relation;\n                                            From = 1;\n                                            To = 3;\n                                            Regex = \"conj\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"conj_negcc\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"xsubj|ref|possessive\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"advmod\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"advmod\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"dep\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"dep\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \"to\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"pcomp\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prepc_{w2}_{w3}\";}];};\n         {Id = 3;\n          Rules =\n           [{Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \"such\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep_as\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"prep_such_as\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep_[^_]+\";}; {Type = DurableRelation;\n                                                    From = 1;\n                                                    To = 2;\n                                                    Regex = \"prep_[^_]+_.+\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"conj_&\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"conj_and\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \".*\";}); (3, {Type = Word;\n                                                                  Reference = 3;\n                                                                  Regex = \".*\";});\n                 (4, {Type = Word;\n                      Reference = 4;\n                      Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 3;\n                           Regex = \"conj_and\";}; {Type = Relation;\n                                                  From = 1;\n                                                  To = 2;\n                                                  Regex = \"pobj\";}; {Type = Relation;\n                                                                     From = 3;\n                                                                     To = 4;\n                                                                     Regex = \"pobj\";}];\n             From = 2;\n             To = 4;\n             RelationName = \"conj_and\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = POS;\n                                            Reference = 2;\n                                            Regex = \"IN|TO|VBG\";}); (3, {Type = Word;\n                                                                         Reference = 3;\n                                                                         Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"pobj\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"void\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"advmod\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"void\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"to|of|with\";});\n                 (3, {Type = Word;\n                      Reference = 3;\n                      Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep[c]?_.+\";}; {Type = Relation;\n                                                     From = 2;\n                                                     To = 3;\n                                                     Regex = \"pobj\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"pobj\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"cc\";}; {Type = DurableRelation;\n                                            From = 1;\n                                            To = 3;\n                                            Regex = \"conj_and\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"void\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = POS;\n                        Reference = 1;\n                        Regex = \"CD\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"advmod\";}; {Type = Relation;\n                                                From = 1;\n                                                To = 3;\n                                                Regex = \"prep_of\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_{w2}_of\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"advmod\";}; {Type = Relation;\n                                                From = 2;\n                                                To = 3;\n                                                Regex = \"prepc_of\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prepc_{w2}_of\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"advmod\";}; {Type = Relation;\n                                                From = 1;\n                                                To = 3;\n                                                Regex = \"prep_to\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_{w2}_to\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"advmod\";}; {Type = Relation;\n                                                From = 2;\n                                                To = 3;\n                                                Regex = \"prep_to\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_{w2}_to\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"[aA]ccording|[dD]ue\";});\n                 (3, {Type = Word;\n                      Reference = 3;\n                      Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \".*\";}; {Type = Relation;\n                                            From = 2;\n                                            To = 3;\n                                            Regex = \"prep_to\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_{w2}_to\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"addition\";}); (3, {Type = Word;\n                                                                        Reference = 3;\n                                                                        Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep_in\";}; {Type = Relation;\n                                                 From = 2;\n                                                 To = 3;\n                                                 Regex = \"prep_to\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_in_addition_to\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"addition\";}); (3, {Type = Word;\n                                                                        Reference = 3;\n                                                                        Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep_in\";}; {Type = Relation;\n                                                 From = 2;\n                                                 To = 3;\n                                                 Regex = \"prep_of\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_in_front_of\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"[aA]long|[tT]ogether\";});\n                 (3, {Type = Word;\n                      Reference = 3;\n                      Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"advmod\";}; {Type = Relation;\n                                                From = 2;\n                                                To = 3;\n                                                Regex = \"prep_with\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_{w2}_with\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \"with\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prepc_along|prepc_together\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"{r1_2}_with\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \"out|off\";}); (3, {Type = Word;\n                                                                       Reference = 3;\n                                                                       Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prt\";}; {Type = Relation;\n                                             From = 1;\n                                             To = 3;\n                                             Regex = \"prep_of\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"prep_{w2}_of\";};\n            {Properties = Map.ofList <| [(1, {Type = Word;\n                                    Reference = 1;\n                                    Regex = \".*\";}); (2, {Type = Word;\n                                                          Reference = 2;\n                                                          Regex = \"of\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prepc_as|prepc_out\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"{r1_2}_of\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \".*\";}); (2, {Type = Word;\n                                            Reference = 2;\n                                            Regex = \".*\";}); (3, {Type = Word;\n                                                                  Reference = 3;\n                                                                  Regex = \"of|to\";});\n                 (4, {Type = Word;\n                      Reference = 4;\n                      Regex = \".*\";})];\n             Relations =\n              [{Type = Relation;\n                From = 1;\n                To = 2;\n                Regex = \"prep_of|prep_to\";}; {Type = Relation;\n                                              From = 1;\n                                              To = 4;\n                                              Regex = \"mwe_helper\";}; {Type = Relation;\n                                                                       From = 3;\n                                                                       To = 4;\n                                                                       Regex = \"mwe\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"prep_{w4}_{w3}\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prepc_.*\";}; {Type = Relation;\n                                                  From = 2;\n                                                  To = 3;\n                                                  Regex = \"pcomp\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"pcomp\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep[c]?_by\";}; {Type = DurableRelation;\n                                                     From = 1;\n                                                     To = 3;\n                                                     Regex = \"auxpass\";}];\n             From = 1;\n             To = 2;\n             RelationName = \"agent\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"vmod\";}; {Type = Relation;\n                                              From = 2;\n                                              To = 3;\n                                              Regex = \"prep_by\";}];\n             From = 2;\n             To = 3;\n             RelationName = \"agent\";};\n            {Properties =\n              Map.ofList <|\n                [(1, {Type = Word;\n                      Reference = 1;\n                      Regex = \"[fF]rom\";}); (2, {Type = Word;\n                                                 Reference = 2;\n                                                 Regex = \".*\";}); (3, {Type = Word;\n                                                                       Reference = 3;\n                                                                       Regex = \".*\";});\n                 (4, {Type = Word;\n                      Reference = 4;\n                      Regex = \".*\";})];\n             Relations = [{Type = Relation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep_to\";}; {Type = DurableRelation;\n                                                 From = 3;\n                                                 To = 4;\n                                                 Regex = \"prep_from\";}];\n             From = 3;\n             To = 2;\n             RelationName = \"prep_to\";}];};\n         {Id = 4;\n          Rules =\n           [{Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"dobj|nsubj\";}; {Type = DurableRelation;\n                                                    From = 2;\n                                                    To = 3;\n                                                    Regex = \"conj.*\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"{d1_2}\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"prep.*\";}; {Type = DurableRelation;\n                                                From = 2;\n                                                To = 3;\n                                                Regex = \"conj.*\";}];\n             From = 1;\n             To = 3;\n             RelationName = \"{d1_2}\";};\n            {Properties =\n              Map.ofList <| [(1, {Type = Word;\n                        Reference = 1;\n                        Regex = \".*\";}); (2, {Type = Word;\n                                              Reference = 2;\n                                              Regex = \".*\";}); (3, {Type = Word;\n                                                                    Reference = 3;\n                                                                    Regex = \".*\";})];\n             Relations = [{Type = DurableRelation;\n                           From = 1;\n                           To = 2;\n                           Regex = \"nsubj\";}; {Type = DurableRelation;\n                                               From = 2;\n                                               To = 3;\n                                               Regex = \"conj.*\";}];\n             From = 3;\n             To = 2;\n             RelationName = \"{d1_2}\";}];}]\n\nmodule Collapser =\n\n    open Rules\n    open System.Collections.Generic\n\n    ///Get candidates for replacement (dependencies) and indices for replacing them\n    let getCandidatesAndIndices (rule : Rule) (dependencies : Dependency seq) =\n\n        //for each rule relation test each dependency and return matching dependencies\n        let candidates = \n            rule.Relations \n            |> List.map( fun relation -> \n                dependencies \n                |> Seq.choose( fun dep -> \n                    dep.Type |> doMatch dep relation.Regex \n                ) \n                |> Seq.toList\n            )\n\n        //confirm candidate dependencies and construct indices for matching rules\n        let confirmedCandidates = ResizeArray<ResizeArray<Dependency>>()\n        let ruleTokens = Dictionary<int,ResizeArray<RuleToken>>()\n        let targetRuleTokens =  Dictionary<int,ResizeArray<RuleToken>>()\n\n        for i = 0 to candidates.Length - 1 do\n            confirmedCandidates.Add( new ResizeArray<Dependency>() )\n            for dep in candidates.[i] do\n                let from,To = rule.Relations.[i].From,rule.Relations.[i].To//Indexing with 'i' works because candidates can be duplicates; we implicitly loop over relations for non duplicates\n                let headMatch = dep.Governor |> propertyMatch rule.Properties.[from]\n                let dependentMatch = dep.Dependent |> propertyMatch rule.Properties.[To]\n                let relationMatch = dep.Type |> doMatch null rule.Relations.[i].Regex\n                match headMatch,dependentMatch,relationMatch with\n                | Some(_),Some(_),Some(_) -> \n                    confirmedCandidates.[i].Add(dep)\n                    //initialize empty containers\n                    if not <| ruleTokens.ContainsKey(from) then ruleTokens.Add( from, ResizeArray<RuleToken>() )\n                    if not <| targetRuleTokens.ContainsKey(To) then targetRuleTokens.Add( To, ResizeArray<RuleToken>() )\n                    //add ruleToken to respective containers\n                    let ruleToken = { Index=from; TargetIndex=To; Token= dep.Governor; TargetToken= dep.Dependent; DependencyType=dep.Type; Durable=rule.Relations.[i].Type = RelationType.DurableRelation }\n                    ruleTokens.[from].Add(ruleToken)\n                    targetRuleTokens.[To].Add(ruleToken)\n                | _ -> ()\n            ()\n        ()\n        //\n        confirmedCandidates, ruleTokens, targetRuleTokens\n\n    ///Build models ?representing incremental rule applications?\n    let createModels (rule:Rule) (ruleTokens:Dictionary<int,ResizeArray<RuleToken>>) (targetRuleTokens:Dictionary<int,ResizeArray<RuleToken>>) =\n\n        let models = new ResizeArray<Model>()\n        models.Add( Model.Create( rule.From, rule.To ) )\n\n        for x = 0 to rule.Properties.Count - 1 do\n            for relation in rule.Relations do\n                if ruleTokens.[relation.From].Count > 0 && targetRuleTokens.[relation.To].Count > 0 then\n                    for fromRuleToken in ruleTokens.[relation.From] do\n                        let modelCount = models.Count - 1\n                        for i = 0 to modelCount do\n                            match models.[i].AddRuleToken( fromRuleToken ) with\n                            | Some(model) -> models.Add(model)\n                            | None -> ()\n            ()\n        ()\n        //\n        models\n\n    ///Using models, select dependencies to remove or add, given this rule\n    let selectDependenciesWithModels (rule : Rule) models (dependenciesToRemove:HashSet<Token*Token>) (dependenciesToAdd : HashSet<Dependency>) =\n        \n        let keys = HashSet<string>() //TODO: no longer needed?\n\n        //If models are valid, adjust the dependencies accordingly\n        for model in models do\n            match model.Tokens.TryGetValue(rule.From),model.Tokens.TryGetValue(rule.To) with\n            | (true,governor),(true,dependent) ->\n                //Original logic pretty ugly; attempting simplification\n                let modelIsValid = \n                    rule.Relations \n                    |> List.forall( fun relation -> \n                        model.Tokens.ContainsKey( relation.From) && \n                        model.Tokens.ContainsKey( relation.To ) &&\n                        model.Relations\n                        |> Seq.exists( fun ruleToken -> \n                            ruleToken.Index = relation.From && \n                            ruleToken.TargetIndex = relation.To && \n                            (ruleToken.DependencyType |> doMatch null relation.Regex).IsSome ) )\n                if modelIsValid then\n                    let dependencyType = rule.ResolvedRelationName( model )\n                    let key = governor.Index.ToString() + \"|\" + dependent.Index.ToString() + \"|\" + dependencyType\n\n                    //only apply an operation once; NOTE: is this necessary if we are hashing?\n                    if keys.Add(key) then\n                        //collect removal operations\n                        model.Relations \n                        |> Seq.filter( fun rt -> not <| rt.Durable )\n                        |> Seq.iter( fun rt -> dependenciesToRemove.Add( rt.Token,rt.TargetToken) |> ignore )\n                    \n                        //add new dependency if type not void\n                        if dependencyType <> \"void\" then\n                            dependenciesToAdd.Add( {Type=dependencyType; Governor=governor; Dependent=dependent } ) |> ignore\n\n            | _ -> ()\n\n    let StanfordFormat (dependency:Dependency) =\n        let governorString = \n            if dependency.Type = \"root\" then\n                \"ROOT-0\"\n            else \n                dependency.Governor.Word + \"-\" + (dependency.Governor.Index + 1).ToString()\n        let dependentString = dependency.Dependent.Word + \"-\" + (dependency.Dependent.Index + 1).ToString()\n        dependency.Type + \"(\" + governorString + \", \" + dependentString + \")\"\n\n    ///This attempts to follow jobimtext while also cleaning it up\n    let CollapseTokens( tokens : Token list) =\n\n        //dependencies are initialized from tokens but then mutated after each stage\n        let dependencies =\n            tokens\n            |> dependenciesFromTokens\n            |> ResizeArray\n            \n        //Apply rules in stages\n        for stage in stageRuleList do\n\n            //Collect operations; perform *after* all rules are applied\n            let dependenciesToRemove = HashSet<Token*Token>()\n            let dependenciesToAdd = HashSet<Dependency>()\n\n            //Apply rules for current stage\n            for rule in stage.Rules do\n\n                //Given this rule, for each of its relations, get candidates for replacement (dependencies) and indices for replacing them\n                let confirmedCandidates, ruleTokens, targetRuleTokens = getCandidatesAndIndices rule dependencies \n\n                //All rule relations must have a candidate dependency or the rule will never succeed\n                if confirmedCandidates |> Seq.forall( fun depList -> depList.Count > 0 ) then\n\n                    //Build models ?representing incremental application of this rule?\n                    let models = createModels rule ruleTokens targetRuleTokens\n\n                    //NOTE: dead code with conflicting indices omitted\n\n                    //Using models, select dependencies to remove or add, given this rule\n                    selectDependenciesWithModels rule models dependenciesToRemove dependenciesToAdd\n\n            // remove dependencies using collected information\n            dependencies\n            |> List.ofSeq //clone to avoid modifying the iterating collection\n            |> List.iter( fun dep -> if dependenciesToRemove.Contains(dep.Governor,dep.Dependent) then dependencies.Remove(dep) |> ignore )\n                                \n            //add dependencies using collected information\n            dependencies.AddRange( dependenciesToAdd )\n\n        //\n        tokens |> dependenciesFromTokens,\n        dependencies |> Seq.sortBy( fun dep -> dep.Dependent.Index * 10 + dep.Governor.Index ) //hackish way to keep token order but further order by head when equal\n         ","module AllenNLP\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json \nopen Thoth.Fetch\n\n//for node compatibility\nimportSideEffects \"isomorphic-fetch\"\n\n//Fable 2 transition \nlet inline toJson x = Encode.Auto.toString(4, x)\nlet inline ofJson<'T> json = Decode.Auto.unsafeFromString<'T>(json)\n\n/// Fake a promise return type with success indicator\nlet Promisify ( input:'t ) =\n    promise{ return Ok(input) }\n\n/// Fake a promise return type with success indicator\n// let Promisify ( input:string ) =\n//     promise{ return \"ok\",input}\n\n//Import node transliteration\ntype ITransliteration =\n    abstract transliterate : string -> string\n[<ImportAll(\"transliteration\")>]\nlet transliteration : ITransliteration = jsNative\n\n// Domain model: TODO move to separate file\n/// Endpoint configuration object\ntype Endpoints = \n    {\n        SRL : string\n        Coreference : string\n        DependencyParser : string\n        SentenceSplitter : string\n        TextualEntailment : string\n    }\n\n///////////////////////////////////////////////////////////////////////\n/// RESULTS\n\n///AllenNLP SRL verb\ntype SRLVerb =\n    {\n        verb : string\n        description : string\n        tags : string[]\n    }\n\n///AllenNLP SRL result\ntype SRL =\n    {\n        words : string[]\n        verbs : SRLVerb[]\n    }\n\n// type HierplaneTree =\n//     {\n//         linkToPosition : Map<string,string>\n//         nodeTypeToStyle : Map<string,string[]>\n//         text : string\n//     }\n\n///AllenNLP dependency parse result\ntype DependencyParse =\n    {\n        arc_loss : float\n        //TODO: we want to ignore this; it is redundant with other data\n        //hierplane_tree : HierplaneTree\n        loss : float\n        pos : string[]\n        predicted_dependencies : string[]\n        predicted_heads : int[]\n        tag_loss : float\n        words : string[]\n    }\n\n///AllenNLP coreference result. At the document level only.\ntype Coreference =\n    {\n        /// A list of clusters. A cluster is a list of spans. A span is a tuple of onset/offset word indices for the mention (allen uses list instead of tuple)\n        clusters : int[][][]\n        /// A flat array of words in the document, used to associate indices in the spans with word tokens\n        document : string[]\n        /// UNUSED. For each top span, the index of the most likely antecedent, with -1 representing none\n        predicted_antecedents : int[]\n        /// UNUSED. spans that survived pruning. A span is a tuple of onset/offset word indices for the mention (allen uses list instead of tuple)\n        top_spans : int[][]\n    }\n\n///Coreference information remaped to the sentence level\ntype SentenceCoreference =\n    {\n        ///offset into the document, useful for indexing back into clusters\n        offset: int\n        ///start/stop word in sentence normalized to sentence indices\n        spans : int[][]\n        ///for each span, the id of chain; maps to CoreferenceResult clusters\n        clusters : int[]\n    }\n\n///Sentence level annotation combining  annotations from all NLP services\ntype SentenceAnnotation = \n    {\n        /// Position in text\n        id : int\n        /// Arbitrary tags assigned to annotation, e.g. source information\n        tags : string[]\n        sen : string\n        srl : SRL\n        dep : DependencyParse\n        cor : SentenceCoreference\n    }\n\n///Document level annotation combining annotations from all NLP services\ntype DocumentAnnotation = \n    {\n        sentences : SentenceAnnotation[]\n        coreference : Coreference\n    } with\n    static member CreateEmpty() = { sentences = [||] ; coreference = !!null }\n\ntype Entailment =\n    {\n        h2p_attention : float[][]\n        hypothesis_tokens : string[]\n        label_logits : float[]\n        label_probs : float[]\n        p2h_attention : float[][]\n        premise_tokens : string[]\n    } with\n    static member CreateEmpty() = { h2p_attention  = [||]; hypothesis_tokens = [||]; label_logits  = [||]; label_probs  = [||]; p2h_attention = [||]; premise_tokens = [||]; }\n\n\n///////////////////////////////////////////////////////////////////////\n/// REQUESTS\n\n/// AllenNLP request where a sentence is sent\ntype SentenceRequest =\n    {\n        sentence : string\n    }\n\n/// AllenNLP request where a document is sent\ntype DocumentRequest =\n    {\n        document : string\n    }\n/// Spacy request where text is sent\ntype TextRequest =\n    {\n        text : string\n        model : string\n    }\n\n//AllenNLP request where hypothesis and premise strings are sent\ntype EntailmentRequest =\n    {\n        hypothesis : string\n        premise : string\n    }\n\n///Endpoints for NLP services\nlet endpoints =\n    {\n        //http requires on-campus IP address\n        // SRL = \"http://141.225.12.235:8002/predict/semantic-role-labeling\"\n        // Coreference = \"http://141.225.12.235:8002/predict/coreference-resolution\"\n        // DependencyParser = \"http://141.225.12.235:8002/predict/dependency-parsing\"\n        // SentenceSplitter = \"http://141.225.12.235:8001/sents\"\n        SRL = \"https://allennlp.olney.ai/predict/semantic-role-labeling\"\n        Coreference = \"https://allennlp.olney.ai/predict/coreference-resolution\"\n        DependencyParser = \"https://allennlp.olney.ai/predict/dependency-parsing\"\n        SentenceSplitter = \"https://spacy.olney.ai/sents\"\n        TextualEntailment = \"https://allennlp.olney.ai/predict/textual-entailment\"\n        \n    }\n\n/// Function template for POSTs. \n/// We assume Promise will give better meteor compatibility. \n/// ~~Passing in the encoding to avoid CORS preflight on spacy.~~\n// let PostAPI (input:obj) endpoint encoding =\n    // promise { do! Promise.sleep 500 } |> Promise.start //attempted throttle\n    // async {\n    //     do! Async.Sleep 200 //attempted throttle\n    //     let requestData = input |> toJson \n    //     let! response = \n    //         Http.request endpoint\n    //         |> Http.method POST\n    //         |> Http.content (BodyContent.Text requestData)\n    //         |> Http.header (Headers.contentType encoding)\n    //         |> Http.send\n    //     return response.statusCode,response.responseText\n    // }\n    // |> Async.StartAsPromise\n    // promise {\n    //     return! Fetch.post( endpoint, input, caseStrategy = SnakeCase)\n    // }\n    \n///Get coreferences from AllenNLP\nlet GetCoreference( input: string ) : JS.Promise<Result<Coreference,FetchError>> =\n    // PostAPI { document = input } endpoints.Coreference \"application/json\"\n    promise {\n        return! Fetch.tryPost( endpoints.Coreference , { document = input }, caseStrategy = SnakeCase)\n    }\n\n///Get SRL from AllenNLP.\nlet GetSRL( input: string ) : JS.Promise<Result<SRL,FetchError>> =\n    // PostAPI { sentence = input } endpoints.SRL \"application/json\"\n    promise {\n        return! Fetch.tryPost( endpoints.SRL , { sentence = input }, caseStrategy = SnakeCase)\n    }\n\n///Get a parse from AllenNLP.\nlet GetDependencyParse( input: string ) : JS.Promise<Result<DependencyParse,FetchError>> =\n    // PostAPI { sentence = input } endpoints.DependencyParser \"application/json\"\n    promise {\n        return! Fetch.tryPost( endpoints.DependencyParser , { sentence = input }, caseStrategy = SnakeCase)\n        // return! Fetch.tryPost( endpoints.DependencyParser , input, properties = [Fetch.Types.RequestProperties.Mode Fetch.Types.RequestMode.Cors], caseStrategy = SnakeCase)\n        \n    }\n\n///Get split sentences from Spacy. HACK: passing in this encoding to avoid CORS preflight \nlet GetSentences( input: string ) : JS.Promise<Result<string[],FetchError>> =\n    // PostAPI { text = input; model = \"en\" } endpoints.SentenceSplitter \"text/plain\"\n    promise {\n        // return! Fetch.tryPost( endpoints.SentenceSplitter , input, properties = [Fetch.Types.RequestProperties.Mode Fetch.Types.RequestMode.Cors], headers = [Fetch.Types.HttpRequestHeaders.ContentType \"text/plain\"], caseStrategy = SnakeCase)\n        // return! Fetch.tryPost( endpoints.SentenceSplitter , input, properties = [Fetch.Types.RequestProperties.Mode Fetch.Types.RequestMode.Cors], caseStrategy = SnakeCase)\n        return! Fetch.tryPost( endpoints.SentenceSplitter , { text = input; model = \"en\" }, caseStrategy = SnakeCase)\n    }\n\n///Call services with sentences to generate a seq of promises; remap to promise of seq\nlet GetForSentences (service: string -> JS.Promise<Result<'t,FetchError>>) (sentences:string[]) =\n    sentences \n    |> Seq.map( fun sentence -> sentence |> service )\n    |> Promise.all\n\n///Get a textual entailment from AllenNLP.\nlet GetTextualEntailment( premise: string ) (hypothesis :string): JS.Promise<Result<Entailment,FetchError>> =\n    promise {\n        return! Fetch.tryPost( endpoints.TextualEntailment, { hypothesis = hypothesis; premise=premise }, caseStrategy = SnakeCase)       \n    }\n\n\nlet RegexReplace (pattern : string) (replacement:string) (input:string) =\n    System.Text.RegularExpressions.Regex.Replace( input, pattern, replacement )\n    \nlet Split ( pattern : char ) (input: string) = input.Split( pattern \n)\n///Per sentence text cleaning. NOTE regexes are A&P specific!\nlet CleanText input =\n    input \n    |> RegexReplace \"Page[ 0-9]+\" \"\"\n    |> RegexReplace \"\\(fig[^\\)]+\\)\" \"\"\n    |> RegexReplace \"\\(see[^\\)]+\\)\" \"\"\n    |> RegexReplace \"\\(note[^\\)]+\\)\" \"\"\n    |> RegexReplace \"\\([^\\)]+\\)\" \"\" //This one is a bit strong: we remove ALL parenthetical material (creates a mess with cloze)\n    //These two added by request; similarly are very strong like the above\n    |> RegexReplace \"\\[[^\\]]+\\]\" \"\" //This one is a bit strong: we remove ALL parenthetical material (creates a mess with cloze)\n    |> RegexReplace \"\\{[^\\}]+\\}\" \"\" //This one is a bit strong: we remove ALL parenthetical material (creates a mess with cloze)\n    |> RegexReplace \"\\s+\" \" \"\n    |> RegexReplace \" \\.$\" \".\" //replacements leave spaces before final period\n    //TODO: possible replacement for above\n    // |> RegexReplace \"\\s+([\\.\\?!;,])\" \"$1\" //replacements leave spaces before final punctuation\n    |> transliteration.transliterate\n\n/// Call all NLP functions either for a JSON array of text, where each element represents a semantic grouping \n/// (i.e. chapter section) of the same type, OR for a single piece of text. If both are passed, chunks have priority.\n/// Service failures create meaningful error messages and stop execution.\nlet GetNLP( stringArrayJsonOption : string option ) ( inputText : string )=\n    promise {\n        let chunks = \n            match stringArrayJsonOption with\n            | Some( chunksJson ) -> chunksJson |> ofJson<string[]>\n            //treat inputText as a single chunk\n            | None -> [| inputText |]\n\n        //Each chunk is a collection of sentences\n        let! chunkSentenceResults = \n            chunks\n            |> Array.map( fun chunk -> chunk |> CleanText |> GetSentences  ) //|> Promise.map( snd >> ofJson<string[]> ) )\n            |> Promise.all\n        \n        //check result (better way to do this? railway oriented or computation expressions?)\n        let allOK (resultsArr : Result<'t,'e>[] ) = resultsArr |> Array.forall( fun r -> match r with | Ok(r) -> true | Error(e) -> false )\n        let resultsToType (resultsArr : Result<'t,'e>[] )  = resultsArr |> Array.choose( fun r -> match r with | Ok(r) -> Some(r) | Error(_) -> None ) \n        let resultsToError (resultsArr : Result<'t,'e>[] )  = resultsArr |> Array.choose( fun r -> match r with | Ok(r) -> None | Error(e) -> Some(e) ) \n\n        if chunkSentenceResults |> allOK then\n            //create lists of tags and sentences\n            let tags,sentences = \n                //generate tag tuples from chunks, using chunk position as id\n                chunkSentenceResults\n                |> resultsToType\n                |> Array.mapi ( fun i chunk -> \n                    chunk |> Array.map( fun sen -> \n                        [| \"orderGroup:\" + i.ToString() |] ,sen  ) //053120 camelcased OrderGroup\n                ) \n                |> Array.collect id //flatten to single list of sentences\n                |> Array.unzip // unzip to parallel lists of tags and sentences\n\n            //call other services and check for errors before proceeding\n            let! corResult = sentences |> String.concat \" \" |> GetCoreference\n            let! srlResults = sentences |> GetForSentences GetSRL\n            let! depResults = sentences |> GetForSentences GetDependencyParse\n\n            //if no errors\n            if [| corResult |] |> allOK && srlResults |> allOK && depResults |> allOK then\n                \n                let cor = [| corResult |] |> resultsToType |> Array.head\n                let srls = srlResults |> resultsToType\n                let deps = depResults |> resultsToType\n\n                //map to first token id of span, entire span, and cluster index\n                let tokenIdCorefMap =\n                    cor.clusters\n                    |> Seq.mapi( fun i c -> \n                        c |> Seq.map( fun span -> span.[0],(span,i ))\n                    )\n                    |> Seq.collect id\n                    |> Map.ofSeq\n\n                //construct the composite NLP object for each sentence\n                let sentenceAnnotations = \n                    seq {\n                        let mutable wordIndexOffset = 0\n                        for i = 0 to sentences.Length - 1 do\n                            let srl = srls.[i] \n                            let dep = deps.[i]\n                            //map the corefs to this particular sentence by checking if each word is in a coref span\n                            let spans = ResizeArray<int[]>()\n                            let clusters = ResizeArray<int>()\n                            for j = 0 to srl.words.Length - 1 do\n                                match tokenIdCorefMap.TryFind( j + wordIndexOffset ) with\n                                | Some(span,clusterIndex) ->\n                                    spans.Add( [| span.[0] - wordIndexOffset; span.[1] - wordIndexOffset |] ) //offset indices to zero for sentence\n                                    clusters.Add( clusterIndex )\n                                | None -> ()\n\n                            yield { id=i; tags = tags.[i]; sen=sentences.[i] ; srl=srl; dep=dep; cor={offset=wordIndexOffset; spans=spans.ToArray();clusters=clusters.ToArray()} }\n\n                            wordIndexOffset <- wordIndexOffset + srl.words.Length //all services should agree on tokens in sentence, so using srl here is arbitrary\n\n                    }\n                    |> Seq.toArray\n\n                let documentAnnotation = { sentences=sentenceAnnotations; coreference=cor}\n                //return \"ok\",documentAnnotation |> toJson \n                return Ok(documentAnnotation)\n                 \n            //we have errors in cor/dep/srl\n            else\n                //collect all errors; avoid duplicates\n                let errorPayload = ResizeArray<string>()\n                errorPayload.AddRange( [| corResult |] |> resultsToError |> Array.map (sprintf \"coreference error: %A\") |> Array.distinct )\n                errorPayload.AddRange( srlResults |> resultsToError |> Array.map (sprintf \"srl error: %A\") |> Array.distinct )\n                errorPayload.AddRange( depResults |> resultsToError |> Array.map (sprintf \"dependency parse error: %A\") |> Array.distinct )\n                //return \"error\", errorPayloads |> String.concat \"\\n\"\n                return Error(errorPayload |> String.concat \"\\n\")\n        //we have errors in sentence\n        else\n            let errorPayload = (chunkSentenceResults |> resultsToError |> Array.map (sprintf \"sentence split error: %A\") |> Array.distinct )\n            //return \"error\", formattedErrors |> String.concat \"\\n\"\n            return Error(errorPayload |> String.concat \"\\n\")\n    }\n\n///////////////////////////////////////////////////////////////////////\n/// Post processing\n/// ///////////////////////////////////////////////////////////////////\n/// Match a non-word character preceeded by a space and followed by whitespace\nlet prePunctuationSpaceRegex = System.Text.RegularExpressions.Regex(@\" ([^\\w\\s]+)\")\n/// Remove pre punctuation spaces using regular expression\nlet removePrePunctuationSpaces ( input : string ) =\n    prePunctuationSpaceRegex.Replace(input, \"$1\")\n\n/// Use the dependency collapser to simplify dependencies\nlet collapseDependencies (sa : SentenceAnnotation) = \n    let ruleTokens = \n        sa.dep.words \n        |> Array.mapi( fun i w -> \n            DependencyCollapser.Rules.Token.Create( i, w, sa.dep.pos.[i], sa.dep.predicted_dependencies.[i], sa.dep.predicted_heads.[i])\n        ) |> Array.toList\n\n    let dependencies, dependenciesCC = DependencyCollapser.Collapser.CollapseTokens( ruleTokens )\n    //\n    dependenciesCC\n\n/// Get a list of dependent indices from start index (0-base index)\nlet getDependentIndices ( start : int ) ( sa : SentenceAnnotation ) =\n    let dependents = ResizeArray<int>()\n    for i = 0 to sa.dep.predicted_heads.Length - 1 do\n        //predicted_heads are 1-base indexed\n        let mutable hbar = sa.dep.predicted_heads.[i] - 1\n        //walk predicted heads until we either match the start index or bottom out in ROOT (-1)\n        while hbar <> start && hbar <> -1 do\n            hbar <- sa.dep.predicted_heads.[hbar] - 1\n        //add where we stopped as a dependency only if it is a dependent of start or start itself\n        if hbar = start || i = start then dependents.Add(i)\n    //if copula, then predicate is root but we don't want the whole sentence; HACK: chop off everything including copula\n    if sa.dep.predicted_heads.[start] = 0 && not <| sa.dep.pos.[start].StartsWith(\"VB\") then \n        //find copula index (if it exists)\n        let copulaIndex = dependents |> Seq.mapi( fun i d -> i,d ) |> Seq.tryFindIndex( fun (i,d) -> sa.dep.predicted_dependencies.[i] = \"cop\" )\n        match copulaIndex with\n        //do not allow copula to be the last word; get everything after copula\n        | Some(i) when i < dependents.Count - 1 -> dependents |> Seq.skip 1 |> Seq.toArray\n        | _ -> Array.empty\n\n        // dependents |> Seq.mapi( fun i d -> i,d ) |> Seq.skipWhile( fun (i,d) -> sa.dep.predicted_dependencies.[i] <> \"cop\" ) |> Seq.skip 1 |> Seq.map snd |> Seq.toArray\n        \n    else\n        dependents.ToArray()\n\n/// Convert SRL BIO tags to a map with key as tag without BIO prefix and value a list of tag/index tuples for that tag\nlet srlArgToIndexMap (srlTags : string[]) =\n    srlTags \n    |> Array.mapi( fun i t -> t.Substring( t.IndexOf(\"-\") + 1 ),i)\n    |> Array.groupBy fst\n    |> Map.ofArray\n\nlet srlArgToIndexMapWithCollapsedReferents (srlTags : string[]) =\n    srlTags \n    |> Array.mapi( fun i t -> \n        //absorb referents, e.g. R-ARG0, into their arguments\n        t.Substring( t.LastIndexOf(\"-\") + 1 ),i )\n    |> Array.groupBy fst\n    |> Map.ofArray\n\n// NOTE: A more direct, though simplified, version of CGA3 follows\n/// Get the subject predicate index of the parse\n/// Had to modify from LTH b/c of different formalism\n/// NSUBJ seems pretty reliable but can sometimes be WH: It was John who (nsubj) came ; in this case \"It\" is chosen\n/// OLD method backed off to first noun in sentence on failure; for now we prefer to fail without a kludge\nlet getSubjectIndex ( sa : SentenceAnnotation ) = \n    let rootIndex = sa.dep.predicted_heads |> Array.findIndex( fun h -> h = 0) //assuming there is always a root...\n    //the first nsubj preceding the root\n    sa.dep.predicted_dependencies.[0 .. rootIndex] |> Array.tryFindIndexBack( fun h -> h.StartsWith(\"nsubj\") ) //allow for nsubjpass\n\n/// Returns the index of a \"be\" or copular verb when it can be viewed as the root (anti Stanford, which views copular complement as root)\n/// This check subsumes verb chaining because verb chains are broken and otherwise marked as \"aux\" rather than \"cop\"\nlet getBeRootIndex ( sa : SentenceAnnotation ) =\n    let rootIndex = sa.dep.predicted_heads |> Array.findIndex( fun h -> h = 0) //assuming there is always a root...\n    //the first copular child of the root\n    sa.dep.predicted_heads \n    |> Array.tryFindIndex( fun h -> h = rootIndex && sa.dep.predicted_dependencies.[h] = \"cop\" )\n\n/// Returns the first aux for inversion; e.g. John has been eating pie -> What has John been eating?\nlet getInvertAuxIndex ( sa : SentenceAnnotation ) =\n    let rootIndex = sa.dep.predicted_heads |> Array.findIndex( fun h -> h = 0) //assuming there is always a root...\n    //the first copular child of the root\n    sa.dep.predicted_heads \n    |> Array.tryFindIndex( fun h -> h = rootIndex && sa.dep.predicted_dependencies.[h] = \"aux\" )\n\n/// Get the root predicate index of the parse\n/// Had to modify from LTH b/c of different formalism\n/// If ROOT is VB, then take first ~~DOBJ~~ leftmost dependent of ROOT : John kissed (root) Mary (dobj) on the head\n/// If ROOT is anything else, then take ROOT: It was John (root) who came ; Sally was happy (root) to see her\nlet getPredicateIndex ( sa : SentenceAnnotation ) = \n    let rootIndex = sa.dep.predicted_heads |> Array.findIndex( fun h -> h = 0) //assuming there is always a root...\n    if sa.dep.pos.[rootIndex].StartsWith(\"VB\") then\n        //the first child of the verb that is a dobj (starting from the beginning shouldn't matter)\n        sa.dep.predicted_heads \n        //make zero indexed\n        |> Array.mapi( fun i h -> i,h - 1)\n        |> Array.tryFindIndex( fun (i,h) -> h = rootIndex && i > rootIndex  )\n        // restricting to dobj seems too limiting\n        // |> Array.tryFindIndex( fun (i,h) -> h = rootIndex && sa.dep.predicted_dependencies.[i] = \"dobj\" )\n    else\n        rootIndex |> Some //NOTE: SPAN WILL DOMINATE S\n\n/// Get all object indices. Follows logic of getPredicateIndex\nlet getObjectIndices ( sa : SentenceAnnotation ) = \n    let rootIndex = sa.dep.predicted_heads |> Array.findIndex( fun h -> h = 0) //assuming there is always a root...\n    if sa.dep.pos.[rootIndex].StartsWith(\"VB\") then\n        //the first child of the verb that is a dobj (starting from the beginning shouldn't matter)\n        sa.dep.predicted_heads \n        //make zero indexed\n        |> Array.mapi( fun i h -> i,h - 1)\n        |> Array.filter( fun (i,h) -> \n            // h = rootIndex && //this would require them to be children of ROOT\n            (sa.dep.predicted_dependencies.[i] = \"dobj\" || sa.dep.predicted_dependencies.[i]  = \"iobj\" ) )\n        |> Array.map( fun (i,h) -> Some <| i)\n        // |> Array.map snd\n    else\n        Array.empty\n\n/// Get the root of the span as the leftmost token whose root is outside the span.\nlet getRootOfSpan ( start : int) (stop : int) ( sa : SentenceAnnotation ) = \n    //make zero indexed, because start/stop are\n    let spanHeads = sa.dep.predicted_heads.[start..stop] |> Array.map( fun h -> h - 1)\n    let spanHeadIndex = spanHeads |> Array.findIndex( fun h -> h  < start || h  > stop ) \n    start + spanHeadIndex //offset\n\n/// Get referent label that best represents coreferents in chain\nlet resolveReferents ( da : DocumentAnnotation ) =\n    //Map from cluster id to all sentences with that cluster\n    let clusterSentenceMap =\n        da.sentences\n        |> Array.mapi( fun i s -> \n            s.cor.clusters\n            |> Array.mapi( fun j c -> c,i,j )\n            )\n        |> Array.collect id\n        // |> Array.distinct\n        |> Array.groupBy( fun (c,_,_) -> c )\n        |> Map.ofArray\n\n    let demonstrativeRegex = System.Text.RegularExpressions.Regex( \"(this|that|these|those)\", System.Text.RegularExpressions.RegexOptions.IgnoreCase )\n    //A span is pronominal if it starts with a PTB pronoun or a manual demonstrative pronoun\n    let spanIsPronominal (sa : SentenceAnnotation ) ( span : int[] ) =\n        sa.dep.pos.[  span.[0] ].StartsWith(\"PRP\") ||\n        demonstrativeRegex.IsMatch( sa.dep.words.[  span.[0] ] )\n\n    //We could try to \"splice\" a new sentence annotation using the original and resolved referent, but \n    //it seems safer to stick to the word level and then reparse to get annotations as needed unless performance becomes a concern\n    let resolvedSentences =\n        da.sentences\n        |> Array.map( fun sa -> \n            //for each cluster, \n            //get the associated sentences and spans; \n            //determine the span that best represents the coreferents in the chain using POS; replace tokens with that\n            let clusterReferents =\n                sa.cor.clusters\n                |> Array.map( fun clusterId -> \n                    //Nominal referent phrases for this cluster; may be empty\n                    let nominalReferents = \n                        clusterSentenceMap.[clusterId] \n                        |> Array.map( fun (_,sentenceId,spanId)-> (sentenceId,spanId) )\n                        |> Array.sortBy fst\n                        |> Array.choose( fun (sentenceId,spanId) ->\n                            //span is [start; stop]\n                            let span =  da.sentences.[sentenceId].cor.spans.[spanId]\n                            //check if any one element in the span is a noun\n                            // let hasNoun = da.sentences.[sentenceId].dep.pos.[ span.[0] .. span.[1] ] |> Array.exists( fun pos -> pos.StartsWith(\"NN\") )\n                            //if the span contains a noun, return the associated words\n                            // if hasNoun then\n                            //     Some(da.sentences.[sentenceId].dep.words.[ span.[0] .. span.[1] ] |> String.concat \" \" )\n                            // else\n                            //     None\n                            // as above, but preserve the sentence id to do locality-sensitive resolution\n                            if spanIsPronominal da.sentences.[sentenceId] span then\n                                None\n                            else\n                                Some(sentenceId, da.sentences.[sentenceId].dep.words.[ span.[0] .. span.[1] ] |> String.concat \" \" )\n                        )\n                    //Return the earliest nominal referent for this chain as the resolved referent (this is OK for short chains, but for long chains with any error, does not work well)\n                    //nominalReferents |> Array.tryHead\n\n                    //Display all possibilities. Difficult to read for long chains\n                    //nominalReferents |> String.concat \"+\" |> Some\n                    //Display all possibilities, counting duplicates. Helps but still hard to read\n                    // nominalReferents |> Array.countBy id |> sprintf \"%A\" |> Some\n\n                    // Return the most often occuring referent in the chain. Ok for short chains, but for long chains with any error does not work well.\n                    // match nominalReferents |> Array.countBy id with\n                    // | [||]-> None\n                    // | x -> x |> Array.maxBy snd |> sprintf \"%A\" |> Some\n\n                    // Return the closest preceeding referent (locality-sensitive resolution)\n                    match nominalReferents with\n                    | [||]-> None\n                    | x -> \n                        match x |> Array.sortBy fst |> Array.tryFindBack( fun (i,w) -> i < sa.id ) with //Could allow equality in case best referent is already within the sentence, but this seems to introduce more errors than not\n                        | None -> None\n                        | Some(_,w) -> Some(w)\n                   \n                )\n            // Transform the original sentence by splicing in these referents -> IFF span does not contain nominal AND referent is Some\n            let indexedWords = sa.dep.words |> Array.copy \n            for i = 0 to sa.cor.spans.Length - 1 do\n                // has noun is not enough; does not address cases like \"this system\"\n                // let spanHasNoun = sa.dep.pos.[  sa.cor.spans.[i].[0] ..  sa.cor.spans.[i].[1] ] |> Array.exists( fun pos -> pos.StartsWith(\"NN\") )\n                // let spanPronominal = \n                //     sa.dep.pos.[  sa.cor.spans.[i].[0] ].StartsWith(\"PRP\") ||\n                //     demonstrativeRegex.IsMatch( sa.dep.words.[  sa.cor.spans.[i].[0] ] )\n\n                let originalWords = sa.dep.words.[  sa.cor.spans.[i].[0] ..  sa.cor.spans.[i].[1] ] |> String.concat \" \"\n                // if we have a clusterReferent for this span\n                if spanIsPronominal sa sa.cor.spans.[i] && clusterReferents.[i].IsSome then\n                    // replace the first word of span with clusterReferent (which could be multiword)\n                    indexedWords.[ sa.cor.spans.[i].[0] ] <- clusterReferents.[i].Value\n                    //for debugging, see original + alternatives\n                    // indexedWords.[ sa.cor.spans.[i].[0] ] <- \"(\" + originalWords + \"|\" + clusterReferents.[i].Value + \")\"\n                    // blank out the remaining words in the span\n                    for j = sa.cor.spans.[i].[0] + 1 to sa.cor.spans.[i].[1] do //TODO check end inclusive\n                        indexedWords.[ j ] <- \"\"\n                // if there is no cluster referent, keep the original words\n                else\n                    ()\n\n            // Return the indexed words as a string, without blanks\n            indexedWords \n            |> Array.filter( fun w -> w.Length > 0 ) \n            |> String.concat \" \" \n            |> removePrePunctuationSpaces\n            |> String.mapi( fun i c -> match i with | 0 -> (Char.ToUpper(c)) | _ -> c) //uppercase first letter as needed\n\n        )\n    //\n    resolvedSentences\n\n/// All in one that parses text and resolves reference\nlet ResolveTextReferents ( inputText : string ) =\n    promise {\n        //Get a DocumentAnnotation if one wasn't passed in\n        let! nlpResult = GetNLP None inputText \n\n        match nlpResult with\n        | Ok(da) ->\n            let resolvedSentences = da |> resolveReferents\n            return Ok( {|resolvedSentences = resolvedSentences; documentAnnotation = da|} ) //NOTE: anonymous type\n        | Error(e) -> \n            return Error(e)\n    }","module WordFrequency\n\n//Using the word frequencies for Wikipedia (see /z/aolney/research_projects/mofacts/materials/tdf-generation-beaker/cloze-generation-082719.bkr for method)\nlet wordFreqMap = [|(\"the\",0.0805854134881808);(\"of\",0.0381096988567777);(\"and\",0.0329853552460121);(\"in\",0.0328764503587471);(\"to\",0.0229927483276194);(\"was\",0.0140826017148829);(\"is\",0.011094026984114);(\"for\",0.00952816172595378);(\"on\",0.00932255559362018);(\"as\",0.0092245515874777);(\"with\",0.00813688394909603);(\"by\",0.00801178866321841);(\"he\",0.00718561650862141);(\"that\",0.00642723193848243);(\"at\",0.00627331100922593);(\"from\",0.00598754609936312);(\"his\",0.00563267546746406);(\"it\",0.00531120154252468);(\"an\",0.00440607315908205);(\"were\",0.00373758228438705);(\"which\",0.00340014065503572);(\"are\",0.00339969049461581);(\"this\",0.00292735609500621);(\"also\",0.0028897451654111);(\"be\",0.0027853312778595);(\"had\",0.00270221066746144);(\"or\",0.00267458067985041);(\"has\",0.00266275561779512);(\"first\",0.00256645045026914);(\"their\",0.00230086216521082);(\"after\",0.00222909100568235);(\"its\",0.00222436034459109);(\"one\",0.00220118158987192);(\"new\",0.00214180389283471);(\"but\",0.0021011505362791);(\"who\",0.00207843837893275);(\"her\",0.00205032270587456);(\"not\",0.00203044035554951);(\"she\",0.0020220803092117);(\"they\",0.00197789671935127);(\"have\",0.00186764029037795);(\"two\",0.00181088720356286);(\"been\",0.00172511176015831);(\"other\",0.00159302387637983);(\"when\",0.00152220340899848);(\"during\",0.00148089045342947);(\"all\",0.00139178308060354);(\"into\",0.00136152158985466);(\"there\",0.00135400566058223);(\"time\",0.0013327367737459);(\"may\",0.0012549730193224);(\"more\",0.00122294906304254);(\"school\",0.00121639018860868);(\"years\",0.00118327980276416);(\"over\",0.00115581524513077);(\"only\",0.00111987770338637);(\"would\",0.00111481989390985);(\"later\",0.00108777739480915);(\"most\",0.00108536646497481);(\"where\",0.00108307801695084);(\"between\",0.00107905785640455);(\"some\",0.00103254074945573);(\"up\",0.00103232759929224);(\"world\",0.00101727294110302);(\"city\",0.00100910271506007);(\"national\",0.00100543091187054);(\"about\",0.0009877394483006);(\"such\",0.000982594682040961);(\"him\",0.000981930841233266);(\"then\",0.000978523619963097);(\"made\",0.000975612688625839);(\"out\",0.000970460499226177);(\"state\",0.000970148197120959);(\"three\",0.00096435231543652);(\"while\",0.000959277008558516);(\"used\",0.000955764802879463);(\"university\",0.000947299241908485);(\"can\",0.000938452979899228);(\"united\",0.000935235048699624);(\"under\",0.000927531420029491);(\"known\",0.000920946034381267);(\"season\",0.000914736577752736);(\"many\",0.0009120250107475);(\"year\",0.000906453944160875);(\"part\",0.000893980948026508);(\"became\",0.000891922617343223);(\"born\",0.000880321309937172);(\"film\",0.000879709431109632);(\"these\",0.000873987780825413);(\"than\",0.000871761899267342);(\"team\",0.000868257116728311);(\"no\",0.000861338750227664);(\"second\",0.000860168015001313);(\"including\",0.000839616521625695);(\"states\",0.000838647801852804);(\"being\",0.000832989778483062);(\"through\",0.000824965894343401);(\"before\",0.000818615928278737);(\"both\",0.000818000868105473);(\"american\",0.000814490253099281);(\"south\",0.000797743649209304);(\"early\",0.000794351804443467);(\"war\",0.000792951482100717);(\"history\",0.000772010804098223);(\"against\",0.000766327860186977);(\"however\",0.000763439728494073);(\"family\",0.000763183099939021);(\"until\",0.000748187826869984);(\"well\",0.000745903090416023);(\"since\",0.000738634775885761);(\"them\",0.000728510143119831);(\"work\",0.000725514906120892);(\"life\",0.000718818173372336);(\"following\",0.000718816052475186);(\"area\",0.000718031320529987);(\"people\",0.000717785296460682);(\"series\",0.000713906175574819);(\"north\",0.000704594906865603);(\"name\",0.000704065212802594);(\"career\",0.000693164861904349);(\"album\",0.000684521675797126);(\"music\",0.000681831317763383);(\"played\",0.000681183383684307);(\"group\",0.000678826536727273);(\"district\",0.000673750699624982);(\"number\",0.000670268716730305);(\"several\",0.000666899671608822);(\"high\",0.000666096912037855);(\"released\",0.000656694444751223);(\"county\",0.000655175352168118);(\"de\",0.000654084680809149);(\"company\",0.0006370363792997);(\"called\",0.000624516723428051);(\"will\",0.000623055955516549);(\"league\",0.000621731985471169);(\"won\",0.000613707571107222);(\"four\",0.000603123764108494);(\"house\",0.000602482722945152);(\"government\",0.000598274863001166);(\"each\",0.000588632734336676);(\"march\",0.000579958264996503);(\"same\",0.000574423253661413);(\"game\",0.000573438627159903);(\"international\",0.000572405750248249);(\"september\",0.000569547311115433);(\"january\",0.000563843688456983);(\"club\",0.00055965279569019);(\"found\",0.000558361169326336);(\"june\",0.000557166574007056);(\"october\",0.000554187773961024);(\"began\",0.000551107701076117);(\"located\",0.000550907276295519);(\"july\",0.000548209495121754);(\"so\",0.000547800692196248);(\"west\",0.00054712571667852);(\"use\",0.000545655934954133);(\"august\",0.000539579564621714);(\"now\",0.000539423678681248);(\"college\",0.000536537667885493);(\"john\",0.000536134697427147);(\"station\",0.000535158024289947);(\"population\",0.000530911457972988);(\"april\",0.000528805407103846);(\"public\",0.000527949625104149);(\"home\",0.000524941132498028);(\"end\",0.000522059893720858);(\"november\",0.000521592766123749);(\"member\",0.000518482470454467);(\"place\",0.000517227959790723);(\"general\",0.000516970801011384);(\"town\",0.000516513747675735);(\"former\",0.000513956475938103);(\"december\",0.000513887546780754);(\"church\",0.000509046068813449);(\"if\",0.000507114991959114);(\"age\",0.000501956970092292);(\"held\",0.000501127169082673);(\"named\",0.000497689194803842);(\"system\",0.000496898100167195);(\"because\",0.000496489297241689);(\"york\",0.000493477093065557);(\"took\",0.000491397023186492);(\"day\",0.00048714727552381);(\"river\",0.000486681738599563);(\"around\",0.000486051832146255);(\"football\",0.000482392754339621);(\"british\",0.000481964863339772);(\"line\",0.000481101127975766);(\"east\",0.000479386912854936);(\"local\",0.000479033783479596);(\"any\",0.000478428267343503);(\"song\",0.000471424004508315);(\"due\",0.000467171605724196);(\"along\",0.000464988672333395);(\"service\",0.000464427164813148);(\"party\",0.000464197047472461);(\"best\",0.000463394818125782);(\"february\",0.000462897997968585);(\"served\",0.000462418675212868);(\"did\",0.000462338611345487);(\"back\",0.000461918673709948);(\"another\",0.000460033726368608);(\"based\",0.000458557051728487);(\"could\",0.000457842839613498);(\"within\",0.000457039549818244);(\"received\",0.000456984936716652);(\"century\",0.000455054390086605);(\"village\",0.0004542866253186);(\"built\",0.000452307298054121);(\"like\",0.000445806218067577);(\"members\",0.000442993908447756);(\"building\",0.00044250663232773);(\"major\",0.000441876725874422);(\"final\",0.000439980643823049);(\"show\",0.000437657731220402);(\"games\",0.000431418582031782);(\"although\",0.000429682627715173);(\"include\",0.000429170961277932);(\"species\",0.000428888351732803);(\"death\",0.000428629072056315);(\"band\",0.00042330296909042);(\"small\",0.000420984298282072);(\"main\",0.000419298715272755);(\"left\",0.000418754174929702);(\"president\",0.000417833175342668);(\"said\",0.000410327320331696);(\"published\",0.000410256270277198);(\"died\",0.000409887764397527);(\"large\",0.000406864955735649);(\"last\",0.000404735574997866);(\"five\",0.000403698986516201);(\"order\",0.000403439706839713);(\"st\",0.000403380321719535);(\"single\",0.000403035145708505);(\"set\",0.000402652323773077);(\"third\",0.000402531962859861);(\"own\",0.000402097709168565);(\"those\",0.000401519764695411);(\"education\",0.000400289644348883);(\"according\",0.00039775623270418);(\"included\",0.000394598216849041);(\"long\",0.000391939672272536);(\"very\",0.000391023444704087);(\"park\",0.000389926940877957);(\"still\",0.000388046765555204);(\"road\",0.000384685143573743);(\"army\",0.000381799132777987);(\"division\",0.000380841017490842);(\"book\",0.000380431154116762);(\"development\",0.000380026592985554);(\"among\",0.000374420531595967);(\"law\",0.000371565273808874);(\"often\",0.000369838863529437);(\"french\",0.00036244382539451);(\"moved\",0.000362276804744012);(\"times\",0.000362239689043901);(\"what\",0.00036000002165436);(\"community\",0.000359679766184833);(\"central\",0.000358972446985579);(\"led\",0.000358099167584401);(\"english\",0.000356530233918291);(\"original\",0.000355610825004118);(\"old\",0.000354820260591759);(\"son\",0.000353633618636789);(\"children\",0.000353493109200655);(\"million\",0.000352193529472491);(\"different\",0.000351979318860423);(\"near\",0.000351685574605261);(\"just\",0.000350848880679907);(\"top\",0.000350264573515306);(\"late\",0.000349781539189579);(\"again\",0.000349472418430085);(\"water\",0.00034893211988133);(\"air\",0.000348825544799583);(\"great\",0.000347178137938952);(\"center\",0.000346309100332073);(\"form\",0.000346047699758436);(\"much\",0.000345744941690389);(\"research\",0.000344288415573186);(\"side\",0.000344168584884256);(\"us\",0.00034333242118319);(\"art\",0.000342533903406521);(\"court\",0.000341296359919971);(\"play\",0.000340703038942486);(\"down\",0.000340072072040603);(\"country\",0.000338350964004038);(\"off\",0.000337607589553248);(\"even\",0.000336202495191912);(\"council\",0.000335069936114246);(\"german\",0.000332157944328413);(\"street\",0.000331411918756186);(\"record\",0.000331011599419277);(\"power\",0.000330757091761375);(\"established\",0.000329801627595666);(\"ii\",0.000327303740978212);(\"london\",0.000327222086437968);(\"land\",0.000325991435867153);(\"cup\",0.000325120277363124);(\"having\",0.000323179656471619);(\"title\",0.000322327055817646);(\"started\",0.000322227903875921);(\"support\",0.000321967563750858);(\"political\",0.000321732674391586);(\"students\",0.000321321220344644);(\"award\",0.000321005736893702);(\"military\",0.000319956423029142);(\"period\",0.000319226304185535);(\"came\",0.00031919396050401);(\"went\",0.000317896501672995);(\"production\",0.000317626617510761);(\"white\",0.000316588438356234);(\"way\",0.000316424068827172);(\"given\",0.000314307413472284);(\"island\",0.000313399139268145);(\"make\",0.00031277824662772);(\"next\",0.000312587365884293);(\"role\",0.000312328086207805);(\"television\",0.000311556609869789);(\"king\",0.00031153274977686);(\"region\",0.000310786193980347);(\"works\",0.000309816943983168);(\"total\",0.000309099020298169);(\"championship\",0.000308893823498985);(\"using\",0.000308144616581035);(\"various\",0.000307901773857453);(\"head\",0.000307792017429982);(\"office\",0.00030639010441437);(\"six\",0.000306141429223628);(\"do\",0.000305418203295755);(\"player\",0.00030476814831953);(\"become\",0.00030352265146867);(\"father\",0.000302125510471643);(\"list\",0.000301887969990934);(\"business\",0.000301644597043065);(\"western\",0.00029993144237081);(\"produced\",0.000295668969325232);(\"director\",0.000294742137271037);(\"married\",0.000294550196079036);(\"program\",0.000294063450183297);(\"association\",0.000293675856229284);(\"england\",0.000293208198407888);(\"field\",0.000291881047016784);(\"worked\",0.000291838098849513);(\"election\",0.000290872030198059);(\"black\",0.00029041868843242);(\"department\",0.000288173188575719);(\"joined\",0.000288046995195342);(\"announced\",0.000287751660267318);(\"created\",0.000287616983298345);(\"point\",0.000286560246293763);(\"returned\",0.000284092582460684);(\"professional\",0.00028294199575725);(\"union\",0.000282917605440035);(\"written\",0.000282491835337335);(\"few\",0.000281181651123425);(\"you\",0.000280757471693588);(\"young\",0.000280248456377783);(\"without\",0.000279949409879748);(\"take\",0.000279846016143725);(\"described\",0.000279296173557798);(\"site\",0.000277779201871843);(\"royal\",0.000277013558000986);(\"services\",0.000276137627478372);(\"radio\",0.00027548492138071);(\"together\",0.000274900614216109);(\"social\",0.000274010897862025);(\"force\",0.000272708667012425);(\"northern\",0.000272146099043603);(\"per\",0.000271471123525875);(\"founded\",0.000271375152929874);(\"act\",0.000270665182609184);(\"though\",0.000270502403752984);(\"society\",0.000270228808020738);(\"wrote\",0.000269055421672951);(\"further\",0.000269011943281393);(\"women\",0.00026884386218232);(\"days\",0.000268838559939447);(\"lost\",0.000267501864511172);(\"continued\",0.000265750003465944);(\"design\",0.000265366651306228);(\"william\",0.00026431309564737);(\"every\",0.000264237273574286);(\"version\",0.000263764313510018);(\"project\",0.000263238331017019);(\"summer\",0.000262572899536462);(\"live\",0.000262437162118914);(\"men\",0.000262415422923135);(\"man\",0.000262088274537873);(\"european\",0.000261358685918553);(\"we\",0.000260914357965798);(\"southern\",0.000259308308599577);(\"position\",0.000258417531796918);(\"board\",0.000257667794654681);(\"india\",0.000256416995560948);(\"france\",0.000256372986945102);(\"round\",0.0002563146622735);(\"railway\",0.000255780726416192);(\"open\",0.000255565985579837);(\"level\",0.000255507660908234);(\"considered\",0.000254555378088249);(\"control\",0.000252836390948834);(\"opened\",0.00025227806477431);(\"run\",0.000251968413790529);(\"australia\",0.000250914858131671);(\"recorded\",0.000249899478621498);(\"important\",0.000249863953594249);(\"san\",0.000249801387128348);(\"once\",0.000247755781827957);(\"video\",0.000247239873596417);(\"california\",0.000245974758446928);(\"special\",0.000244758954156156);(\"win\",0.000244705931727427);(\"popular\",0.000244639653691515);(\"appeared\",0.000244500204703956);(\"match\",0.000243568070406888);(\"release\",0.000243275916824588);(\"common\",0.000243254177628809);(\"battle\",0.000242898397132033);(\"areas\",0.000242290229874503);(\"hall\",0.000241991713600755);(\"event\",0.000241758414914345);(\"working\",0.000241472624023492);(\"records\",0.00024055904757648);(\"james\",0.000240383013113097);(\"formed\",0.000240206978649715);(\"right\",0.000240067529662156);(\"playing\",0.000239557453897776);(\"see\",0.000238573887844841);(\"average\",0.000238118955406341);(\"others\",0.000238099337107711);(\"short\",0.000237862857075576);(\"similar\",0.000237633269959177);(\"teams\",0.000237500183663065);(\"elected\",0.000237070171766068);(\"george\",0.000236725525979325);(\"currently\",0.00023606168517163);(\"making\",0.000236003890724314);(\"example\",0.000235668788974743);(\"awards\",0.000235454578362675);(\"construction\",0.000235294450627911);(\"story\",0.000234602507932989);(\"living\",0.000234564862008591);(\"red\",0.000232926468960844);(\"originally\",0.000232744071806014);(\"debut\",0.000232436541719382);(\"race\",0.000232411621177879);(\"language\",0.000232385640187802);(\"forces\",0.000231923284609279);(\"lead\",0.000231760505753079);(\"la\",0.000231592424654006);(\"signed\",0.00023138563718196);(\"developed\",0.000231282773670225);(\"modern\",0.000231097725393958);(\"appointed\",0.000230849050203216);(\"case\",0.000230703768748497);(\"addition\",0.000230533036527987);(\"police\",0.000230180967601222);(\"wife\",0.000230037276819365);(\"result\",0.000229894116261795);(\"minister\",0.000229812461721551);(\"schools\",0.000229796554992932);(\"events\",0.000229131123512375);(\"america\",0.000227599835770662);(\"route\",0.000226130584270563);(\"little\",0.000225228142533584);(\"lake\",0.000224603538323149);(\"canada\",0.00022458179912737);(\"himself\",0.000224557408810154);(\"songs\",0.000224535139390088);(\"current\",0.000224470982251325);(\"upon\",0.000224019231158548);(\"how\",0.000223623153615937);(\"points\",0.000223578614775804);(\"rock\",0.000223326228015051);(\"present\",0.000223271084689172);(\"never\",0.000223180416336045);(\"free\",0.000222925908678142);(\"science\",0.000222162915928722);(\"information\",0.00022199854639966);(\"health\",0.00022176524771325);(\"training\",0.000221017101243874);(\"class\",0.000220754109997375);(\"throughout\",0.000220739793941618);(\"track\",0.000220257289840178);(\"good\",0.000218306594687214);(\"media\",0.000217803411838569);(\"museum\",0.000217020270566232);(\"across\",0.000215999588813186);(\"australian\",0.000215877637227108);(\"human\",0.000215281134903899);(\"census\",0.000215280604679612);(\"indian\",0.000213795446450894);(\"style\",0.000213403080478294);(\"personal\",0.000213369676348195);(\"love\",0.000212985793964192);(\"germany\",0.000212045176078528);(\"available\",0.000211812937840692);(\"province\",0.000211794910214924);(\"tour\",0.000211626298891563);(\"away\",0.000211328312842103);(\"eventually\",0.000210322477369101);(\"body\",0.000210281119874692);(\"despite\",0.000209405189352078);(\"eastern\",0.000209336790419016);(\"sold\",0.000208832547121797);(\"committee\",0.00020698047368627);(\"performance\",0.000206815573932921);(\"players\",0.000206536145733515);(\"features\",0.000205020764720422);(\"festival\",0.000204422141500064);(\"coach\",0.000204097644236238);(\"should\",0.000204064240106138);(\"return\",0.000203195732723547);(\"taken\",0.000203126273341911);(\"sea\",0.000202675582697709);(\"seven\",0.000202360099246767);(\"centre\",0.0002020122721143);(\"followed\",0.000201898273892532);(\"designed\",0.000201157020338891);(\"performed\",0.000200434324635306);(\"official\",0.00020040993431809);(\"david\",0.000200358502562222);(\"less\",0.000200231248733271);(\"gave\",0.000200127854997248);(\"months\",0.00019964110910151);(\"finished\",0.00019928797972617);(\"daughter\",0.000198972496275229);(\"process\",0.000198812898764752);(\"refer\",0.000198348422289081);(\"study\",0.000198231772945875);(\"europe\",0.000198211624422958);(\"institute\",0.000198071114986824);(\"stage\",0.000197992111568017);(\"term\",0.000197747147947286);(\"range\",0.00019690886334907);(\"chief\",0.000196896137966175);(\"fire\",0.000196351067398834);(\"does\",0.000196246082989949);(\"rights\",0.000196109815348114);(\"completed\",0.000196014374976401);(\"arts\",0.000195948627164776);(\"half\",0.0001957890296543);(\"remained\",0.000194950214831796);(\"largest\",0.000194825612124282);(\"mother\",0.000193793265436915);(\"character\",0.000193070039509042);(\"includes\",0.000193059965247584);(\"civil\",0.000192809169159692);(\"private\",0.000192786899739626);(\"light\",0.000192688808246476);(\"leading\",0.000191891881142669);(\"reported\",0.00019167607985774);(\"network\",0.000191637903709054);(\"help\",0.000191091772693139);(\"usually\",0.000191043522282995);(\"seen\",0.000190587529395919);(\"groups\",0.00019015592682606);(\"studies\",0.000189912023653904);(\"featured\",0.000189557833829989);(\"federal\",0.000189539275979934);(\"full\",0.000189416794169568);(\"episode\",0.000189089645784306);(\"thus\",0.000188282644419041);(\"academy\",0.000187783703364695);(\"night\",0.000187551465126859);(\"competition\",0.000187532377052516);(\"women's\",0.000187482005745223);(\"space\",0.000187166522294281);(\"get\",0.000186655386081328);(\"instead\",0.000186574791989658);(\"china\",0.000186431101207801);(\"must\",0.00018616068682128);(\"robert\",0.000186064716225279);(\"japanese\",0.00018561932782395);(\"go\",0.000185360578371749);(\"washington\",0.000185289528317251);(\"front\",0.000185163334936875);(\"uk\",0.000184878074270309);(\"directed\",0.000184769908515701);(\"tournament\",0.000184435867214704);(\"my\",0.000184041380344955);(\"thomas\",0.000183693553212488);(\"news\",0.00018256152435911);(\"books\",0.000182520697088988);(\"brother\",0.000182237027095285);(\"involved\",0.000181953357101581);(\"campaign\",0.000181471913448715);(\"independent\",0.0001804374458642);(\"either\",0.000180379121192597);(\"model\",0.000180310192035248);(\"countries\",0.000180097572096043);(\"awarded\",0.000179452289138403);(\"able\",0.000179364271906711);(\"japan\",0.000179191418789053);(\"sports\",0.000178896083861028);(\"charles\",0.000178459709272583);(\"gold\",0.000178450695459699);(\"section\",0.000177796928913462);(\"capital\",0.000177521212284068);(\"kingdom\",0.000177344647596398);(\"close\",0.000177065219396993);(\"middle\",0.000177062568275556);(\"added\",0.000177016438762562);(\"fourth\",0.00017658536641699);(\"sent\",0.000176423117785077);(\"movement\",0.000175843052414774);(\"eight\",0.000175664897054243);(\"studio\",0.000175550898832474);(\"previous\",0.000175452807339324);(\"provided\",0.000175231173587234);(\"conference\",0.000175093315272537);(\"above\",0.000174858956137552);(\"soon\",0.000174771469130148);(\"today\",0.000174631489918301);(\"grand\",0.000173777828815754);(\"magazine\",0.000173711550779842);(\"canadian\",0.00017331176166722);(\"replaced\",0.000173104974195174);(\"aircraft\",0.000173063086476478);(\"change\",0.000172999459562002);(\"films\",0.000172942725563262);(\"ten\",0.000172930000180366);(\"medical\",0.000172799565005691);(\"organization\",0.000172423635985998);(\"bank\",0.000172281005652715);(\"historic\",0.000172023846873376);(\"coast\",0.000171773581009772);(\"killed\",0.000171469762493151);(\"management\",0.000171318648571272);(\"degree\",0.000171210482816663);(\"rather\",0.000171034978577568);(\"industry\",0.000170777819798229);(\"russian\",0.000169933702732853);(\"professor\",0.000169924158695682);(\"chinese\",0.000169741761540852);(\"action\",0.000169611856590464);(\"car\",0.000169609735693315);(\"senior\",0.00016917124020772);(\"systems\",0.00016895172735278);(\"green\",0.000168788418272292);(\"bridge\",0.000168413019476886);(\"technology\",0.000168375373552488);(\"almost\",0.000168374313103914);(\"shows\",0.000167905064609656);(\"big\",0.000167800610425059);(\"lower\",0.000167690853997588);(\"week\",0.000167533377384261);(\"success\",0.000167467629572636);(\"writing\",0.000167208349896148);(\"base\",0.000166954372462533);(\"data\",0.000166767733513405);(\"families\",0.000166731148037581);(\"post\",0.000166654795740211);(\"least\",0.000166503681818331);(\"market\",0.000166297424570573);(\"primary\",0.0001658997563551);(\"female\",0.00016589392388794);(\"reached\",0.000165889682093641);(\"beginning\",0.000165728493910303);(\"valley\",0.000165486711635296);(\"ground\",0.000165370592516378);(\"type\",0.000165316509639074);(\"stated\",0.00016529954246188);(\"tv\",0.000165266138331781);(\"operations\",0.000164944822413679);(\"attack\",0.000164888088414938);(\"hospital\",0.000164783104006053);(\"saw\",0.000164762425258849);(\"approximately\",0.000164546093749632);(\"paul\",0.000164014278789473);(\"culture\",0.000163283099497291);(\"republic\",0.000163232728189998);(\"size\",0.000162672281118325);(\"previously\",0.000162233785632731);(\"decided\",0.000162105471355205);(\"introduced\",0.000162102290009481);(\"hill\",0.000162068355655094);(\"buildings\",0.000161885958500264);(\"championships\",0.000161801122614297);(\"provide\",0.000161740677045545);(\"native\",0.0001616632642996);(\"successful\",0.000161179699749585);(\"outside\",0.000161144704946624);(\"parts\",0.000160112888483544);(\"via\",0.000159977681290284);(\"theatre\",0.000159793163238305);(\"placed\",0.00015973324789384);(\"behind\",0.000159109173907692);(\"bay\",0.000158440030857124);(\"sometimes\",0.000158247559440835);(\"los\",0.000157909806569827);(\"prior\",0.000157907685672678);(\"whose\",0.000157557207418775);(\"natural\",0.000157454874131326);(\"active\",0.000157394958786862);(\"future\",0.000157272476976496);(\"scored\",0.000157260812042176);(\"italian\",0.000157151585838993);(\"africa\",0.000156902380423963);(\"spanish\",0.000156559325310082);(\"attended\",0.000156507363329927);(\"put\",0.000156447447985463);(\"listed\",0.000155991455098388);(\"brought\",0.000155883819568066);(\"regional\",0.000155728994076176);(\"structure\",0.000155237476161852);(\"units\",0.00015507310663279);(\"michael\",0.000154738004883218);(\"possible\",0.000154418279637978);(\"henry\",0.000154228989567413);(\"municipality\",0.000154118172691368);(\"higher\",0.000153830791127654);(\"start\",0.000153659528682857);(\"collection\",0.000153648924197111);(\"regular\",0.000153467587490856);(\"star\",0.00015317437345998);(\"results\",0.000152926228493526);(\"square\",0.000152805867580309);(\"interest\",0.000152295261591643);(\"leader\",0.000152114985333962);(\"economic\",0.000151916681450513);(\"especially\",0.000151730572725672);(\"contract\",0.00015163089055966);(\"too\",0.000151390168733227);(\"trade\",0.000150916678444671);(\"texas\",0.000150827070540118);(\"goal\",0.000150638310693841);(\"below\",0.000150468638921906);(\"winning\",0.000150094830799362);(\"officer\",0.000149865243682962);(\"foreign\",0.000149853578748642);(\"generally\",0.000149787300712729);(\"operation\",0.000149531732606252);(\"runs\",0.000149520067671932);(\"medal\",0.000149471287037501);(\"changed\",0.000149248592836836);(\"taking\",0.000148867891798557);(\"novel\",0.000148640425579307);(\"staff\",0.00014857891956198);(\"significant\",0.000148303733156873);(\"real\",0.000147935227277202);(\"standard\",0.000147885916418484);(\"far\",0.000147671175582129);(\"limited\",0.000147534907940293);(\"traditional\",0.000147499913137332);(\"african\",0.0001473551619069);(\"come\",0.000147347738766878);(\"initially\",0.000146972870195759);(\"itself\",0.000146969158625748);(\"location\",0.000146919847767029);(\"commission\",0.000146871067132598);(\"roman\",0.00014684720703967);(\"me\",0.000146811151788133);(\"artist\",0.000146802668199537);(\"christian\",0.000146782519676619);(\"plays\",0.000146675944594873);(\"money\",0.000146620271044707);(\"parliament\",0.000146594820278916);(\"food\",0.000146551872111645);(\"hit\",0.000146518998205833);(\"governor\",0.000146278806603688);(\"low\",0.000145867352556745);(\"defeated\",0.000145800014072259);(\"energy\",0.000145740098727794);(\"student\",0.000145490363088477);(\"strong\",0.000145228432290553);(\"towards\",0.000145221539374818);(\"notable\",0.000145118675863082);(\"child\",0.000144265544984822);(\"assembly\",0.000144184950893153);(\"owned\",0.000144068301549948);(\"catholic\",0.000144056636615627);(\"course\",0.000143945289515295);(\"commercial\",0.00014388749506798);(\"ship\",0.000143878481255096);(\"foundation\",0.000143452711152396);(\"channel\",0.000143358861453545);(\"allowed\",0.000143213579998826);(\"represented\",0.000142591626909827);(\"property\",0.000142502549229561);(\"places\",0.000142327575214753);(\"navy\",0.00014189279129917);(\"unit\",0.000141067232083849);(\"ended\",0.000141047613785219);(\"annual\",0.000141021632795141);(\"command\",0.000140928843544864);(\"paris\",0.000140872109546124);(\"km\",0.000140814845323096);(\"library\",0.000140802650164488);(\"companies\",0.00014078250164157);(\"whom\",0.000140616541439647);(\"met\",0.000140561398113768);(\"ever\",0.000140544430936574);(\"activities\",0.000140480804022099);(\"spent\",0.000140239021747091);(\"plan\",0.000139913464034691);(\"numerous\",0.000139280906459946);(\"blue\",0.000139181224293935);(\"earlier\",0.000138967013681867);(\"means\",0.000138818550881424);(\"highway\",0.000138525867074836);(\"dr\",0.000138469663300382);(\"required\",0.000138288326594127);(\"musical\",0.000138264466501199);(\"additional\",0.000137912397574434);(\"practice\",0.000137871570304312);(\"bill\",0.000137849300884245);(\"noted\",0.000137646224982211);(\"mountain\",0.000137214092188064);(\"airport\",0.000136951100941565);(\"ireland\",0.000136900729634272);(\"plant\",0.000136843995635531);(\"security\",0.000136839753841233);(\"income\",0.000136473899082998);(\"issues\",0.000136377928486997);(\"associated\",0.000136235828378002);(\"manager\",0.000136065096157492);(\"artists\",0.000135690227586373);(\"related\",0.000135671139512031);(\"access\",0.000135547597253091);(\"brown\",0.000135410269162681);(\"running\",0.000135270820175122);(\"peter\",0.00013517697047627);(\"individual\",0.000134995633770015);(\"richard\",0.00013496329008849);(\"older\",0.000134930946406965);(\"victory\",0.000134771879120776);(\"opening\",0.000134700829066278);(\"programs\",0.000134516311014299);(\"past\",0.000134382164269613);(\"report\",0.000134316416457988);(\"sound\",0.000134224687656285);(\"press\",0.000133988207624151);(\"woman\",0.000133685449556105);(\"finally\",0.000133623943538778);(\"find\",0.000133480782981208);(\"background\",0.000133219382407571);(\"policy\",0.00013287632729369);(\"our\",0.000132823835089248);(\"youth\",0.000132465403471035);(\"financial\",0.00013234875412783);(\"date\",0.000131983429593882);(\"executive\",0.00013190548662365);(\"launched\",0.000131705061843052);(\"soviet\",0.000131690745787295);(\"administration\",0.000131656811432908);(\"historical\",0.000131559780388332);(\"closed\",0.000131425103419359);(\"here\",0.0001312522503017);(\"mark\",0.000131196046527247);(\"captain\",0.000131056067315401);(\"basketball\",0.00013099933331666);(\"lived\",0.000130971231429433);(\"ran\",0.000130509936299485);(\"better\",0.000130449490730733);(\"edition\",0.000130416616824921);(\"famous\",0.000130317995107484);(\"contains\",0.000130270274921627);(\"chicago\",0.000130228387202931);(\"subsequently\",0.000130200285315704);(\"move\",0.000130191801727107);(\"selected\",0.000130021599730885);(\"already\",0.000129805798445955);(\"legal\",0.000129646200935479);(\"rural\",0.000129462213107787);(\"religious\",0.000129218840159918);(\"studied\",0.000129201342758437);(\"entered\",0.000129155743469729);(\"cultural\",0.000129110144181022);(\"lines\",0.000129093177003828);(\"person\",0.000129085753863806);(\"test\",0.000128727322245594);(\"appearance\",0.000128328063357259);(\"complete\",0.000128058709419313);(\"increased\",0.000128029547083511);(\"rest\",0.000127895400338825);(\"men's\",0.000127822229387178);(\"zealand\",0.000127680129278183);(\"secretary\",0.000127229438633981);(\"complex\",0.000127078854936388);(\"seat\",0.000126928801463084);(\"changes\",0.000126869416342906);(\"matches\",0.00012684714692284);(\"majority\",0.000126618090030728);(\"room\",0.00012660589487212);(\"loss\",0.000126587337022064);(\"terms\",0.000126293592766902);(\"review\",0.000126182775890857);(\"empire\",0.000126177473647984);(\"mission\",0.000126171110956537);(\"virginia\",0.000126153083330769);(\"angeles\",0.00012614300906931);(\"olympics\",0.00012612339077068);(\"italy\",0.000126009392548911);(\"highest\",0.000125985532455983);(\"stadium\",0.000125838130104114);(\"becoming\",0.000125403346188531);(\"goals\",0.000125337068152619);(\"starting\",0.000125116494849104);(\"wide\",0.00012480737408961);(\"characters\",0.000124647246354846);(\"writer\",0.00012453271790879);(\"particularly\",0.000124399631612678);(\"fact\",0.000124377892416899);(\"mostly\",0.000124109598927527);(\"mexico\",0.000124060818293096);(\"thought\",0.000123951592089913);(\"hours\",0.000123900160334045);(\"stone\",0.000123856681942487);(\"retired\",0.000123832821849558);(\"recording\",0.000123640880657557);(\"going\",0.000123591039574551);(\"give\",0.000123466436867036);(\"feature\",0.00012340493084971);(\"cross\",0.000123270253880737);(\"smith\",0.000123179585527609);(\"author\",0.000123087326501619);(\"operated\",0.00012254384660714);(\"sir\",0.000122443634216841);(\"recent\",0.000122371523713769);(\"status\",0.000122357207658012);(\"chart\",0.000122337589359382);(\"theory\",0.000122122318298739);(\"greek\",0.000122068235421435);(\"islands\",0.000121998245815512);(\"caused\",0.000121672688103112);(\"entire\",0.000121562401451354);(\"got\",0.000121514681265497);(\"remains\",0.000121374171829364);(\"nine\",0.000121347660614999);(\"engine\",0.000120863565840697);(\"source\",0.000120834403504896);(\"genus\",0.000120826450140586);(\"forced\",0.000120675336218707);(\"issue\",0.000120473320765247);(\"singles\",0.000120190711220118);(\"evidence\",0.000119887953152071);(\"meeting\",0.000119645640652777);(\"congress\",0.000119532702879583);(\"port\",0.000119277664997393);(\"variety\",0.000119241079521569);(\"pennsylvania\",0.000119227823914387);(\"forest\",0.000119222521671514);(\"passed\",0.000119189647765702);(\"lord\",0.000119133974215535);(\"uses\",0.000118926126294915);(\"particular\",0.000118676390655598);(\"key\",0.000118651470114095);(\"supported\",0.000118600568582515);(\"word\",0.000118600038358228);(\"create\",0.000118557090190957);(\"relationship\",0.000118510430453675);(\"overall\",0.000118354544513209);(\"hand\",0.000118259104141496);(\"democratic\",0.000118225700011396);(\"certain\",0.000118131850312545);(\"castle\",0.000118063981603771);(\"biography\",0.000118048605099439);(\"nature\",0.000117913397906179);(\"mary\",0.000117912867681891);(\"names\",0.000117901732971858);(\"fort\",0.000117821669104476);(\"parish\",0.00011748550690633);(\"decision\",0.000117474372196297);(\"serving\",0.000117379992273158);(\"score\",0.000117320607152981);(\"cover\",0.000117198655566903);(\"wales\",0.000117109577886637);(\"singer\",0.000116886883685972);(\"need\",0.000116703956306855);(\"material\",0.000116604274140843);(\"shown\",0.000116269702615559);(\"florida\",0.000116256447008377);(\"upper\",0.000116079352096419);(\"referred\",0.000115997697556176);(\"larger\",0.00011566736782519);(\"marriage\",0.000115505119193277);(\"length\",0.000115320070917011);(\"leaving\",0.000115165775649407);(\"weeks\",0.000114890059020013);(\"movie\",0.000114852413095615);(\"raised\",0.000114517841570331);(\"rate\",0.000114498223271701);(\"justice\",0.000114443079945822);(\"fall\",0.000114438838151524);(\"always\",0.000114384755274219);(\"minutes\",0.000114375741461335);(\"junior\",0.000114358774284142);(\"competed\",0.000114355592938418);(\"stations\",0.000114304691406838);(\"turn\",0.000114258031669555);(\"irish\",0.000114254320099544);(\"temple\",0.000114204479016538);(\"cases\",0.000114152517036383);(\"era\",0.000114148275242085);(\"individuals\",0.000114073513617576);(\"township\",0.000113956864274371);(\"claimed\",0.000113898539602768);(\"friends\",0.000113828019772558);(\"van\",0.000113663650243496);(\"earned\",0.000113351878362565);(\"failed\",0.000113234698795073);(\"sister\",0.000113010944145834);(\"deal\",0.000112762268955092);(\"increase\",0.000112724623030694);(\"helped\",0.000112649861406185);(\"takes\",0.000112614866603223);(\"houses\",0.000112611685257499);(\"themselves\",0.000112606913238914);(\"forms\",0.000112363540291045);(\"seasons\",0.000112320592123773);(\"ancient\",0.000112306276068016);(\"troops\",0.000112214017042027);(\"believed\",0.000112163645734734);(\"elections\",0.000112143497211816);(\"presented\",0.000112082521418777);(\"offered\",0.000111835436900897);(\"train\",0.000111829074209449);(\"composed\",0.000111733103613449);(\"shot\",0.000111718787557692);(\"care\",0.000111621756513116);(\"cities\",0.00011154646466432);(\"longer\",0.000111520483674243);(\"pacific\",0.000111447312722596);(\"tracks\",0.000111272338707788);(\"products\",0.000111235753231965);(\"fight\",0.000111225678970506);(\"engineering\",0.000111217725606196);(\"mainly\",0.000111078806842925);(\"chairman\",0.000110940948528228);(\"provides\",0.000110794076400646);(\"fellow\",0.000110731509934745);(\"bishop\",0.000110726207691872);(\"plot\",0.000110704998720381);(\"experience\",0.000110387924596577);(\"stars\",0.000110255368524753);(\"prince\",0.000110215601703206);(\"actor\",0.000110151444564443);(\"dance\",0.000110125993798653);(\"effect\",0.000110068729575625);(\"nearly\",0.000109953140680994);(\"therefore\",0.000109837021562076);(\"consists\",0.000109766501731865);(\"broadcast\",0.000109735748723202);(\"cast\",0.000109461092542383);(\"separate\",0.000109445716038051);(\"winter\",0.000109404888767929);(\"prime\",0.000109387391366448);(\"saint\",0.000109127581465673);(\"camp\",0.000109123339671375);(\"male\",0.000108882617844942);(\"administrative\",0.000108864059994887);(\"surface\",0.000108688025531504);(\"carried\",0.000108655151625692);(\"influence\",0.000108640835569935);(\"husband\",0.0001086339426542);(\"subject\",0.000108496084339503);(\"creek\",0.000108370421183413);(\"baseball\",0.000108244758027324);(\"assistant\",0.000108198098290042);(\"response\",0.000108109020609776);(\"problems\",0.000108018352256648);(\"remaining\",0.000107730970692934);(\"heart\",0.000107605307536844);(\"fifth\",0.000106930332019116);(\"oil\",0.000106915485739071);(\"producer\",0.000106865114431778);(\"month\",0.000106622801932484);(\"friend\",0.000106584095559511);(\"done\",0.000106530542906494);(\"joseph\",0.000106421846927598);(\"proposed\",0.00010624899380994);(\"spain\",0.00010623520797847);(\"branch\",0.000106166278821121);(\"silver\",0.000105983351442004);(\"greater\",0.000105979109647706);(\"turned\",0.000105918133854666);(\"nearby\",0.000105876776360257);(\"champion\",0.000105845493127307);(\"cost\",0.000105806256530047);(\"plans\",0.000105785047558555);(\"meaning\",0.00010575270387703);(\"jewish\",0.00010564877991672);(\"it's\",0.000105561823133603);(\"appears\",0.000105533721246376);(\"nations\",0.000105526828330641);(\"heavy\",0.00010546638276189);(\"critical\",0.000105443052893249);(\"god\",0.000105229902729755);(\"mr\",0.000105202861291103);(\"males\",0.000105188015011059);(\"minor\",0.000105150899310948);(\"acquired\",0.00010506235185497);(\"russia\",0.000104971153277555);(\"view\",0.000104847611018614);(\"parents\",0.000104817918458526);(\"distribution\",0.000104772849394106);(\"multiple\",0.000104682711265265);(\"poland\",0.000104427143158788);(\"miles\",0.000104271257218323);(\"graduated\",0.000104174756398035);(\"attempt\",0.000103972210720288);(\"spring\",0.000103698614988043);(\"border\",0.000103661499287932);(\"promoted\",0.000103555454430473);(\"louis\",0.000103480162581676);(\"enough\",0.000103272844885343);(\"females\",0.000102937212911485);(\"territory\",0.000102789280335329);(\"appearances\",0.000102716639607969);(\"digital\",0.000102672630992124);(\"hockey\",0.000102645589553471);(\"politician\",0.000102593097349029);(\"article\",0.00010255173985462);(\"responsible\",0.000102515154378796);(\"hotel\",0.000102501368547327);(\"constructed\",0.000102435090511415);(\"queen\",0.000102430848717116);(\"transport\",0.000102345482606862);(\"conditions\",0.000102286097486684);(\"vote\",0.000102266479188054);(\"lives\",0.000102143467153402);(\"albums\",0.000102091505173246);(\"ships\",0.000101976446502903);(\"might\",0.000101975386054328);(\"prize\",0.000101876764336891);(\"academic\",0.000101796170245222);(\"specific\",0.000101755873199388);(\"whether\",0.000101700199649222);(\"residents\",0.000101686413817752);(\"households\",0.000101548025278767);(\"projects\",0.00010143773862701);(\"ice\",0.000101360325881064);(\"regiment\",0.000101334875115274);(\"corps\",0.00010118853321198);(\"authority\",0.000100981215515647);(\"yet\",0.00010079033477222);(\"numbers\",0.0001007452657078);(\"housing\",0.000100559687207246);(\"managed\",0.000100500832311357);(\"cause\",0.000100459474816947);(\"face\",0.000100428191583997);(\"stories\",0.000100402210593919);(\"daily\",0.000100235189943421);(\"lies\",0.000100083015572967);(\"br\",9.99568221925901E-05);(\"direct\",9.99091020067334E-05);(\"asked\",9.98979672967002E-05);(\"serve\",9.98263870179152E-05);(\"primarily\",9.9736779113362E-05);(\"campus\",9.965088277882E-05);(\"leave\",9.96153577515711E-05);(\"call\",9.96132368544219E-05);(\"arrived\",9.95331729870401E-05);(\"edward\",9.94334908210283E-05);(\"rule\",9.93581989722322E-05);(\"brothers\",9.93311575335801E-05);(\"ministry\",9.92670003948172E-05);(\"elements\",9.9241549629027E-05);(\"tower\",9.92081454989273E-05);(\"makes\",9.90252181198099E-05);(\"discovered\",9.89435635795662E-05);(\"computer\",9.89313684209584E-05);(\"master\",9.89212941594998E-05);(\"iii\",9.88661508336209E-05);(\"facilities\",9.88094168348802E-05);(\"inside\",9.88088866105929E-05);(\"extended\",9.87606362004489E-05);(\"carolina\",9.87532130604267E-05);(\"told\",9.87086742202938E-05);(\"rugby\",9.86853443516528E-05);(\"reception\",9.85819506156299E-05);(\"whole\",9.85628625412873E-05);(\"median\",9.8253211557506E-05);(\"dutch\",9.82510906603568E-05);(\"covered\",9.81922357644669E-05);(\"allow\",9.81270181771294E-05);(\"journal\",9.80676330569522E-05);(\"physical\",9.80591494683554E-05);(\"martin\",9.80278662354049E-05);(\"mayor\",9.79075053221886E-05);(\"levels\",9.78915985935697E-05);(\"wanted\",9.74032620249695E-05);(\"directly\",9.73078216532561E-05);(\"description\",9.72760081960183E-05);(\"function\",9.69843848380051E-05);(\"newspaper\",9.69695385579608E-05);(\"pass\",9.69053814191979E-05);(\"estate\",9.68507683176064E-05);(\"issued\",9.67956249917275E-05);(\"officers\",9.67733555716611E-05);(\"value\",9.67622208616278E-05);(\"latin\",9.67012450685887E-05);(\"latter\",9.66932917042793E-05);(\"literature\",9.64424956163879E-05);(\"contemporary\",9.63619015247188E-05);(\"recently\",9.62606286858452E-05);(\"secondary\",9.62463126300882E-05);(\"growth\",9.61635976412699E-05);(\"speed\",9.59949863179096E-05);(\"global\",9.59705960006939E-05);(\"flight\",9.58878810118756E-05);(\"drama\",9.58019846773336E-05);(\"defense\",9.5670489054084E-05);(\"words\",9.56604147926254E-05);(\"britain\",9.5650870755454E-05);(\"commander\",9.55108915436077E-05);(\"idea\",9.54440832834083E-05);(\"races\",9.51885151769314E-05);(\"shortly\",9.50776983008864E-05);(\"marine\",9.50692147122896E-05);(\"formerly\",9.50548986565326E-05);(\"formation\",9.50495964136596E-05);(\"transferred\",9.49721836677143E-05);(\"immediately\",9.48650783616804E-05);(\"highly\",9.48428089416139E-05);(\"label\",9.47521405884862E-05);(\"likely\",9.45570180507611E-05);(\"saying\",9.44149179417655E-05);(\"senate\",9.42759991784938E-05);(\"prominent\",9.42171442826039E-05);(\"republican\",9.41768472367693E-05);(\"wall\",9.39276418217399E-05);(\"scene\",9.38942376916402E-05);(\"officially\",9.37563793769431E-05);(\"earth\",9.37166125553958E-05);(\"corporation\",9.37022964996388E-05);(\"references\",9.34101429173384E-05);(\"percent\",9.34090824687638E-05);(\"typically\",9.32876611069729E-05);(\"dead\",9.31095057464412E-05);(\"settlement\",9.30819340835018E-05);(\"beach\",9.30649669063083E-05);(\"scotland\",9.30575437662861E-05);(\"effects\",9.3044818383391E-05);(\"online\",9.30008097675454E-05);(\"peace\",9.29843728146392E-05);(\"reserve\",9.29414246473681E-05);(\"soldiers\",9.27261535867257E-05);(\"agreement\",9.27155491009798E-05);(\"renamed\",9.2635485233598E-05);(\"treatment\",9.25511795719178E-05);(\"sources\",9.25442866561829E-05);(\"voice\",9.25358030675862E-05);(\"produce\",9.2505050058923E-05);(\"moving\",9.24891433303041E-05);(\"naval\",9.23539361370435E-05);(\"dark\",9.23454525484467E-05);(\"participated\",9.22563748681809E-05);(\"workers\",9.2149269562147E-05);(\"initial\",9.21471486649978E-05);(\"urban\",9.21407859735502E-05);(\"smaller\",9.21333628335281E-05);(\"hot\",9.19233940157586E-05);(\"code\",9.1908017511427E-05);(\"host\",9.18714320356035E-05);(\"appear\",9.18581764284211E-05);(\"quickly\",9.16630538906959E-05);(\"emperor\",9.16031385462314E-05);(\"commonly\",9.15994269762203E-05);(\"industrial\",9.15580694818112E-05);(\"grew\",9.15018657073577E-05);(\"your\",9.11938053964384E-05);(\"candidate\",9.11291180333882E-05);(\"types\",9.10225429516416E-05);(\"quality\",9.0962627607177E-05);(\"asian\",9.09355861685249E-05);(\"paper\",9.09318745985138E-05);(\"racing\",9.09244514584917E-05);(\"avenue\",9.08433271425353E-05);(\"lack\",9.07388729579379E-05);(\"divided\",9.07166035378714E-05);(\"continue\",9.06466139319482E-05);(\"basis\",9.06153306989977E-05);(\"lee\",9.06047262132518E-05);(\"boston\",9.05898799332075E-05);(\"ohio\",9.04514913942231E-05);(\"wing\",9.03640043868191E-05);(\"footballer\",9.034226519104E-05);(\"clubs\",9.03353722753051E-05);(\"leadership\",9.02012255306191E-05);(\"probably\",9.00082238900431E-05);(\"editor\",9.00050425443193E-05);(\"poor\",8.99817126756782E-05);(\"comes\",8.97303863634996E-05);(\"alongside\",8.97208423263283E-05);(\"activity\",8.97038751491348E-05);(\"francisco\",8.96010116373992E-05);(\"jersey\",8.92765143735737E-05);(\"format\",8.92531845049326E-05);(\"intended\",8.9209175889087E-05);(\"true\",8.91975109547665E-05);(\"politics\",8.90744989201137E-05);(\"al\",8.87934800478464E-05);(\"memorial\",8.87558341234484E-05);(\"metal\",8.87165975261884E-05);(\"judge\",8.86778911532158E-05);(\"affairs\",8.86444870231161E-05);(\"languages\",8.85861623515135E-05);(\"rules\",8.85235958856125E-05);(\"software\",8.84864801855017E-05);(\"farm\",8.84827686154906E-05);(\"ordered\",8.84260346167499E-05);(\"cut\",8.83936909352248E-05);(\"dedicated\",8.8336956936484E-05);(\"conducted\",8.82669673305609E-05);(\"revealed\",8.81980381732123E-05);(\"follows\",8.81025978014989E-05);(\"efforts\",8.78984614508897E-05);(\"acting\",8.78602853022043E-05);(\"focus\",8.77786307619606E-05);(\"super\",8.75644201498928E-05);(\"combined\",8.74944305439696E-05);(\"michigan\",8.74859469553729E-05);(\"operating\",8.74774633667762E-05);(\"fleet\",8.7416487573737E-05);(\"winner\",8.74069435365657E-05);(\"planned\",8.74069435365657E-05);(\"capacity\",8.73629349207201E-05);(\"removed\",8.7157207897249E-05);(\"el\",8.71359989257571E-05);(\"scottish\",8.71010041227955E-05);(\"mass\",8.70538141612261E-05);(\"opera\",8.70055637510821E-05);(\"scientific\",8.68973979964736E-05);(\"architecture\",8.68019576247602E-05);(\"prison\",8.67924135875889E-05);(\"positive\",8.66768246929582E-05);(\"leaders\",8.66333463013999E-05);(\"register\",8.66057746384605E-05);(\"advanced\",8.6603123517024E-05);(\"grade\",8.65941097041399E-05);(\"keep\",8.65755518540846E-05);(\"meet\",8.65018506781503E-05);(\"communities\",8.64933670895536E-05);(\"columbia\",8.64281495022161E-05);(\"entertainment\",8.64223170350558E-05);(\"equipment\",8.63926244749672E-05);(\"job\",8.63682341577516E-05);(\"purchased\",8.63406624948121E-05);(\"potential\",8.62229527030323E-05);(\"girl\",8.61328145741919E-05);(\"economy\",8.61036522383905E-05);(\"featuring\",8.60835037154733E-05);(\"jr\",8.60357835296166E-05);(\"crew\",8.58067266375044E-05);(\"reach\",8.58051359646425E-05);(\"method\",8.568795639715E-05);(\"giving\",8.55585816710496E-05);(\"direction\",8.55129823823421E-05);(\"jack\",8.54440532249935E-05);(\"environment\",8.538784945054E-05);(\"solo\",8.53873192262528E-05);(\"relations\",8.51370533626487E-05);(\"widely\",8.50792589153334E-05);(\"jones\",8.50432036637972E-05);(\"product\",8.49933625807913E-05);(\"squadron\",8.4974804730736E-05);(\"offers\",8.49223125262936E-05);(\"asia\",8.49037546762382E-05);(\"letter\",8.48963315362161E-05);(\"organized\",8.48931501904923E-05);(\"mount\",8.48650483032656E-05);(\"store\",8.4796119145917E-05);(\"assigned\",8.47579429972316E-05);(\"stop\",8.46831813727228E-05);(\"infantry\",8.46784093541371E-05);(\"needed\",8.46296287197058E-05);(\"headquarters\",8.4588801449584E-05);(\"trial\",8.45426719365892E-05);(\"destroyed\",8.43857255475494E-05);(\"attention\",8.43857255475494E-05);(\"drive\",8.43777721832399E-05);(\"protection\",8.43676979217813E-05);(\"coming\",8.42197653456255E-05);(\"exchange\",8.41768171783545E-05);(\"compared\",8.41571988797245E-05);(\"episodes\",8.41354596839454E-05);(\"ability\",8.40797861337792E-05);(\"concept\",8.40495633494033E-05);(\"leaves\",8.40357775179336E-05);(\"build\",8.39657879120104E-05);(\"defeat\",8.39530625291153E-05);(\"charge\",8.3947230061955E-05);(\"analysis\",8.39117050347062E-05);(\"except\",8.38597430545511E-05);(\"forward\",8.38374736344846E-05);(\"largely\",8.38358829616227E-05);(\"cars\",8.38178553358547E-05);(\"comedy\",8.37091593569589E-05);(\"join\",8.365401603108E-05);(\"adopted\",8.35819055280077E-05);(\"serves\",8.35506222950572E-05);(\"website\",8.35034323334878E-05);(\"technical\",8.3403750167476E-05);(\"agency\",8.33433045987242E-05);(\"roles\",8.32924030671437E-05);(\"gas\",8.32669523013534E-05);(\"double\",8.3201734714016E-05);(\"gained\",8.30750111093521E-05);(\"distance\",8.30060819520035E-05);(\"approach\",8.29456363832517E-05);(\"clear\",8.28125500871402E-05);(\"morning\",8.27330164440457E-05);(\"amount\",8.26624966138353E-05);(\"georgia\",8.26009905965088E-05);(\"guitar\",8.24514673474912E-05);(\"reviews\",8.24382117403088E-05);(\"champions\",8.24265468059883E-05);(\"supreme\",8.23549665272032E-05);(\"hold\",8.2213396642495E-05);(\"floor\",8.21842343066937E-05);(\"estimated\",8.21280305322402E-05);(\"polish\",8.20585711506044E-05);(\"golden\",8.19626005546037E-05);(\"blood\",8.18056541655639E-05);(\"accepted\",8.17923985583815E-05);(\"models\",8.1784445194072E-05);(\"bbc\",8.16015178149547E-05);(\"captured\",8.15580394233963E-05);(\"alexander\",8.15553883019599E-05);(\"organizations\",8.15092587889651E-05);(\"actress\",8.1485928920324E-05);(\"sydney\",8.14477527716386E-05);(\"railroad\",8.13496612784888E-05);(\"firm\",8.13220896155493E-05);(\"actually\",8.13210291669747E-05);(\"respectively\",8.12923970554607E-05);(\"heritage\",8.12886854854496E-05);(\"safety\",8.12870948125877E-05);(\"alone\",8.12701276353943E-05);(\"travel\",8.11115905734926E-05);(\"agreed\",8.10707633033707E-05);(\"tax\",8.10675819576469E-05);(\"declared\",8.10437218647186E-05);(\"applied\",8.08183765426175E-05);(\"iron\",8.07229361709041E-05);(\"density\",8.07208152737549E-05);(\"problem\",8.0667262620738E-05);(\"figure\",8.06015148091132E-05);(\"cricket\",8.05442505860851E-05);(\"notes\",8.05108464559855E-05);(\"sun\",8.04583542515431E-05);(\"principal\",8.04201781028577E-05);(\"block\",8.03766997112994E-05);(\"johnson\",8.03623836555424E-05);(\"williams\",8.0266943283829E-05);(\"israel\",8.01752144821267E-05);(\"things\",8.01402196791651E-05);(\"wood\",8.01216618291097E-05);(\"impact\",8.00887879232973E-05);(\"situated\",8.00818950075625E-05);(\"hard\",8.00225098873852E-05);(\"fighting\",7.99859244115618E-05);(\"sales\",7.98406429568425E-05);(\"fell\",7.98310989196711E-05);(\"pressure\",7.97987552381461E-05);(\"know\",7.96905894835375E-05);(\"positions\",7.9611055840443E-05);(\"suffered\",7.9587725971802E-05);(\"mixed\",7.95845446260782E-05);(\"premier\",7.95808330560671E-05);(\"recognized\",7.9514555020155E-05);(\"frank\",7.94546396756905E-05);(\"teaching\",7.94525187785413E-05);(\"joint\",7.94382027227843E-05);(\"fish\",7.94318400313368E-05);(\"titles\",7.93242045010155E-05);(\"sons\",7.92791354365953E-05);(\"illinois\",7.92775447637334E-05);(\"color\",7.92680007265621E-05);(\"climate\",7.92478522036448E-05);(\"independence\",7.92133876249705E-05);(\"knowledge\",7.92096760549595E-05);(\"traffic\",7.91831648405946E-05);(\"bus\",7.91720301305614E-05);(\"plants\",7.91593047476663E-05);(\"feet\",7.91577140748044E-05);(\"difficult\",7.91571838505171E-05);(\"mountains\",7.91232494961301E-05);(\"duke\",7.90988591789145E-05);(\"tree\",7.90893151417431E-05);(\"account\",7.903894383445E-05);(\"parties\",7.90209162086819E-05);(\"pay\",7.90055397043503E-05);(\"olympic\",7.89975863400408E-05);(\"arms\",7.88273843438186E-05);(\"deputy\",7.88024638023156E-05);(\"occurred\",7.87801943822492E-05);(\"girls\",7.87621667564811E-05);(\"geography\",7.87436089064257E-05);(\"remain\",7.87213394863593E-05);(\"content\",7.86937678234198E-05);(\"rose\",7.86794517676628E-05);(\"creation\",7.86741495247898E-05);(\"yards\",7.85877229659605E-05);(\"platform\",7.85824207230875E-05);(\"presence\",7.84816781085012E-05);(\"performances\",7.84731945199044E-05);(\"draft\",7.83894190825115E-05);(\"resources\",7.83533638309754E-05);(\"iran\",7.82833742250522E-05);(\"growing\",7.82499700949525E-05);(\"resulted\",7.8166724881847E-05);(\"representatives\",7.79435004568951E-05);(\"hosted\",7.78835851124305E-05);(\"mm\",7.78788130938449E-05);(\"continues\",7.78538925523419E-05);(\"draw\",7.77748891335347E-05);(\"teacher\",7.77552708349048E-05);(\"titled\",7.77340618634129E-05);(\"expanded\",7.76990670604513E-05);(\"sites\",7.76911136961419E-05);(\"honor\",7.75840083901079E-05);(\"tom\",7.75352277556766E-05);(\"mentioned\",7.75320464099529E-05);(\"critics\",7.74981120555659E-05);(\"spread\",7.74413780568251E-05);(\"table\",7.73300309564928E-05);(\"scoring\",7.70924904757839E-05);(\"guard\",7.696576687112E-05);(\"fc\",7.68501779764894E-05);(\"twice\",7.67048965217701E-05);(\"concert\",7.66863386717147E-05);(\"victoria\",7.66831573259909E-05);(\"ball\",7.66566461116261E-05);(\"providing\",7.66184699629407E-05);(\"municipal\",7.66131677200678E-05);(\"taught\",7.66057445800456E-05);(\"am\",7.65914285242886E-05);(\"damage\",7.6570749777084E-05);(\"opposition\",7.64615235739009E-05);(\"expected\",7.64556911067407E-05);(\"household\",7.6402668678011E-05);(\"rail\",7.63745667907843E-05);(\"districts\",7.62881402319549E-05);(\"zone\",7.59657638652785E-05);(\"revolution\",7.59042578479521E-05);(\"text\",7.59000160536538E-05);(\"younger\",7.58507051949352E-05);(\"becomes\",7.58469936249241E-05);(\"windows\",7.58374495877528E-05);(\"electric\",7.57987432147801E-05);(\"nominated\",7.57775342432882E-05);(\"bar\",7.57282233845696E-05);(\"surrounding\",7.56873961144478E-05);(\"origin\",7.56858054415859E-05);(\"fine\",7.567520095584E-05);(\"garden\",7.56036206770549E-05);(\"lady\",7.5587713948436E-05);(\"votes\",7.55521889211872E-05);(\"basic\",7.55484773511761E-05);(\"reports\",7.55378728654302E-05);(\"identified\",7.55044687353305E-05);(\"liberal\",7.54938642495845E-05);(\"boy\",7.54662925866451E-05);(\"massachusetts\",7.54328884565454E-05);(\"facility\",7.54031958964568E-05);(\"share\",7.53899402892744E-05);(\"pop\",7.53703219906444E-05);(\"versions\",7.5265867806047E-05);(\"offer\",7.51921666301127E-05);(\"unique\",7.51905759572508E-05);(\"birth\",7.51253583699134E-05);(\"note\",7.50394620353713E-05);(\"von\",7.50092392509954E-05);(\"reduced\",7.48915294592155E-05);(\"scott\",7.48819854220442E-05);(\"kept\",7.48549439833921E-05);(\"claims\",7.48501719648064E-05);(\"painting\",7.48300234418891E-05);(\"buried\",7.48051029003862E-05);(\"sciences\",7.47881357231927E-05);(\"paid\",7.47515502473692E-05);(\"says\",7.474942935022E-05);(\"disease\",7.45861202697327E-05);(\"deep\",7.45097679723619E-05);(\"felt\",7.44954519166049E-05);(\"representative\",7.4490149673732E-05);(\"box\",7.4475833617975E-05);(\"ranked\",7.44233414135326E-05);(\"losing\",7.44190996192342E-05);(\"nation\",7.44074346849137E-05);(\"granted\",7.44069044606264E-05);(\"returning\",7.43941790777313E-05);(\"resulting\",7.43300219389684E-05);(\"simply\",7.43045711731781E-05);(\"split\",7.4302450276029E-05);(\"learning\",7.42605625573325E-05);(\"beyond\",7.41412620926908E-05);(\"classes\",7.41285367097957E-05);(\"medicine\",7.41120997568895E-05);(\"reading\",7.40696818139057E-05);(\"image\",7.40617284495963E-05);(\"theater\",7.40569564310106E-05);(\"trains\",7.39853761522256E-05);(\"owner\",7.39758321150542E-05);(\"officials\",7.38385040246444E-05);(\"grant\",7.37488961200913E-05);(\"goes\",7.37223849057264E-05);(\"something\",7.37181431114281E-05);(\"tells\",7.34699981449732E-05);(\"berlin\",7.34471985006195E-05);(\"environmental\",7.34456078277576E-05);(\"machine\",7.34281104262768E-05);(\"jazz\",7.34122036976579E-05);(\"freedom\",7.33729671003979E-05);(\"regions\",7.33687253060996E-05);(\"showed\",7.33671346332377E-05);(\"le\",7.33501674560442E-05);(\"santa\",7.33485767831823E-05);(\"laws\",7.33406234188728E-05);(\"usa\",7.31216407882193E-05);(\"newly\",7.3001279875003E-05);(\"fields\",7.29843126978095E-05);(\"doctor\",7.29599223805938E-05);(\"performing\",7.29450761005495E-05);(\"receive\",7.27982039729684E-05);(\"promotion\",7.27976737486811E-05);(\"suggested\",7.27870692629351E-05);(\"sport\",7.27785856743384E-05);(\"cell\",7.26942800126582E-05);(\"hong\",7.26614061068458E-05);(\"constitution\",7.2581342239464E-05);(\"cemetery\",7.2413261140391E-05);(\"develop\",7.23485737773408E-05);(\"materials\",7.23427413101805E-05);(\"tried\",7.23379692915949E-05);(\"mile\",7.22860073114398E-05);(\"sixth\",7.22313942098482E-05);(\"planning\",7.21979900797485E-05);(\"subsequent\",7.21926878368756E-05);(\"gives\",7.2080810512256E-05);(\"villages\",7.20527086250293E-05);(\"founder\",7.20399832421341E-05);(\"labour\",7.20368018964104E-05);(\"obtained\",7.20044582148853E-05);(\"horse\",7.19509055618683E-05);(\"theme\",7.19424219732716E-05);(\"designated\",7.18533442930057E-05);(\"finish\",7.17722199770493E-05);(\"price\",7.1709123286861E-05);(\"effort\",7.16873840910819E-05);(\"cannot\",7.15129403005613E-05);(\"tradition\",7.14652201147046E-05);(\"publication\",7.14079558916765E-05);(\"kong\",7.13448592014882E-05);(\"brigade\",7.13231200057091E-05);(\"inspired\",7.12218471668354E-05);(\"seats\",7.11794292238517E-05);(\"swedish\",7.11009560293318E-05);(\"purpose\",7.10649007777956E-05);(\"allows\",7.10447522548783E-05);(\"authorities\",7.09625674903473E-05);(\"palace\",7.09270424630985E-05);(\"elizabeth\",7.0924391341662E-05);(\"attacks\",7.09127264073415E-05);(\"succeeded\",7.0895759230148E-05);(\"completely\",7.08787920529545E-05);(\"alternative\",7.08273602970867E-05);(\"cancer\",7.07902445969759E-05);(\"imperial\",7.06926833281134E-05);(\"internet\",7.06667023380358E-05);(\"fame\",7.06168612550299E-05);(\"letters\",7.05702015177478E-05);(\"murder\",7.05214208833165E-05);(\"connected\",7.04965003418136E-05);(\"rome\",7.0475821594609E-05);(\"achieved\",7.04212084930175E-05);(\"crime\",7.04127249044207E-05);(\"ontario\",7.03973484000891E-05);(\"joe\",7.03835625686194E-05);(\"philadelphia\",7.03496282142324E-05);(\"funding\",7.03331912613262E-05);(\"lieutenant\",7.02955453369282E-05);(\"begins\",7.02748665897236E-05);(\"chosen\",7.02568389639555E-05);(\"fully\",7.01264037892805E-05);(\"toronto\",7.01242828921313E-05);(\"pakistan\",7.01073157149378E-05);(\"squad\",7.01036041449268E-05);(\"literary\",7.00935298834681E-05);(\"interview\",7.00892880891698E-05);(\"atlantic\",7.00770929305619E-05);(\"animals\",7.00224798289704E-05);(\"cells\",7.00002104089039E-05);(\"inc\",6.99318114758427E-05);(\"generation\",6.9887802859997E-05);(\"boys\",6.9864472991356E-05);(\"figures\",6.98634125427814E-05);(\"situation\",6.98607614213449E-05);(\"del\",6.98464453655879E-05);(\"couple\",6.98188737026485E-05);(\"existing\",6.97430516295651E-05);(\"confirmed\",6.96810153879513E-05);(\"category\",6.96253418377852E-05);(\"conservative\",6.95728496333428E-05);(\"challenge\",6.95447477461161E-05);(\"defined\",6.95336130360829E-05);(\"armed\",6.95230085503369E-05);(\"legislative\",6.94127218985792E-05);(\"brazil\",6.93257651154626E-05);(\"convention\",6.93119792839929E-05);(\"relatively\",6.9222901603727E-05);(\"falls\",6.9122689213428E-05);(\"bronze\",6.90723179061348E-05);(\"volume\",6.904580669177E-05);(\"injury\",6.89906633658911E-05);(\"classical\",6.89811193287198E-05);(\"examples\",6.8963621927239E-05);(\"educational\",6.89068879284982E-05);(\"billion\",6.88003128467516E-05);(\"bring\",6.87600158009171E-05);(\"reason\",6.87069933721874E-05);(\"visit\",6.87054026993255E-05);(\"korea\",6.86783612606734E-05);(\"read\",6.8668817223502E-05);(\"marked\",6.86094321033248E-05);(\"religion\",6.85617119174681E-05);(\"classic\",6.8515052180186E-05);(\"supply\",6.8491722311545E-05);(\"allowing\",6.8457787957158E-05);(\"acts\",6.84487741442739E-05);(\"labor\",6.8438169658528E-05);(\"combat\",6.8438169658528E-05);(\"break\",6.84259744999202E-05);(\"say\",6.83660591554556E-05);(\"faculty\",6.8298720670969E-05);(\"look\",6.82817534937755E-05);(\"oldest\",6.82711490080295E-05);(\"vice\",6.81661645991448E-05);(\"transfer\",6.81608623562718E-05);(\"frequently\",6.81126119461278E-05);(\"methods\",6.79800558743037E-05);(\"towns\",6.7975283855718E-05);(\"agent\",6.79333961370216E-05);(\"memory\",6.79286241184359E-05);(\"properties\",6.78872666240268E-05);(\"entitled\",6.78639367553857E-05);(\"orchestra\",6.78003098409101E-05);(\"reference\",6.77573616736391E-05);(\"settled\",6.77494083093296E-05);(\"steel\",6.77345620292853E-05);(\"bought\",6.77335015807107E-05);(\"fans\",6.77260784406886E-05);(\"articles\",6.77228970949648E-05);(\"netherlands\",6.76863116191413E-05);(\"etc\",6.765714928334E-05);(\"founding\",6.76263962746768E-05);(\"gallery\",6.75654204816377E-05);(\"programme\",6.7560648463052E-05);(\"simple\",6.7551634650168E-05);(\"unable\",6.75044446885986E-05);(\"sides\",6.74609662970403E-05);(\"holds\",6.74037020740122E-05);(\"portion\",6.73241684309177E-05);(\"ocean\",6.73172755151829E-05);(\"gun\",6.72064586391379E-05);(\"northwest\",6.71698731633144E-05);(\"mike\",6.71518455375463E-05);(\"unknown\",6.7094051090231E-05);(\"battalion\",6.70929906416564E-05);(\"claim\",6.70590562872694E-05);(\"sexual\",6.69959595970811E-05);(\"audience\",6.69678577098544E-05);(\"refused\",6.69455882897879E-05);(\"trust\",6.69328629068928E-05);(\"starring\",6.69190770754231E-05);(\"necessary\",6.69116539354009E-05);(\"billboard\",6.68893845153345E-05);(\"permanent\",6.68034881807924E-05);(\"secret\",6.67361496963057E-05);(\"search\",6.67181220705377E-05);(\"aired\",6.66767645761285E-05);(\"surname\",6.66279839416972E-05);(\"creating\",6.65998820544705E-05);(\"presidential\",6.65601152329232E-05);(\"guest\",6.64784606926796E-05);(\"peak\",6.64710375526574E-05);(\"korean\",6.62472829034182E-05);(\"nuclear\",6.62175903433296E-05);(\"normal\",6.6173581727484E-05);(\"retirement\",6.61205592987543E-05);(\"transportation\",6.60908667386657E-05);(\"southeast\",6.60553417114168E-05);(\"exhibition\",6.60261793756155E-05);(\"worldwide\",6.59726267225986E-05);(\"bc\",6.59535386482559E-05);(\"institutions\",6.59439946110845E-05);(\"citizens\",6.58453728936474E-05);(\"ultimately\",6.5835828856476E-05);(\"expansion\",6.58326475107523E-05);(\"conflict\",6.57955318106415E-05);(\"rank\",6.57764437362988E-05);(\"personnel\",6.5764248577691E-05);(\"risk\",6.57525836433705E-05);(\"application\",6.57069843546629E-05);(\"effective\",6.56550223745079E-05);(\"covers\",6.56544921502206E-05);(\"vehicles\",6.56412365430382E-05);(\"powers\",6.56035906186401E-05);(\"arrested\",6.55887443385958E-05);(\"storm\",6.5551628638485E-05);(\"crown\",6.55203454055345E-05);(\"attempts\",6.55198151812472E-05);(\"unlike\",6.54917132940205E-05);(\"interior\",6.53915009037214E-05);(\"ring\",6.53193904006491E-05);(\"com\",6.53167392792126E-05);(\"supporting\",6.53082556906159E-05);(\"partner\",6.52865164948367E-05);(\"stock\",6.52663679719194E-05);(\"trees\",6.52175873374881E-05);(\"broke\",6.51301003300842E-05);(\"federation\",6.50389017526692E-05);(\"cd\",6.50309483883597E-05);(\"kind\",6.49238430823258E-05);(\"extensive\",6.49148292694417E-05);(\"holy\",6.49068759051323E-05);(\"oxford\",6.48957411950991E-05);(\"flying\",6.48766531207564E-05);(\"want\",6.48040123933967E-05);(\"philosophy\",6.47663664689987E-05);(\"brand\",6.47372041331974E-05);(\"poetry\",6.47319018903244E-05);(\"soccer\",6.4713344040269E-05);(\"choice\",6.47085720216833E-05);(\"metres\",6.46926652930645E-05);(\"sense\",6.46385824157602E-05);(\"intelligence\",6.46290383785888E-05);(\"graduate\",6.45548069783673E-05);(\"alliance\",6.45282957640025E-05);(\"chris\",6.44795151295712E-05);(\"miss\",6.4423841579405E-05);(\"fought\",6.44068744022115E-05);(\"documentary\",6.4386195655007E-05);(\"yellow\",6.43686982535262E-05);(\"perform\",6.43416568148741E-05);(\"entry\",6.42515186860336E-05);(\"copies\",6.42324306116909E-05);(\"phase\",6.4198496257304E-05);(\"fund\",6.4184180201547E-05);(\"recognition\",6.41650921272043E-05);(\"sets\",6.40887398298336E-05);(\"maximum\",6.40542752511593E-05);(\"hands\",6.4048442783999E-05);(\"commissioned\",6.40457916625625E-05);(\"communist\",6.40150386538993E-05);(\"agricultural\",6.40039039438661E-05);(\"drug\",6.39270214222081E-05);(\"employed\",6.3866045629169E-05);(\"occupied\",6.37138712587148E-05);(\"standards\",6.36953134086595E-05);(\"jackson\",6.36703928671565E-05);(\"sign\",6.3581845411178E-05);(\"visited\",6.35680595797082E-05);(\"attempted\",6.35267020852991E-05);(\"sector\",6.35044326652327E-05);(\"piece\",6.34694378622711E-05);(\"people's\",6.34423964236189E-05);(\"sweden\",6.34248990221382E-05);(\"offices\",6.33628627805244E-05);(\"provincial\",6.3349607173342E-05);(\"defence\",6.33087799032202E-05);(\"prevent\",6.32833291374299E-05);(\"rise\",6.32615899416508E-05);(\"internal\",6.32446227644573E-05);(\"domestic\",6.32197022229544E-05);(\"receiving\",6.32069768400592E-05);(\"approved\",6.3195842130026E-05);(\"don't\",6.31841771957055E-05);(\"edge\",6.31067644497602E-05);(\"actions\",6.30913879454286E-05);(\"fox\",6.30791927868207E-05);(\"dropped\",6.30516211238813E-05);(\"needs\",6.30346539466878E-05);(\"powerful\",6.28596799318799E-05);(\"lot\",6.2723942514332E-05);(\"attacked\",6.26746316556134E-05);(\"consisted\",6.25722983681651E-05);(\"adult\",6.25601032095573E-05);(\"lyrics\",6.25426058080765E-05);(\"opposed\",6.25123830237006E-05);(\"sex\",6.2491704276496E-05);(\"children's\",6.24646628378439E-05);(\"factory\",6.24561792492472E-05);(\"holding\",6.24026265962302E-05);(\"hills\",6.23978545776445E-05);(\"tropical\",6.21878857598751E-05);(\"ways\",6.21629652183721E-05);(\"setting\",6.20988080796092E-05);(\"matter\",6.20638132766477E-05);(\"increasing\",6.20203348850893E-05);(\"shared\",6.19970050164483E-05);(\"applications\",6.19752658206691E-05);(\"guns\",6.19005041961603E-05);(\"broadcasting\",6.16735682011973E-05);(\"bowl\",6.16581916968657E-05);(\"treaty\",6.15887323152299E-05);(\"vehicle\",6.14100467304109E-05);(\"bad\",6.13782332731731E-05);(\"investigation\",6.13411175730623E-05);(\"steve\",6.1292336938631E-05);(\"quarter\",6.12361331641776E-05);(\"someone\",6.12218171084206E-05);(\"greatest\",6.10171505335241E-05);(\"northeast\",6.10049553749162E-05);(\"sunday\",6.09678396748055E-05);(\"launch\",6.09567049647722E-05);(\"wilson\",6.09492818247501E-05);(\"beat\",6.09164079189377E-05);(\"fiction\",6.0883003788838E-05);(\"locations\",6.08506601073129E-05);(\"incorporated\",6.08421765187162E-05);(\"establishment\",6.08071817157546E-05);(\"specifically\",6.07944563328595E-05);(\"studios\",6.07711264642184E-05);(\"stay\",6.07652939970581E-05);(\"walls\",6.07419641284171E-05);(\"converted\",6.07175738112015E-05);(\"weekly\",6.06672025039083E-05);(\"programming\",6.06438726352672E-05);(\"functions\",6.05903199822503E-05);(\"ending\",6.05542647307141E-05);(\"daniel\",6.05325255349349E-05);(\"animal\",6.05012423019844E-05);(\"arthur\",6.04710195176085E-05);(\"bob\",6.04699590690339E-05);(\"reasons\",6.04052717059837E-05);(\"architect\",6.03835325102046E-05);(\"francis\",6.03782302673316E-05);(\"criminal\",6.03262682871765E-05);(\"jim\",6.03193753714417E-05);(\"structures\",6.0305589539972E-05);(\"metropolitan\",6.02499159898058E-05);(\"identity\",6.0212800289695E-05);(\"meant\",6.02016655796618E-05);(\"constituency\",6.01449315809211E-05);(\"bureau\",6.01300853008768E-05);(\"condition\",6.01157692451198E-05);(\"churches\",6.01136483479706E-05);(\"communications\",6.00669886106885E-05);(\"developing\",6.00235102191301E-05);(\"represent\",6.00213893219809E-05);(\"determined\",5.99609437532291E-05);(\"contributed\",5.99529903889197E-05);(\"representing\",5.99370836603008E-05);(\"bands\",5.99280698474167E-05);(\"onto\",5.99058004273503E-05);(\"pope\",5.98851216801457E-05);(\"existence\",5.98761078672617E-05);(\"roads\",5.98432339614493E-05);(\"pieces\",5.98124809527861E-05);(\"let\",5.9731886861117E-05);(\"speech\",5.97021943010284E-05);(\"funds\",5.9664018152343E-05);(\"contact\",5.95919076492707E-05);(\"km²\",5.95309318562315E-05);(\"slightly\",5.94885139132478E-05);(\"cape\",5.94832116703748E-05);(\"centuries\",5.94768489789273E-05);(\"begin\",5.94678351660432E-05);(\"question\",5.94556400074354E-05);(\"mobile\",5.93591391871474E-05);(\"wild\",5.93543671685618E-05);(\"refers\",5.93427022342412E-05);(\"derived\",5.92758939740419E-05);(\"aid\",5.92530943296881E-05);(\"express\",5.92525641054008E-05);(\"mill\",5.91497005936653E-05);(\"bass\",5.91417472293558E-05);(\"contest\",5.91162964635656E-05);(\"ends\",5.90998595106594E-05);(\"qualified\",5.90929665949245E-05);(\"enemy\",5.90574415676756E-05);(\"taylor\",5.90229769890013E-05);(\"containing\",5.89572291773766E-05);(\"connection\",5.89264761687134E-05);(\"wrestling\",5.88840582257296E-05);(\"canal\",5.88718630671218E-05);(\"andrew\",5.88034641340605E-05);(\"publishing\",5.8786496956867E-05);(\"focused\",5.87403674438722E-05);(\"wins\",5.87350652009993E-05);(\"athletic\",5.86618942493523E-05);(\"occurs\",5.86242483249543E-05);(\"pilot\",5.85929650920038E-05);(\"rare\",5.85876628491308E-05);(\"weight\",5.85759979148103E-05);(\"maria\",5.84445022915607E-05);(\"corner\",5.84312466843783E-05);(\"regarding\",5.83946612085548E-05);(\"glass\",5.83941309842675E-05);(\"pair\",5.83204298083333E-05);(\"circuit\",5.82732398467639E-05);(\"doing\",5.82361241466531E-05);(\"influenced\",5.81496975878238E-05);(\"co\",5.81465162421E-05);(\"composition\",5.81284886163319E-05);(\"publications\",5.81025076262544E-05);(\"invited\",5.80807684304752E-05);(\"boat\",5.8069633720442E-05);(\"write\",5.80537269918231E-05);(\"weapons\",5.80516060946739E-05);(\"core\",5.80277460017455E-05);(\"writers\",5.79423798914908E-05);(\"faced\",5.79407892186289E-05);(\"electronic\",5.79333660786067E-05);(\"think\",5.78734507341422E-05);(\"believe\",5.7862316024109E-05);(\"successfully\",5.77896752967493E-05);(\"engineer\",5.77859637267383E-05);(\"davis\",5.76910535793122E-05);(\"abandoned\",5.76873420093011E-05);(\"kansas\",5.76661330378092E-05);(\"stand\",5.76009154504717E-05);(\"entrance\",5.75356978631342E-05);(\"minnesota\",5.74980519387362E-05);(\"why\",5.74635873600619E-05);(\"educated\",5.74604060143381E-05);(\"wind\",5.74259414356638E-05);(\"escape\",5.74195787442163E-05);(\"display\",5.73665563154866E-05);(\"mexican\",5.73373939796853E-05);(\"candidates\",5.73347428582488E-05);(\"passing\",5.73273197182267E-05);(\"twelve\",5.72573301123035E-05);(\"southwest\",5.72202144121927E-05);(\"count\",5.72175632907563E-05);(\"heat\",5.72021867864247E-05);(\"height\",5.7183098712082E-05);(\"birds\",5.71756755720598E-05);(\"norwegian\",5.71751453477725E-05);(\"finishing\",5.71650710863139E-05);(\"passenger\",5.71237135919047E-05);(\"target\",5.71146997790207E-05);(\"finds\",5.70892490132305E-05);(\"serious\",5.70839467703575E-05);(\"scheduled\",5.70203198558819E-05);(\"proved\",5.69980504358154E-05);(\"americans\",5.69975202115281E-05);(\"rear\",5.69349537456271E-05);(\"aged\",5.68925358026434E-05);(\"page\",5.68872335597704E-05);(\"survey\",5.68713268311515E-05);(\"chapel\",5.68368622524773E-05);(\"cathedral\",5.67822491508857E-05);(\"nothing\",5.67695237679906E-05);(\"views\",5.67249849278577E-05);(\"lands\",5.66793856391502E-05);(\"kill\",5.66534046490726E-05);(\"band's\",5.66481024061997E-05);(\"scale\",5.6643330387614E-05);(\"standing\",5.66359072475918E-05);(\"reform\",5.66215911918348E-05);(\"toward\",5.66056844632159E-05);(\"sought\",5.65839452674368E-05);(\"importance\",5.65653874173814E-05);(\"artillery\",5.65505411373371E-05);(\"dynasty\",5.65293321658452E-05);(\"sr\",5.65282717172706E-05);(\"selection\",5.65139556615136E-05);(\"quite\",5.65060022972041E-05);(\"composer\",5.64991093814693E-05);(\"tennis\",5.64847933257123E-05);(\"carry\",5.64079108040543E-05);(\"agriculture\",5.63692044310816E-05);(\"violence\",5.63580697210484E-05);(\"temperature\",5.63559488238992E-05);(\"moscow\",5.635382792675E-05);(\"failure\",5.63517070296008E-05);(\"nfl\",5.63495861324516E-05);(\"orders\",5.63076984137552E-05);(\"herself\",5.62689920407825E-05);(\"external\",5.62117278177545E-05);(\"finals\",5.61952908648483E-05);(\"melbourne\",5.6194760640561E-05);(\"cambridge\",5.61581751647375E-05);(\"contained\",5.60282702143499E-05);(\"occur\",5.6021377298615E-05);(\"piano\",5.59492667955427E-05);(\"communication\",5.59482063469681E-05);(\"ceremony\",5.58994257125368E-05);(\"heavily\",5.58813980867687E-05);(\"manchester\",5.58585984424149E-05);(\"jews\",5.58379196952104E-05);(\"missouri\",5.58326174523374E-05);(\"christmas\",5.58082271351218E-05);(\"heard\",5.5776413677884E-05);(\"decades\",5.57451304449335E-05);(\"straight\",5.56645363532644E-05);(\"card\",5.56539318675184E-05);(\"institution\",5.5631662447452E-05);(\"journalist\",5.56078023545236E-05);(\"homes\",5.56003792145015E-05);(\"loan\",5.55797004672969E-05);(\"muslim\",5.55478870100591E-05);(\"hundred\",5.55319802814402E-05);(\"expressed\",5.55192548985451E-05);(\"ideas\",5.53580667152069E-05);(\"introduction\",5.53543551451958E-05);(\"trying\",5.53395088651515E-05);(\"incident\",5.53310252765548E-05);(\"et\",5.53145883236486E-05);(\"bell\",5.53045140621899E-05);(\"really\",5.52631565677808E-05);(\"inhabitants\",5.52477800634492E-05);(\"reaching\",5.52265710919573E-05);(\"maintained\",5.52096039147638E-05);(\"signal\",5.52096039147638E-05);(\"producing\",5.52058923447528E-05);(\"invasion\",5.51899856161339E-05);(\"resistance\",5.5183092700399E-05);(\"sale\",5.51746091118023E-05);(\"advance\",5.51724882146531E-05);(\"ncaa\",5.5168776644642E-05);(\"fuel\",5.51581721588961E-05);(\"poet\",5.50892430015475E-05);(\"rich\",5.50749269457905E-05);(\"opportunity\",5.504364371284E-05);(\"conservation\",5.50367507971051E-05);(\"shape\",5.502402541421E-05);(\"indiana\",5.49975141998452E-05);(\"chemical\",5.49333570610823E-05);(\"patients\",5.48808648566399E-05);(\"fashion\",5.4831023773634E-05);(\"investment\",5.47912569520868E-05);(\"sri\",5.47504296819649E-05);(\"courses\",5.47196766733017E-05);(\"registered\",5.47053606175447E-05);(\"protect\",5.46989979260972E-05);(\"norway\",5.46396128059199E-05);(\"mind\",5.46024971058092E-05);(\"roof\",5.45839392557538E-05);(\"cold\",5.45622000599746E-05);(\"exist\",5.44672899125485E-05);(\"philippines\",5.44344160067361E-05);(\"hits\",5.44110861380951E-05);(\"motor\",5.43437476536084E-05);(\"motion\",5.43432174293211E-05);(\"consecutive\",5.43220084578292E-05);(\"follow\",5.43061017292103E-05);(\"vietnam\",5.42753487205471E-05);(\"colonial\",5.42695162533869E-05);(\"budget\",5.42605024405028E-05);(\"calls\",5.42069497874859E-05);(\"possibly\",5.41995266474637E-05);(\"merged\",5.41899826102924E-05);(\"colonel\",5.41751363302481E-05);(\"passes\",5.41507460130324E-05);(\"stephen\",5.41364299572754E-05);(\"comic\",5.41056769486122E-05);(\"laid\",5.41051467243249E-05);(\"promote\",5.40940120142917E-05);(\"perhaps\",5.40881795471314E-05);(\"historian\",5.40791657342474E-05);(\"extension\",5.40680310242141E-05);(\"lewis\",5.40611381084793E-05);(\"broken\",5.40574265384682E-05);(\"partnership\",5.40547754170317E-05);(\"tony\",5.40452313798604E-05);(\"engaged\",5.39179775509092E-05);(\"tennessee\",5.38851036450968E-05);(\"chamber\",5.38829827479476E-05);(\"avoid\",5.38554110850082E-05);(\"closely\",5.37944352919691E-05);(\"distinguished\",5.37583800404329E-05);(\"typical\",5.37276270317697E-05);(\"skills\",5.37027064902667E-05);(\"mine\",5.36836184159241E-05);(\"users\",5.36820277430622E-05);(\"screen\",5.36751348273273E-05);(\"harry\",5.36544560801228E-05);(\"dates\",5.36231728471723E-05);(\"causes\",5.36157497071501E-05);(\"residence\",5.36019638756804E-05);(\"voted\",5.36009034271058E-05);(\"des\",5.34959190182211E-05);(\"earl\",5.34747100467292E-05);(\"hired\",5.347258914958E-05);(\"portuguese\",5.34720589252927E-05);(\"colorado\",5.34662264581324E-05);(\"collected\",5.34264596365852E-05);(\"scenes\",5.34158551508393E-05);(\"consisting\",5.33994181979331E-05);(\"employees\",5.33570002549493E-05);(\"turkey\",5.33299588162972E-05);(\"banks\",5.33288983677226E-05);(\"entirely\",5.33246565734242E-05);(\"trail\",5.3308219620518E-05);(\"singing\",5.32382300145949E-05);(\"joining\",5.32249744074125E-05);(\"downtown\",5.32011143144841E-05);(\"resigned\",5.31820262401414E-05);(\"streets\",5.31374874000085E-05);(\"negative\",5.31290038114118E-05);(\"trained\",5.30325029911238E-05);(\"engines\",5.30224287296651E-05);(\"visual\",5.30171264867922E-05);(\"starts\",5.29593320394768E-05);(\"dvd\",5.29492577780182E-05);(\"junction\",5.29259279093772E-05);(\"notably\",5.29126723021947E-05);(\"ad\",5.29121420779074E-05);(\"improved\",5.29031282650234E-05);(\"universities\",5.2898886470725E-05);(\"try\",5.28453338177081E-05);(\"flow\",5.28283666405146E-05);(\"gene\",5.27774651089341E-05);(\"weather\",5.27732233146357E-05);(\"enter\",5.27461818759836E-05);(\"improve\",5.27345169416631E-05);(\"world's\",5.26793736157842E-05);(\"regarded\",5.25526500111203E-05);(\"values\",5.25330317124903E-05);(\"installed\",5.2532501488203E-05);(\"argued\",5.2494855563805E-05);(\"getting\",5.24211543878707E-05);(\"details\",5.24089592292629E-05);(\"picture\",5.236442038913E-05);(\"ford\",5.23628297162681E-05);(\"queensland\",5.23055654932401E-05);(\"habitat\",5.22191389344107E-05);(\"statement\",5.21814930100127E-05);(\"equal\",5.21809627857254E-05);(\"observed\",5.21746000942778E-05);(\"maryland\",5.21730094214159E-05);(\"establish\",5.21597538142335E-05);(\"ward\",5.21343030484433E-05);(\"save\",5.21305914784322E-05);(\"bodies\",5.20977175726198E-05);(\"fair\",5.20924153297468E-05);(\"task\",5.20452253681774E-05);(\"athletics\",5.20298488638458E-05);(\"stating\",5.19985656308953E-05);(\"paintings\",5.19916727151605E-05);(\"stores\",5.1930166697834E-05);(\"techniques\",5.19285760249722E-05);(\"web\",5.19185017635135E-05);(\"neighborhood\",5.19126692963533E-05);(\"attorney\",5.18506330547396E-05);(\"killing\",5.18262427375239E-05);(\"oregon\",5.18209404946509E-05);(\"city's\",5.17429975244183E-05);(\"chair\",5.17302721415232E-05);(\"seventh\",5.17164863100535E-05);(\"flag\",5.16846728528157E-05);(\"additionally\",5.16661150027603E-05);(\"don\",5.16544500684398E-05);(\"eye\",5.16385433398209E-05);(\"mining\",5.16252877326385E-05);(\"arizona\",5.15945347239753E-05);(\"costs\",5.15712048553342E-05);(\"teachers\",5.15643119395994E-05);(\"compete\",5.15489354352678E-05);(\"strength\",5.15165917537427E-05);(\"organisation\",5.15139406323062E-05);(\"adjacent\",5.14598577550019E-05);(\"spot\",5.14497834935433E-05);(\"evening\",5.13941099433771E-05);(\"amateur\",5.13925192705152E-05);(\"hope\",5.13697196261615E-05);(\"parliamentary\",5.13612360375647E-05);(\"crisis\",5.13416177389348E-05);(\"winners\",5.13251807860286E-05);(\"sections\",5.13023811416748E-05);(\"dam\",5.12631445444149E-05);(\"albert\",5.12355728814754E-05);(\"turkish\",5.12286799657406E-05);(\"spirit\",5.12000478542266E-05);(\"interests\",5.11629321541158E-05);(\"address\",5.11470254254969E-05);(\"die\",5.10998354639275E-05);(\"khan\",5.10860496324578E-05);(\"looking\",5.10462828109105E-05);(\"causing\",5.10425712408994E-05);(\"coal\",5.10234831665568E-05);(\"humans\",5.10176506993965E-05);(\"switzerland\",5.10070462136506E-05);(\"links\",5.10017439707776E-05);(\"describes\",5.09964417279046E-05);(\"chapter\",5.09927301578936E-05);(\"anniversary\",5.09784141021366E-05);(\"wisconsin\",5.09227405519704E-05);(\"seconds\",5.08697181232407E-05);(\"walter\",5.08490393760362E-05);(\"productions\",5.08485091517489E-05);(\"briefly\",5.0841616236014E-05);(\"objects\",5.08357837688538E-05);(\"vocals\",5.08352535445665E-05);(\"grounds\",5.0821997937384E-05);(\"controlled\",5.07832915644114E-05);(\"cabinet\",5.0764733714356E-05);(\"formula\",5.06783071555267E-05);(\"musicians\",5.0653916838311E-05);(\"easily\",5.06327078668191E-05);(\"operate\",5.05812761109514E-05);(\"ruled\",5.05537044480119E-05);(\"arena\",5.05457510837025E-05);(\"driver\",5.03999394046959E-05);(\"directors\",5.03999394046959E-05);(\"foot\",5.03941069375356E-05);(\"courts\",5.03903953675246E-05);(\"divisions\",5.03660050503089E-05);(\"membership\",5.03209359858887E-05);(\"protein\",5.03135128458666E-05);(\"rivers\",5.02334489784848E-05);(\"session\",5.01682313911473E-05);(\"borough\",5.01258134481635E-05);(\"talk\",5.0085516402329E-05);(\"seems\",5.00770328137322E-05);(\"distributed\",5.00743816922958E-05);(\"du\",5.00356753193231E-05);(\"calling\",4.99842435634553E-05);(\"goods\",4.99572021248032E-05);(\"purchase\",4.99206166489797E-05);(\"ahead\",4.98278273987028E-05);(\"electoral\",4.98129811186585E-05);(\"chance\",4.98124508943712E-05);(\"wars\",4.9787000128581E-05);(\"duty\",4.97668516056637E-05);(\"ethnic\",4.97546564470559E-05);(\"gain\",4.97419310641608E-05);(\"chose\",4.96963317754533E-05);(\"combination\",4.96931504297295E-05);(\"expedition\",4.96358862067014E-05);(\"legacy\",4.96141470109223E-05);(\"ben\",4.96130865623477E-05);(\"concluded\",4.96035425251763E-05);(\"earliest\",4.95632454793418E-05);(\"formal\",4.95462783021483E-05);(\"controversy\",4.95165857420597E-05);(\"didn't\",4.94333405289541E-05);(\"residential\",4.94121315574622E-05);(\"di\",4.94073595388766E-05);(\"reduce\",4.93856203430974E-05);(\"reality\",4.93787274273626E-05);(\"survived\",4.9372364735915E-05);(\"singapore\",4.93410815029645E-05);(\"egypt\",4.9329416568644E-05);(\"statistics\",4.93225236529091E-05);(\"participate\",4.93177516343234E-05);(\"credit\",4.92923008685332E-05);(\"chain\",4.92859381770856E-05);(\"reaction\",4.92816963827873E-05);(\"affected\",4.9270561672754E-05);(\"counties\",4.92244321597592E-05);(\"kentucky\",4.91979209453944E-05);(\"businesses\",4.91512612081123E-05);(\"routes\",4.91448985166647E-05);(\"stands\",4.91146757322888E-05);(\"designs\",4.89471248575031E-05);(\"actual\",4.88893304101877E-05);(\"regularly\",4.88850886158894E-05);(\"discovery\",4.8880846821591E-05);(\"miller\",4.87933598141871E-05);(\"persons\",4.87233702082639E-05);(\"criticism\",4.87085239282196E-05);(\"images\",4.87053425824958E-05);(\"poverty\",4.86926171996007E-05);(\"hour\",4.86581526209264E-05);(\"islamic\",4.86284600608378E-05);(\"iv\",4.85844514449922E-05);(\"commune\",4.85833909964176E-05);(\"factor\",4.85547588849036E-05);(\"decade\",4.85542286606163E-05);(\"strike\",4.84900715218534E-05);(\"dean\",4.84391699902729E-05);(\"commonwealth\",4.84333375231126E-05);(\"folk\",4.84264446073778E-05);(\"operates\",4.84174307944937E-05);(\"contain\",4.83363064785373E-05);(\"rooms\",4.83225206470676E-05);(\"cycle\",4.83150975070455E-05);(\"degrees\",4.83140370584709E-05);(\"brief\",4.8273209788349E-05);(\"prix\",4.82562426111555E-05);(\"coastal\",4.82382149853875E-05);(\"howard\",4.81830716595086E-05);(\"outstanding\",4.8182011210934E-05);(\"link\",4.81613324637294E-05);(\"austria\",4.81608022394421E-05);(\"recordings\",4.81300492307789E-05);(\"leads\",4.80807383720604E-05);(\"fm\",4.80499853633972E-05);(\"brian\",4.80457435690988E-05);(\"trophy\",4.80446831205242E-05);(\"emergency\",4.79571961131202E-05);(\"racial\",4.78792531428876E-05);(\"plus\",4.78670579842798E-05);(\"bottom\",4.78553930499593E-05);(\"finance\",4.78389560970531E-05);(\"pro\",4.78182773498485E-05);(\"reign\",4.78129751069755E-05);(\"ones\",4.77604829025332E-05);(\"diego\",4.7681479483726E-05);(\"scholars\",4.76676936522563E-05);(\"items\",4.7667163427969E-05);(\"selling\",4.76661029793944E-05);(\"shooting\",4.76544380450738E-05);(\"accused\",4.7618913017825E-05);(\"progress\",4.76173223449631E-05);(\"capture\",4.75945227006093E-05);(\"device\",4.75802066448523E-05);(\"pictures\",4.75722532805429E-05);(\"demand\",4.75568767762113E-05);(\"row\",4.75181704032386E-05);(\"injured\",4.75128681603656E-05);(\"greece\",4.74842360488516E-05);(\"gets\",4.74619666287852E-05);(\"shop\",4.74428785544425E-05);(\"meanwhile\",4.7434925190133E-05);(\"opposite\",4.74269718258236E-05);(\"dry\",4.73850841071271E-05);(\"underground\",4.73771307428177E-05);(\"contributions\",4.73654658084972E-05);(\"apart\",4.73193362955024E-05);(\"appeal\",4.72854019411154E-05);(\"crossing\",4.7252528035303E-05);(\"musician\",4.72376817552587E-05);(\"assistance\",4.72281377180873E-05);(\"moth\",4.72058682980209E-05);(\"factors\",4.71926126908385E-05);(\"debuted\",4.71549667664404E-05);(\"charges\",4.71517854207166E-05);(\"soundtrack\",4.71422413835453E-05);(\"swiss\",4.71390600378215E-05);(\"rating\",4.71008838891361E-05);(\"universal\",4.70817958147935E-05);(\"charts\",4.6982643873069E-05);(\"orange\",4.69789323030579E-05);(\"owners\",4.69582535558533E-05);(\"painted\",4.69333330143504E-05);(\"driving\",4.6914775164295E-05);(\"lane\",4.69041706785491E-05);(\"sam\",4.68580411655543E-05);(\"behavior\",4.68304695026149E-05);(\"associate\",4.68166836711451E-05);(\"faith\",4.68103209796976E-05);(\"praised\",4.67504056352331E-05);(\"elementary\",4.67488149623712E-05);(\"stages\",4.67440429437855E-05);(\"thousands\",4.67366198037633E-05);(\"maintain\",4.67212432994317E-05);(\"medieval\",4.6693141412205E-05);(\"understanding\",4.66920809636304E-05);(\"ltd\",4.66761742350115E-05);(\"premiered\",4.66491327963594E-05);(\"manufacturing\",4.65452088360493E-05);(\"demographics\",4.65080931359385E-05);(\"passengers\",4.64556009314961E-05);(\"attached\",4.64269688199821E-05);(\"advantage\",4.64094714185013E-05);(\"attend\",4.63967460356062E-05);(\"landing\",4.63686441483795E-05);(\"drawn\",4.63394818125782E-05);(\"request\",4.63352400182798E-05);(\"scheme\",4.62970638695944E-05);(\"houston\",4.6278506019539E-05);(\"documents\",4.62663108609312E-05);(\"committed\",4.62562365994726E-05);(\"simon\",4.6163977573483E-05);(\"drew\",4.61565544334608E-05);(\"offensive\",4.61342850133944E-05);(\"sequence\",4.6090806621836E-05);(\"worth\",4.60685372017696E-05);(\"rejected\",4.6053160697438E-05);(\"mathematics\",4.60526304731507E-05);(\"collaboration\",4.60319517259461E-05);(\"defensive\",4.60102125301669E-05);(\"accident\",4.59672643628959E-05);(\"path\",4.5965673690034E-05);(\"door\",4.59550692042881E-05);(\"golf\",4.59529483071389E-05);(\"hollywood\",4.58951538598236E-05);(\"otherwise\",4.58612195054366E-05);(\"arab\",4.58373594125082E-05);(\"diocese\",4.58246340296131E-05);(\"fast\",4.58076668524196E-05);(\"distinct\",4.57949414695245E-05);(\"headed\",4.57795649651929E-05);(\"senator\",4.57716116008834E-05);(\"extra\",4.57684302551597E-05);(\"contrast\",4.57631280122867E-05);(\"wounded\",4.57413888165075E-05);(\"represents\",4.57238914150267E-05);(\"eyes\",4.56888966120652E-05);(\"ep\",4.56888966120652E-05);(\"insurance\",4.56607947248384E-05);(\"measures\",4.56130745389817E-05);(\"hamilton\",4.55976980346501E-05);(\"economics\",4.55674752502742E-05);(\"nor\",4.5508090130097E-05);(\"biggest\",4.54974856443511E-05);(\"extremely\",4.54921834014781E-05);(\"credited\",4.54895322800416E-05);(\"priest\",4.54852904857433E-05);(\"purposes\",4.54370400755993E-05);(\"classification\",4.54280262627152E-05);(\"jean\",4.54243146927041E-05);(\"creative\",4.53728829368364E-05);(\"samuel\",4.53415997038859E-05);(\"bird\",4.5340009031024E-05);(\"stood\",4.53230418538305E-05);(\"minute\",4.52853959294324E-05);(\"responsibility\",4.52843354808578E-05);(\"starred\",4.52620660607914E-05);(\"ali\",4.52424477621614E-05);(\"replace\",4.52307828278409E-05);(\"czech\",4.5229192154979E-05);(\"flowers\",4.5175639501962E-05);(\"legislation\",4.51724581562382E-05);(\"duties\",4.51204961760832E-05);(\"mean\",4.51141334846356E-05);(\"charged\",4.5098756980304E-05);(\"iowa\",4.5084440924547E-05);(\"company's\",4.50658830744916E-05);(\"retained\",4.50621715044805E-05);(\"damaged\",4.50494461215854E-05);(\"ownership\",4.50303580472427E-05);(\"showing\",4.50118001971873E-05);(\"dog\",4.49990748142922E-05);(\"artistic\",4.49958934685684E-05);(\"trip\",4.49555964227339E-05);(\"flat\",4.49555964227339E-05);(\"louisiana\",4.49545359741593E-05);(\"caught\",4.49444617127007E-05);(\"require\",4.49412803669769E-05);(\"whilst\",4.49216620683469E-05);(\"quebec\",4.49211318440596E-05);(\"tries\",4.49115878068883E-05);(\"afterwards\",4.48781836767886E-05);(\"painter\",4.48463702195508E-05);(\"determine\",4.48437190981143E-05);(\"popularity\",4.48437190981143E-05);(\"israeli\",4.48177381080368E-05);(\"delivered\",4.48134963137384E-05);(\"turns\",4.48113754165892E-05);(\"jesus\",4.47933477908211E-05);(\"ages\",4.47906966693846E-05);(\"learned\",4.47694876978928E-05);(\"restaurant\",4.47694876978928E-05);(\"colony\",4.47647156793071E-05);(\"danish\",4.47641854550198E-05);(\"accompanied\",4.47482787264009E-05);(\"assumed\",4.47397951378042E-05);(\"ray\",4.47307813249201E-05);(\"qualifying\",4.47069212319918E-05);(\"protected\",4.46862424847872E-05);(\"subjects\",4.46777588961905E-05);(\"roughly\",4.46427640932289E-05);(\"measure\",4.45833789730516E-05);(\"frederick\",4.45632304501344E-05);(\"step\",4.45483841700901E-05);(\"detroit\",4.45356587871949E-05);(\"difference\",4.45112684699793E-05);(\"severe\",4.44253721354372E-05);(\"equivalent\",4.44227210140008E-05);(\"object\",4.44110560796802E-05);(\"saturday\",4.44036329396581E-05);(\"admitted\",4.43956795753486E-05);(\"marketing\",4.43643963423981E-05);(\"translated\",4.43352340065968E-05);(\"puerto\",4.43347037823095E-05);(\"restored\",4.4323038847989E-05);(\"circle\",4.43028903250717E-05);(\"differences\",4.42922858393258E-05);(\"competitions\",4.42371425134469E-05);(\"policies\",4.42360820648723E-05);(\"philip\",4.42329007191486E-05);(\"kings\",4.42281287005629E-05);(\"significantly\",4.42106312990821E-05);(\"arrival\",4.42063895047837E-05);(\"leg\",4.4192603673314E-05);(\"peninsula\",4.41915432247394E-05);(\"sell\",4.4172985374684E-05);(\"relief\",4.4169273804673E-05);(\"comics\",4.41146607030814E-05);(\"brain\",4.40547453586169E-05);(\"heads\",4.4033536387125E-05);(\"wave\",4.39948300141524E-05);(\"ukrainian\",4.39921788927159E-05);(\"experienced\",4.39672583512129E-05);(\"returns\",4.39444587068592E-05);(\"respect\",4.39439284825719E-05);(\"broad\",4.39322635482514E-05);(\"dating\",4.39142359224833E-05);(\"adapted\",4.39126452496214E-05);(\"strategy\",4.38723482037868E-05);(\"aviation\",4.38331116065269E-05);(\"aspects\",4.38140235321842E-05);(\"separated\",4.38039492707256E-05);(\"novels\",4.37928145606923E-05);(\"oklahoma\",4.37906936635431E-05);(\"juan\",4.36984346375535E-05);(\"resolution\",4.36782861146363E-05);(\"daughters\",4.36204916673209E-05);(\"devices\",4.35987524715418E-05);(\"argentina\",4.35971617986799E-05);(\"beautiful\",4.35939804529561E-05);(\"translation\",4.35823155186356E-05);(\"actors\",4.35584554257072E-05);(\"waters\",4.35467904913867E-05);(\"baby\",4.35367162299281E-05);(\"twenty\",4.35155072584362E-05);(\"losses\",4.35075538941267E-05);(\"missing\",4.35059632212648E-05);(\"relative\",4.34826333526238E-05);(\"testing\",4.34725590911652E-05);(\"alabama\",4.34683172968668E-05);(\"occupation\",4.34672568482922E-05);(\"lawyer\",4.34577128111209E-05);(\"mississippi\",4.34545314653971E-05);(\"carrying\",4.34529407925352E-05);(\"storage\",4.34391549610655E-05);(\"father's\",4.34338527181925E-05);(\"vision\",4.33919649994961E-05);(\"interested\",4.33702258037169E-05);(\"coalition\",4.33331101036061E-05);(\"instruments\",4.32641809462576E-05);(\"anthony\",4.3263120497683E-05);(\"physics\",4.32419115261911E-05);(\"pattern\",4.32376697318927E-05);(\"soul\",4.32164607604009E-05);(\"fighter\",4.31904797703233E-05);(\"king's\",4.31851775274504E-05);(\"window\",4.31607872102347E-05);(\"allied\",4.31517733973507E-05);(\"christ\",4.31485920516269E-05);(\"magic\",4.3109355454367E-05);(\"blues\",4.30865558100132E-05);(\"fired\",4.303618450272E-05);(\"princess\",4.30261102412614E-05);(\"requirements\",4.30049012697695E-05);(\"depending\",4.2993236335449E-05);(\"practices\",4.29905852140125E-05);(\"suggests\",4.29640739996477E-05);(\"everything\",4.29608926539239E-05);(\"acid\",4.29524090653271E-05);(\"wings\",4.29349116638464E-05);(\"douglas\",4.29269582995369E-05);(\"meters\",4.29025679823213E-05);(\"stopped\",4.28050067134587E-05);(\"defeating\",4.27578167518893E-05);(\"journey\",4.27440309204196E-05);(\"infrastructure\",4.2737668228972E-05);(\"involving\",4.27217615003531E-05);(\"iraq\",4.26777528845075E-05);(\"ridge\",4.26772226602202E-05);(\"guide\",4.26560136887283E-05);(\"anderson\",4.26395767358221E-05);(\"fishing\",4.26374558386729E-05);(\"schedule\",4.26199584371921E-05);(\"technique\",4.26157166428938E-05);(\"solution\",4.25823125127941E-05);(\"partners\",4.25759498213465E-05);(\"questions\",4.25600430927276E-05);(\"collections\",4.25324714297882E-05);(\"concerns\",4.25197460468931E-05);(\"map\",4.2507020663998E-05);(\"rates\",4.24799792253458E-05);(\"visitors\",4.24465750952461E-05);(\"feel\",4.23887806479308E-05);(\"inner\",4.23702227978754E-05);(\"belgium\",4.23612089849914E-05);(\"markets\",4.23394697892122E-05);(\"gender\",4.23225026120187E-05);(\"charter\",4.23177305934331E-05);(\"debate\",4.23145492477093E-05);(\"moon\",4.23002331919523E-05);(\"gardens\",4.22896287062063E-05);(\"antonio\",4.22885682576317E-05);(\"steam\",4.22806148933223E-05);(\"gulf\",4.22769033233112E-05);(\"formally\",4.22673592861399E-05);(\"mrs\",4.2255164127532E-05);(\"indigenous\",4.22111555116864E-05);(\"dublin\",4.22026719230897E-05);(\"grey\",4.2154951737233E-05);(\"childhood\",4.21501797186473E-05);(\"opinion\",4.21374543357522E-05);(\"mental\",4.21337427657411E-05);(\"ottoman\",4.2126319625719E-05);(\"socialist\",4.21241987285698E-05);(\"context\",4.21088222242382E-05);(\"terminal\",4.20939759441939E-05);(\"guitarist\",4.20892039256082E-05);(\"authors\",4.20828412341606E-05);(\"honours\",4.20791296641496E-05);(\"watch\",4.20611020383815E-05);(\"swimming\",4.20436046369007E-05);(\"adam\",4.20186840953977E-05);(\"harvard\",4.19534665080603E-05);(\"prepared\",4.19486944894746E-05);(\"brick\",4.19465735923254E-05);(\"allen\",4.18882489207228E-05);(\"definition\",4.18590865849215E-05);(\"soil\",4.18002316890315E-05);(\"criticized\",4.17949294461586E-05);(\"components\",4.17922783247221E-05);(\"continuing\",4.17906876518602E-05);(\"parallel\",4.17482697088764E-05);(\"flows\",4.17387256717051E-05);(\"replacement\",4.17371349988432E-05);(\"forests\",4.17334234288321E-05);(\"stayed\",4.1731302531683E-05);(\"ceo\",4.17307723073957E-05);(\"classified\",4.17106237844784E-05);(\"da\",4.16793405515279E-05);(\"clark\",4.16772196543787E-05);(\"successor\",4.16740383086549E-05);(\"bear\",4.16713871872184E-05);(\"pool\",4.16480573185774E-05);(\"frame\",4.16411644028425E-05);(\"coverage\",4.16401039542679E-05);(\"covering\",4.16332110385331E-05);(\"industries\",4.16268483470855E-05);(\"gordon\",4.16173043099142E-05);(\"tank\",4.16088207213174E-05);(\"miami\",4.15934442169858E-05);(\"lincoln\",4.15441333582672E-05);(\"papers\",4.15425426854053E-05);(\"i'm\",4.1538300891107E-05);(\"temporary\",4.15181523681897E-05);(\"wine\",4.15176221439024E-05);(\"characteristics\",4.14863389109519E-05);(\"tell\",4.14852784623773E-05);(\"honorary\",4.14471023136919E-05);(\"shore\",4.14258933422001E-05);(\"arranged\",4.14004425764098E-05);(\"brazilian\",4.13903683149512E-05);(\"grow\",4.13829451749291E-05);(\"satellite\",4.13675686705975E-05);(\"monument\",4.13548432877023E-05);(\"legislature\",4.13325738676359E-05);(\"sisters\",4.13278018490502E-05);(\"tamil\",4.13039417561219E-05);(\"none\",4.12922768218013E-05);(\"finding\",4.12806118874808E-05);(\"corporate\",4.12403148416463E-05);(\"denmark\",4.11735065814469E-05);(\"der\",4.11491162642312E-05);(\"ensure\",4.11448744699329E-05);(\"networks\",4.11348002084742E-05);(\"gay\",4.10913218169159E-05);(\"threat\",4.10828382283192E-05);(\"requires\",4.10563270139543E-05);(\"anne\",4.10483736496449E-05);(\"capable\",4.10409505096227E-05);(\"linked\",4.10388296124735E-05);(\"offering\",4.10335273696006E-05);(\"cavalry\",4.1032466921026E-05);(\"expression\",4.10314064724514E-05);(\"boundary\",4.10261042295784E-05);(\"message\",4.09980023423517E-05);(\"connecticut\",4.09794444922963E-05);(\"tests\",4.09656586608266E-05);(\"occasionally\",4.09630075393901E-05);(\"appearing\",4.09423287921855E-05);(\"max\",4.0902031746351E-05);(\"parks\",4.08935481577542E-05);(\"commissioner\",4.08755205319862E-05);(\"revival\",4.0868097391964E-05);(\"script\",4.08596138033673E-05);(\"montreal\",4.0848479093334E-05);(\"eleven\",4.08171958603835E-05);(\"tokyo\",4.07694756745268E-05);(\"dream\",4.07434946844493E-05);(\"whereas\",4.07291786286923E-05);(\"reputation\",4.07191043672336E-05);(\"rescue\",4.07026674143274E-05);(\"orthodox\",4.06989558443164E-05);(\"instance\",4.06501752098851E-05);(\"patrick\",4.06438125184375E-05);(\"sky\",4.059821322973E-05);(\"alan\",4.05950318840062E-05);(\"constant\",4.05610975296192E-05);(\"restoration\",4.05531441653098E-05);(\"operational\",4.05510232681606E-05);(\"critic\",4.05208004837847E-05);(\"wooden\",4.05202702594974E-05);(\"limit\",4.04937590451326E-05);(\"gone\",4.04911079236961E-05);(\"hosts\",4.04667176064804E-05);(\"influential\",4.0439145943541E-05);(\"voivodeship\",4.04375552706791E-05);(\"salt\",4.04359645978172E-05);(\"ago\",4.04306623549443E-05);(\"couples\",4.04158160749E-05);(\"branches\",4.04083929348778E-05);(\"thing\",4.04083929348778E-05);(\"cable\",4.03723376833416E-05);(\"laboratory\",4.03606727490211E-05);(\"metro\",4.03601425247338E-05);(\"ukraine\",4.02869715730869E-05);(\"considerable\",4.0280078657352E-05);(\"edinburgh\",4.0280078657352E-05);(\"somewhat\",4.0265762601595E-05);(\"employment\",4.02355398172191E-05);(\"entering\",4.02344793686445E-05);(\"element\",4.02201633128875E-05);(\"cinema\",4.02042565842686E-05);(\"raise\",4.01915312013735E-05);(\"adding\",4.01867591827878E-05);(\"user\",4.0183577837064E-05);(\"solar\",4.01575968469865E-05);(\"accounts\",4.01501737069643E-05);(\"eighth\",4.01379785483565E-05);(\"poem\",4.01172998011519E-05);(\"vs\",4.01141184554282E-05);(\"listing\",4.01024535211076E-05);(\"strategic\",4.00404172794939E-05);(\"origins\",4.0029812793748E-05);(\"medals\",4.00001202336594E-05);(\"atlanta\",3.9990576196488E-05);(\"increasingly\",3.99889855236262E-05);(\"depression\",3.99698974492835E-05);(\"prisoners\",3.99486884777916E-05);(\"visiting\",3.9928009730587E-05);(\"celebrated\",3.98898335819017E-05);(\"narrow\",3.98829406661668E-05);(\"proper\",3.98670339375479E-05);(\"adults\",3.98468854146307E-05);(\"processes\",3.98145417331056E-05);(\"huge\",3.98092394902326E-05);(\"centers\",3.97970443316248E-05);(\"threatened\",3.97657610986743E-05);(\"victims\",3.97588681829394E-05);(\"decline\",3.97472032486189E-05);(\"revolutionary\",3.97445521271824E-05);(\"austrian\",3.97153897913811E-05);(\"meets\",3.97016039599114E-05);(\"coaching\",3.96862274555798E-05);(\"cleveland\",3.96825158855687E-05);(\"rapid\",3.96538837740547E-05);(\"initiative\",3.96454001854579E-05);(\"trading\",3.96104053824964E-05);(\"walk\",3.95817732709823E-05);(\"planet\",3.94974676093022E-05);(\"amongst\",3.94619425820533E-05);(\"annually\",3.94566403391803E-05);(\"peaked\",3.94402033862741E-05);(\"architectural\",3.94370220405503E-05);(\"dan\",3.93834693875334E-05);(\"franchise\",3.93834693875334E-05);(\"forming\",3.93474141359972E-05);(\"newspapers\",3.93028752958643E-05);(\"rice\",3.928802901582E-05);(\"ambassador\",3.92705316143392E-05);(\"ryan\",3.92360670356649E-05);(\"jobs\",3.92031931298525E-05);(\"welsh\",3.9177212139775E-05);(\"achieve\",3.91469893553991E-05);(\"rising\",3.91257803839072E-05);(\"portugal\",3.91183572438851E-05);(\"charity\",3.91151758981613E-05);(\"declined\",3.90791206466251E-05);(\"tunnel\",3.90727579551775E-05);(\"en\",3.90462467408127E-05);(\"concrete\",3.90282191150446E-05);(\"filled\",3.90250377693208E-05);(\"kevin\",3.90139030592876E-05);(\"domain\",3.9003828797829E-05);(\"eric\",3.89979963306687E-05);(\"cards\",3.89969358820941E-05);(\"vienna\",3.89730757891658E-05);(\"surgery\",3.8969894443442E-05);(\"participation\",3.89539877148231E-05);(\"territories\",3.89375507619169E-05);(\"camera\",3.88845283331872E-05);(\"strongly\",3.88702122774302E-05);(\"credits\",3.88452917359273E-05);(\"proposal\",3.88415801659162E-05);(\"benefit\",3.882514321301E-05);(\"fixed\",3.88155991758387E-05);(\"appointment\",3.87843159428882E-05);(\"plane\",3.87668185414074E-05);(\"universe\",3.8748260691352E-05);(\"consider\",3.87424282241917E-05);(\"themes\",3.87408375513298E-05);(\"competing\",3.87100845426666E-05);(\"legend\",3.87074334212302E-05);(\"anna\",3.86841035525891E-05);(\"maintenance\",3.86756199639924E-05);(\"replacing\",3.86655457025337E-05);(\"audio\",3.86459274039037E-05);(\"lawrence\",3.86390344881689E-05);(\"tied\",3.86363833667324E-05);(\"tall\",3.85865422837265E-05);(\"moore\",3.85727564522568E-05);(\"learn\",3.85541986022014E-05);(\"anything\",3.85536683779141E-05);(\"surviving\",3.85526079293395E-05);(\"helping\",3.85520777050522E-05);(\"bringing\",3.85250362664001E-05);(\"neither\",3.85207944721017E-05);(\"liverpool\",3.85170829020907E-05);(\"honors\",3.8497994827748E-05);(\"versus\",3.84799672019799E-05);(\"filmed\",3.84651209219356E-05);(\"cited\",3.84635302490737E-05);(\"basin\",3.84635302490737E-05);(\"modified\",3.84481537447421E-05);(\"hair\",3.84370190347089E-05);(\"frequency\",3.84295958946867E-05);(\"surrounded\",3.84227029789519E-05);(\"vessels\",3.8390889521714E-05);(\"involvement\",3.83808152602554E-05);(\"mouth\",3.83702107745095E-05);(\"explained\",3.83208999157909E-05);(\"constitutional\",3.82927980285642E-05);(\"speak\",3.82874957856912E-05);(\"changing\",3.82737099542215E-05);(\"tribe\",3.82646961413374E-05);(\"landscape\",3.8262045019901E-05);(\"completion\",3.82376547026853E-05);(\"dated\",3.82222781983537E-05);(\"gate\",3.82079621425967E-05);(\"mode\",3.81305493966514E-05);(\"malaysia\",3.81215355837673E-05);(\"abbey\",3.81210053594801E-05);(\"lists\",3.8111991546596E-05);(\"grown\",3.81114613223087E-05);(\"movies\",3.81109310980214E-05);(\"conduct\",3.80971452665517E-05);(\"uncle\",3.80950243694025E-05);(\"existed\",3.8092373247966E-05);(\"safe\",3.80870710050931E-05);(\"tools\",3.80860105565185E-05);(\"springs\",3.80849501079439E-05);(\"suicide\",3.80775269679217E-05);(\"graduating\",3.80451832863966E-05);(\"baltimore\",3.80223836420429E-05);(\"hundreds\",3.8020792969181E-05);(\"seattle\",3.80170813991699E-05);(\"movements\",3.80112489320096E-05);(\"struck\",3.79969328762526E-05);(\"truth\",3.79942817548162E-05);(\"arm\",3.79635287461529E-05);(\"doubles\",3.79571660547054E-05);(\"vocal\",3.79396686532246E-05);(\"masters\",3.78733906173125E-05);(\"cm\",3.78654372530031E-05);(\"roger\",3.78596047858428E-05);(\"josé\",3.78537723186825E-05);(\"advertising\",3.78362749172018E-05);(\"easy\",3.78235495343066E-05);(\"electrical\",3.7813475272848E-05);(\"colleges\",3.77943871985053E-05);(\"experimental\",3.77933267499307E-05);(\"fan\",3.77721177784389E-05);(\"honour\",3.77662853112786E-05);(\"skin\",3.77662853112786E-05);(\"mounted\",3.77620435169802E-05);(\"margaret\",3.77275789383059E-05);(\"monastery\",3.77153837796981E-05);(\"happened\",3.77069001911014E-05);(\"signing\",3.76602404538193E-05);(\"drawing\",3.76432732766258E-05);(\"missions\",3.7634789688029E-05);(\"integrated\",3.76194131836974E-05);(\"studying\",3.76024460065039E-05);(\"ranking\",3.75913112964707E-05);(\"summit\",3.75854788293104E-05);(\"manner\",3.75754045678518E-05);(\"speaker\",3.75504840263489E-05);(\"lakes\",3.7538288867741E-05);(\"li\",3.75260937091332E-05);(\"las\",3.75048847376413E-05);(\"hungarian\",3.74698899346798E-05);(\"occasions\",3.74656481403814E-05);(\"walker\",3.74539832060609E-05);(\"talent\",3.74508018603371E-05);(\"edited\",3.74439089446022E-05);(\"filed\",3.74290626645579E-05);(\"designer\",3.7423760421685E-05);(\"experiences\",3.74120954873644E-05);(\"gmina\",3.74004305530439E-05);(\"representation\",3.73749797872537E-05);(\"apparently\",3.73723286658172E-05);(\"rounds\",3.73171853399383E-05);(\"massive\",3.72652233597833E-05);(\"horses\",3.72434841640041E-05);(\"indonesia\",3.72286378839598E-05);(\"indicated\",3.72228054167995E-05);(\"pittsburgh\",3.72084893610425E-05);(\"poems\",3.71952337538601E-05);(\"nomination\",3.71480437922907E-05);(\"tourism\",3.7143271773705E-05);(\"illegal\",3.71369090822575E-05);(\"meetings\",3.7128955717948E-05);(\"bush\",3.7105625849307E-05);(\"makeup\",3.7100323606434E-05);(\"elevation\",3.70849471021024E-05);(\"team's\",3.70849471021024E-05);(\"progressive\",3.70727519434946E-05);(\"secure\",3.70340455705219E-05);(\"controversial\",3.70266224304998E-05);(\"lasted\",3.70202597390522E-05);(\"kent\",3.70059436832952E-05);(\"stream\",3.69147451058802E-05);(\"mp\",3.68834618729297E-05);(\"dave\",3.68261976499016E-05);(\"revenue\",3.67917330712274E-05);(\"spiritual\",3.67890819497909E-05);(\"clinical\",3.67859006040671E-05);(\"superior\",3.67599196139896E-05);(\"output\",3.67254550353153E-05);(\"dna\",3.6719622568155E-05);(\"hungary\",3.67015949423869E-05);(\"minimum\",3.66973531480885E-05);(\"rio\",3.66973531480885E-05);(\"kim\",3.66835673166188E-05);(\"moment\",3.66369075793367E-05);(\"eliminated\",3.66321355607511E-05);(\"styles\",3.66210008507178E-05);(\"touring\",3.66093359163973E-05);(\"solid\",3.65860060477562E-05);(\"bears\",3.65759317862976E-05);(\"touchdown\",3.65759317862976E-05);(\"principles\",3.65722202162865E-05);(\"speaking\",3.65541925905184E-05);(\"scholarship\",3.65441183290598E-05);(\"net\",3.65382858618995E-05);(\"medium\",3.65287418247282E-05);(\"concerts\",3.65149559932585E-05);(\"denied\",3.65138955446839E-05);(\"column\",3.65075328532363E-05);(\"thousand\",3.64948074703412E-05);(\"colour\",3.64857936574572E-05);(\"equipped\",3.64619335645288E-05);(\"effectively\",3.64555708730813E-05);(\"shell\",3.64322410044402E-05);(\"carl\",3.64189853972578E-05);(\"normally\",3.64089111357992E-05);(\"extreme\",3.6363842071379E-05);(\"producers\",3.63320286141412E-05);(\"turning\",3.63171823340968E-05);(\"index\",3.63086987455001E-05);(\"rival\",3.62726434939639E-05);(\"bond\",3.62694621482401E-05);(\"feed\",3.62625692325053E-05);(\"unusual\",3.6242420709588E-05);(\"hence\",3.62408300367261E-05);(\"alex\",3.62402998124388E-05);(\"supporters\",3.62270442052564E-05);(\"harris\",3.62185606166597E-05);(\"baron\",3.62143188223613E-05);(\"jordan\",3.61925796265821E-05);(\"license\",3.61840960379854E-05);(\"option\",3.61793240193997E-05);(\"alleged\",3.61787937951124E-05);(\"broadway\",3.61724311036649E-05);(\"similarly\",3.61528128050349E-05);(\"perfect\",3.61363758521287E-05);(\"adaptation\",3.61289527121065E-05);(\"penalty\",3.61257713663828E-05);(\"bruce\",3.60865347691228E-05);(\"slow\",3.60801720776752E-05);(\"desert\",3.60791116291006E-05);(\"dallas\",3.6074339610515E-05);(\"voting\",3.60727489376531E-05);(\"attracted\",3.60510097418739E-05);(\"kennedy\",3.60366936861169E-05);(\"visible\",3.60250287517964E-05);(\"ross\",3.60091220231775E-05);(\"vessel\",3.59948059674205E-05);(\"borders\",3.59714760987794E-05);(\"singh\",3.59433742115527E-05);(\"portrayed\",3.59375417443924E-05);(\"knew\",3.5929588380083E-05);(\"sarah\",3.5909970081453E-05);(\"transit\",3.58818681942263E-05);(\"fly\",3.5872324157055E-05);(\"approval\",3.58606592227344E-05);(\"phone\",3.58463431669774E-05);(\"club's\",3.58463431669774E-05);(\"accept\",3.58410409241045E-05);(\"shares\",3.58272550926347E-05);(\"abc\",3.58230132983364E-05);(\"videos\",3.58219528497618E-05);(\"romania\",3.58214226254745E-05);(\"resident\",3.58208924011872E-05);(\"outer\",3.57630979538718E-05);(\"fruit\",3.57461307766784E-05);(\"executed\",3.5713256870866E-05);(\"widespread\",3.57042430579819E-05);(\"arkansas\",3.56819736379155E-05);(\"morgan\",3.56517508535395E-05);(\"rapidly\",3.56225885177382E-05);(\"roots\",3.55966075276607E-05);(\"birmingham\",3.55923657333623E-05);(\"siege\",3.55764590047434E-05);(\"arrest\",3.55626731732737E-05);(\"participants\",3.55600220518372E-05);(\"finland\",3.55573709304007E-05);(\"sugar\",3.55430548746437E-05);(\"gradually\",3.55229063517265E-05);(\"concern\",3.55101809688313E-05);(\"concerned\",3.55001067073727E-05);(\"nba\",3.54841999787538E-05);(\"merchant\",3.54826093058919E-05);(\"traditionally\",3.54714745958587E-05);(\"scholar\",3.54714745958587E-05);(\"greatly\",3.5457688764389E-05);(\"panel\",3.54529167458033E-05);(\"agencies\",3.54274659800131E-05);(\"happy\",3.54062570085212E-05);(\"competitive\",3.53998943170736E-05);(\"document\",3.53813364670183E-05);(\"thereafter\",3.53696715326977E-05);(\"jane\",3.53532345797915E-05);(\"acted\",3.5350583458355E-05);(\"weekend\",3.53495230097805E-05);(\"departure\",3.53309651597251E-05);(\"blocks\",3.53113468610951E-05);(\"depth\",3.5293319235327E-05);(\"recommended\",3.52890774410286E-05);(\"nazi\",3.52874867681668E-05);(\"kelly\",3.52837751981557E-05);(\"favor\",3.52222691808293E-05);(\"austin\",3.51999997607628E-05);(\"compilation\",3.51957579664644E-05);(\"tim\",3.51814419107074E-05);(\"benefits\",3.5168186303525E-05);(\"processing\",3.51618236120774E-05);(\"engineers\",3.5159172490641E-05);(\"assault\",3.51533400234807E-05);(\"commerce\",3.51469773320331E-05);(\"fictional\",3.5100317594751E-05);(\"innings\",3.50637321189276E-05);(\"battery\",3.50510067360324E-05);(\"traveled\",3.50372209045627E-05);(\"pick\",3.50345697831263E-05);(\"sessions\",3.50239652973803E-05);(\"wildlife\",3.50101794659106E-05);(\"knight\",3.50075283444741E-05);(\"file\",3.50069981201868E-05);(\"matt\",3.50027563258884E-05);(\"railways\",3.50022261016011E-05);(\"franklin\",3.49985145315901E-05);(\"passage\",3.49836682515458E-05);(\"populations\",3.49810171301093E-05);(\"exception\",3.49619290557666E-05);(\"hero\",3.4960868607192E-05);(\"researchers\",3.49311760471034E-05);(\"treated\",3.49168599913464E-05);(\"beauty\",3.49067857298878E-05);(\"agents\",3.48802745155229E-05);(\"begun\",3.48733815997881E-05);(\"jimmy\",3.48564144225946E-05);(\"printed\",3.48405076939757E-05);(\"bachelor\",3.48028617695776E-05);(\"fear\",3.47911968352571E-05);(\"spoken\",3.47864248166714E-05);(\"transition\",3.47668065180414E-05);(\"victorian\",3.47466579951242E-05);(\"governments\",3.47334023879417E-05);(\"twin\",3.47265094722069E-05);(\"mills\",3.47265094722069E-05);(\"billy\",3.47254490236323E-05);(\"snow\",3.46803799592121E-05);(\"donated\",3.4676668389201E-05);(\"describe\",3.46628825577313E-05);(\"russell\",3.46543989691345E-05);(\"provinces\",3.46167530447365E-05);(\"evolution\",3.46077392318524E-05);(\"diameter\",3.45934231760954E-05);(\"exists\",3.45738048774655E-05);(\"relationships\",3.45647910645814E-05);(\"cousin\",3.45531261302609E-05);(\"wedding\",3.4551535457399E-05);(\"carbon\",3.45096477387026E-05);(\"nevertheless\",3.45001037015312E-05);(\"injuries\",3.44990432529566E-05);(\"chemistry\",3.44953316829456E-05);(\"supplies\",3.44921503372218E-05);(\"everyone\",3.44847271971996E-05);(\"transmission\",3.44831365243377E-05);(\"historically\",3.44773040571775E-05);(\"opportunities\",3.44762436086029E-05);(\"venue\",3.44730622628791E-05);(\"encouraged\",3.44560950856856E-05);(\"abroad\",3.44444301513651E-05);(\"ratio\",3.44396581327794E-05);(\"contribution\",3.44195096098621E-05);(\"channels\",3.43760312183038E-05);(\"continental\",3.43511106768009E-05);(\"drugs\",3.43431573124914E-05);(\"indians\",3.43086927338171E-05);(\"scientists\",3.43060416123806E-05);(\"instrumental\",3.43049811638061E-05);(\"country's\",3.42710468094191E-05);(\"print\",3.42556703050875E-05);(\"friendly\",3.42434751464796E-05);(\"releases\",3.42365822307448E-05);(\"ready\",3.42339311093083E-05);(\"achievement\",3.42275684178607E-05);(\"intersection\",3.42090105678054E-05);(\"boats\",3.41740157648438E-05);(\"genre\",3.4142202307606E-05);(\"significance\",3.41056168317825E-05);(\"christopher\",3.40918310003128E-05);(\"remainder\",3.40775149445558E-05);(\"mechanical\",3.4074333598832E-05);(\"riding\",3.40695615802463E-05);(\"spending\",3.40446410387434E-05);(\"periods\",3.40213111701023E-05);(\"customers\",3.40011626471851E-05);(\"full-time\",3.39932092828756E-05);(\"rolling\",3.39746514328202E-05);(\"nick\",3.39725305356711E-05);(\"matters\",3.39529122370411E-05);(\"harbor\",3.39391264055714E-05);(\"categories\",3.39131454154938E-05);(\"suffering\",3.38908759954274E-05);(\"assist\",3.38898155468528E-05);(\"ninth\",3.3886634201129E-05);(\"retail\",3.38558811924658E-05);(\"supports\",3.38458069310072E-05);(\"immediate\",3.38283095295264E-05);(\"rain\",3.38171748194931E-05);(\"adams\",3.38002076422996E-05);(\"personality\",3.37885427079791E-05);(\"nelson\",3.37869520351172E-05);(\"hearing\",3.37858915865426E-05);(\"destruction\",3.37604408207524E-05);(\"thompson\",3.37487758864319E-05);(\"posted\",3.37349900549622E-05);(\"technologies\",3.37164322049068E-05);(\"giant\",3.36984045791387E-05);(\"civilian\",3.36968139062768E-05);(\"signs\",3.36724235890612E-05);(\"preserved\",3.36459123746963E-05);(\"taiwan\",3.3631066094652E-05);(\"substantial\",3.36130384688839E-05);(\"cash\",3.36072060017237E-05);(\"overseas\",3.3602433983138E-05);(\"organ\",3.35966015159777E-05);(\"stanley\",3.35950108431158E-05);(\"norman\",3.35918294973921E-05);(\"ruling\",3.3577513441635E-05);(\"toured\",3.3573801871624E-05);(\"facing\",3.3573801871624E-05);(\"extent\",3.35504720029829E-05);(\"lay\",3.35494115544083E-05);(\"brooklyn\",3.35414581900989E-05);(\"hispanic\",3.35239607886181E-05);(\"wants\",3.35234305643308E-05);(\"obtain\",3.35138865271595E-05);(\"mix\",3.35069936114246E-05);(\"contested\",3.3500630919977E-05);(\"sponsored\",3.34905566585184E-05);(\"school's\",3.34746499298995E-05);(\"un\",3.34550316312695E-05);(\"hurricane\",3.34322319869158E-05);(\"fifa\",3.34163252582969E-05);(\"erected\",3.34083718939874E-05);(\"orleans\",3.33982976325288E-05);(\"defending\",3.3395116286805E-05);(\"utah\",3.33770886610369E-05);(\"endemic\",3.33675446238656E-05);(\"youngest\",3.33638330538545E-05);(\"attributed\",3.33580005866942E-05);(\"alfred\",3.33489867738102E-05);(\"wear\",3.33463356523737E-05);(\"struggle\",3.33458054280864E-05);(\"emerged\",3.33442147552245E-05);(\"farmers\",3.33320195966167E-05);(\"detailed\",3.33288382508929E-05);(\"stewart\",3.33118710736994E-05);(\"seek\",3.33097501765502E-05);(\"symphony\",3.32906621022076E-05);(\"playoffs\",3.32641508878427E-05);(\"allies\",3.32540766263841E-05);(\"tribes\",3.32540766263841E-05);(\"regulations\",3.32344583277541E-05);(\"platforms\",3.32339281034668E-05);(\"crowd\",3.32063564405274E-05);(\"plate\",3.31565153575215E-05);(\"bible\",3.31490922174994E-05);(\"victor\",3.31353063860296E-05);(\"residing\",3.31220507788472E-05);(\"trials\",3.3119929881698E-05);(\"sculpture\",3.3110916068814E-05);(\"ed\",3.31045533773664E-05);(\"statue\",3.31034929287918E-05);(\"disc\",3.30647865558192E-05);(\"reportedly\",3.30605447615208E-05);(\"ride\",3.30350939957306E-05);(\"buy\",3.30038107627801E-05);(\"saints\",3.29873738098739E-05);(\"tenure\",3.29688159598185E-05);(\"demolished\",3.29306398111331E-05);(\"robinson\",3.29279886896967E-05);(\"percentage\",3.29226864468237E-05);(\"johnny\",3.29210957739618E-05);(\"absence\",3.29120819610777E-05);(\"writes\",3.28935241110224E-05);(\"donald\",3.28861009710002E-05);(\"instrument\",3.28680733452321E-05);(\"send\",3.28664826723702E-05);(\"admiral\",3.28373203365689E-05);(\"festivals\",3.28325483179833E-05);(\"affiliated\",3.28065673279057E-05);(\"component\",3.28049766550438E-05);(\"filming\",3.27652098334966E-05);(\"frequent\",3.27599075906236E-05);(\"ranks\",3.27540751234634E-05);(\"claiming\",3.27349870491207E-05);(\"spoke\",3.27206709933637E-05);(\"soldier\",3.27148385262034E-05);(\"marshall\",3.27031735918829E-05);(\"archbishop\",3.27021131433083E-05);(\"crash\",3.26920388818496E-05);(\"cooperation\",3.26300026402359E-05);(\"deaths\",3.26209888273519E-05);(\"patrol\",3.261939815449E-05);(\"gang\",3.26119750144678E-05);(\"keeping\",3.26061425473076E-05);(\"sees\",3.26008403044346E-05);(\"cbs\",3.25992496315727E-05);(\"seeking\",3.25918264915506E-05);(\"enjoyed\",3.25759197629317E-05);(\"steps\",3.25753895386444E-05);(\"rocks\",3.25716779686333E-05);(\"glasgow\",3.25647850528984E-05);(\"photography\",3.25600130343128E-05);(\"apply\",3.25197159884782E-05);(\"yorkshire\",3.25128230727434E-05);(\"breaking\",3.25122928484561E-05);(\"commanded\",3.25000976898483E-05);(\"germans\",3.24985070169864E-05);(\"mediterranean\",3.24836607369421E-05);(\"viewed\",3.24772980454945E-05);(\"useful\",3.24719958026215E-05);(\"suspended\",3.24719958026215E-05);(\"descent\",3.24704051297596E-05);(\"drop\",3.2469344681185E-05);(\"throne\",3.24677540083232E-05);(\"judges\",3.2446014812544E-05);(\"thailand\",3.24359405510854E-05);(\"fantasy\",3.24110200095824E-05);(\"evil\",3.24088991124332E-05);(\"licensed\",3.23908714866651E-05);(\"belgian\",3.23770856551954E-05);(\"regime\",3.23574673565655E-05);(\"voters\",3.2344211749383E-05);(\"ph\",3.23341374879244E-05);(\"premiere\",3.23304259179133E-05);(\"richmond\",3.23288352450514E-05);(\"indoor\",3.22996729092501E-05);(\"managing\",3.22975520121009E-05);(\"volumes\",3.22954311149517E-05);(\"well-known\",3.22933102178026E-05);(\"hampshire\",3.22885381992169E-05);(\"symbol\",3.22848266292058E-05);(\"campbell\",3.22848266292058E-05);(\"finnish\",3.22752825920345E-05);(\"oak\",3.22657385548631E-05);(\"athletes\",3.22604363119902E-05);(\"carlos\",3.2258315414841E-05);(\"choose\",3.2247710929095E-05);(\"indeed\",3.22227903875921E-05);(\"animated\",3.22079441075478E-05);(\"shopping\",3.21575728002546E-05);(\"produces\",3.21337127073263E-05);(\"egyptian\",3.21321220344644E-05);(\"seeing\",3.21289406887406E-05);(\"roll\",3.21257593430168E-05);(\"electricity\",3.21156850815582E-05);(\"municipalities\",3.21034899229504E-05);(\"desire\",3.20912947643425E-05);(\"gary\",3.20891738671933E-05);(\"rebuilt\",3.20870529700442E-05);(\"protest\",3.20658439985523E-05);(\"pain\",3.20626626528285E-05);(\"viewers\",3.20605417556793E-05);(\"partly\",3.2060011531392E-05);(\"drums\",3.20589510828174E-05);(\"dominated\",3.20393327841875E-05);(\"andy\",3.20255469527177E-05);(\"segment\",3.20175935884083E-05);(\"principle\",3.20144122426845E-05);(\"jan\",3.19932032711927E-05);(\"falling\",3.19778267668611E-05);(\"seed\",3.19767663182865E-05);(\"fresh\",3.19682827296897E-05);(\"nhl\",3.1959799141093E-05);(\"portland\",3.19555573467946E-05);(\"attending\",3.19507853282089E-05);(\"jeff\",3.19465435339105E-05);(\"picked\",3.19449528610487E-05);(\"abuse\",3.19168509738219E-05);(\"bomb\",3.18967024509047E-05);(\"uefa\",3.18887490865952E-05);(\"gray\",3.18813259465731E-05);(\"settlers\",3.18659494422415E-05);(\"publisher\",3.18622378722304E-05);(\"characterized\",3.18505729379099E-05);(\"marks\",3.18394382278766E-05);(\"les\",3.18288337421307E-05);(\"doesn't\",3.18219408263958E-05);(\"assets\",3.18192897049594E-05);(\"serbian\",3.18145176863737E-05);(\"jury\",3.18002016306167E-05);(\"behalf\",3.17917180420199E-05);(\"indicate\",3.17752810891137E-05);(\"funded\",3.17429374075886E-05);(\"minority\",3.17355142675665E-05);(\"duo\",3.17196075389476E-05);(\"terminus\",3.16973381188811E-05);(\"cave\",3.16941567731573E-05);(\"anyone\",3.16809011659749E-05);(\"jason\",3.16761291473893E-05);(\"biological\",3.1675598923102E-05);(\"limits\",3.16231067186596E-05);(\"missed\",3.1593414158571E-05);(\"drummer\",3.15822794485377E-05);(\"guy\",3.15801585513886E-05);(\"possession\",3.15658424956316E-05);(\"arabic\",3.15653122713443E-05);(\"suit\",3.15642518227697E-05);(\"murray\",3.15223641040732E-05);(\"mines\",3.15154711883384E-05);(\"aimed\",3.15038062540178E-05);(\"driven\",3.14650998810452E-05);(\"graham\",3.14640394324706E-05);(\"disney\",3.14613883110341E-05);(\"string\",3.14560860681611E-05);(\"besides\",3.1443360685266E-05);(\"bit\",3.14423002366914E-05);(\"furthermore\",3.14380584423931E-05);(\"stable\",3.14375282181058E-05);(\"editions\",3.14348770966693E-05);(\"clay\",3.14295748537963E-05);(\"jerusalem\",3.13988218451331E-05);(\"virgin\",3.13823848922269E-05);(\"locally\",3.1380794219365E-05);(\"relocated\",3.13802639950777E-05);(\"yard\",3.1371780406481E-05);(\"delhi\",3.13617061450223E-05);(\"publicly\",3.13176975291767E-05);(\"clearly\",3.13055023705689E-05);(\"bangladesh\",3.13044419219943E-05);(\"overview\",3.12789911562041E-05);(\"closer\",3.12678564461708E-05);(\"sounds\",3.12487683718282E-05);(\"hull\",3.12132433445793E-05);(\"traditions\",3.12121828960047E-05);(\"nova\",3.11851414573526E-05);(\"psychology\",3.11575697944131E-05);(\"understand\",3.11538582244021E-05);(\"colors\",3.11342399257721E-05);(\"recovered\",3.11326492529102E-05);(\"relation\",3.1125226112888E-05);(\"concentration\",3.10711432355838E-05);(\"dc\",3.10594783012632E-05);(\"influences\",3.10006234053733E-05);(\"sentenced\",3.09979722839368E-05);(\"charlie\",3.09831260038925E-05);(\"matthew\",3.09799446581688E-05);(\"balance\",3.09560845652404E-05);(\"first-class\",3.09550241166658E-05);(\"organised\",3.09491916495055E-05);(\"ceased\",3.09438894066326E-05);(\"hunting\",3.0928512902301E-05);(\"immigrants\",3.09274524537264E-05);(\"fit\",3.09115457251075E-05);(\"carter\",3.08951087722013E-05);(\"mechanism\",3.08913972021902E-05);(\"clan\",3.08797322678697E-05);(\"walking\",3.08786718192951E-05);(\"birthday\",3.08765509221459E-05);(\"friday\",3.08738998007094E-05);(\"identify\",3.08590535206651E-05);(\"ann\",3.08447374649081E-05);(\"romantic\",3.08442072406208E-05);(\"moves\",3.08415561191843E-05);(\"householder\",3.0832012082013E-05);(\"wright\",3.08229982691289E-05);(\"legs\",3.08203471476925E-05);(\"cargo\",3.08007288490625E-05);(\"buffalo\",3.07996684004879E-05);(\"zero\",3.07975475033387E-05);(\"essential\",3.07943661576149E-05);(\"boundaries\",3.07922452604657E-05);(\"elder\",3.07678549432501E-05);(\"manor\",3.07625527003771E-05);(\"afghanistan\",3.07466459717582E-05);(\"usage\",3.07455855231836E-05);(\"exposed\",3.07429344017472E-05);(\"plain\",3.07424041774599E-05);(\"subsidiary\",3.07392228317361E-05);(\"roy\",3.07365717102996E-05);(\"false\",3.07291485702774E-05);(\"volunteer\",3.0726497448841E-05);(\"vancouver\",3.07196045331061E-05);(\"apartment\",3.07005164587634E-05);(\"album's\",3.06824888329953E-05);(\"archaeological\",3.06750656929732E-05);(\"romanized\",3.0672944795824E-05);(\"hunter\",3.06655216558018E-05);(\"advice\",3.06268152828292E-05);(\"morris\",3.06220432642435E-05);(\"pioneer\",3.06071969841992E-05);(\"texts\",3.05965924984533E-05);(\"kg\",3.05918204798676E-05);(\"volunteers\",3.058545778842E-05);(\"bristol\",3.05679603869393E-05);(\"inaugural\",3.05552350040441E-05);(\"possibility\",3.05456909668728E-05);(\"benjamin\",3.05430398454363E-05);(\"alive\",3.05366771539888E-05);(\"islam\",3.05276633411047E-05);(\"businessman\",3.05186495282207E-05);(\"costa\",3.05175890796461E-05);(\"rated\",3.05165286310715E-05);(\"lose\",3.0508575266762E-05);(\"sentence\",3.04910778652812E-05);(\"mall\",3.04857756224083E-05);(\"partially\",3.04682782209275E-05);(\"belief\",3.0446008800861E-05);(\"aim\",3.04343438665405E-05);(\"romanian\",3.04269207265183E-05);(\"appropriate\",3.04147255679105E-05);(\"strip\",3.04046513064519E-05);(\"belonged\",3.04025304093027E-05);(\"rangers\",3.03860934563965E-05);(\"elsewhere\",3.03829121106727E-05);(\"opponents\",3.03770796435125E-05);(\"tail\",3.03701867277776E-05);(\"asks\",3.0360112466319E-05);(\"maine\",3.03362523733906E-05);(\"crimes\",3.03357221491033E-05);(\"deployed\",3.03102713833131E-05);(\"merger\",3.03070900375893E-05);(\"doors\",3.02837601689483E-05);(\"summary\",3.02646720946056E-05);(\"madrid\",3.02599000760199E-05);(\"drafted\",3.0249295590274E-05);(\"rico\",3.02461142445502E-05);(\"venture\",3.02280866187821E-05);(\"settlements\",3.02185425816108E-05);(\"internationally\",3.02158914601743E-05);(\"lanka\",3.02063474230029E-05);(\"establishing\",3.02026358529919E-05);(\"tie\",3.01718828443287E-05);(\"dispute\",3.01517343214114E-05);(\"ban\",3.01448414056765E-05);(\"dangerous\",3.01379484899417E-05);(\"gap\",3.01342369199306E-05);(\"hunt\",3.01294649013449E-05);(\"latino\",3.01209813127482E-05);(\"implemented\",3.01167395184498E-05);(\"suburb\",3.01013630141182E-05);(\"implementation\",3.00626566411455E-05);(\"commented\",3.00547032768361E-05);(\"practical\",3.00425081182283E-05);(\"displayed\",3.0027661838184E-05);(\"ian\",3.00260711653221E-05);(\"sand\",3.00069830909794E-05);(\"sole\",2.99963786052335E-05);(\"earning\",2.99921368109351E-05);(\"derby\",2.99804718766146E-05);(\"grace\",2.99735789608797E-05);(\"cook\",2.99412352793546E-05);(\"generated\",2.99338121393325E-05);(\"continuous\",2.99078311492549E-05);(\"monthly\",2.99067707006803E-05);(\"connections\",2.98956359906471E-05);(\"conversion\",2.98903337477741E-05);(\"locomotives\",2.98882128506249E-05);(\"caribbean\",2.98845012806139E-05);(\"reduction\",2.98807897106028E-05);(\"diverse\",2.98717758977188E-05);(\"chile\",2.98426135619174E-05);(\"rifle\",2.9820344141851E-05);(\"biology\",2.98108001046796E-05);(\"responded\",2.98028467403702E-05);(\"reporter\",2.97943631517734E-05);(\"serbia\",2.97922422546243E-05);(\"ferry\",2.97880004603259E-05);(\"warner\",2.9786409787464E-05);(\"secured\",2.97805773203037E-05);(\"mid\",2.97477034144913E-05);(\"amendment\",2.97402802744692E-05);(\"advisory\",2.97349780315962E-05);(\"forum\",2.97286153401487E-05);(\"persian\",2.9709527265806E-05);(\"machines\",2.96962716586236E-05);(\"connecting\",2.96793044814301E-05);(\"departments\",2.96761231357063E-05);(\"fled\",2.96644582013858E-05);(\"guilty\",2.96633977528112E-05);(\"occasion\",2.96533234913525E-05);(\"marie\",2.96284029498496E-05);(\"operator\",2.96284029498496E-05);(\"closing\",2.9613026445518E-05);(\"film's\",2.96003010626229E-05);(\"ma\",2.9593408146888E-05);(\"trinity\",2.9593408146888E-05);(\"tours\",2.95838641097167E-05);(\"acquisition\",2.95806827639929E-05);(\"decisions\",2.95525808767662E-05);(\"decides\",2.95393252695838E-05);(\"fred\",2.95334928024235E-05);(\"unsuccessful\",2.95239487652521E-05);(\"aftermath\",2.95016793451857E-05);(\"patterns\",2.94788797008319E-05);(\"assisted\",2.94746379065336E-05);(\"discussed\",2.94274479449642E-05);(\"bound\",2.94168434592182E-05);(\"initiated\",2.94126016649199E-05);(\"cattle\",2.93818486562566E-05);(\"master's\",2.93818486562566E-05);(\"survive\",2.93807882076821E-05);(\"warren\",2.93723046190853E-05);(\"affair\",2.9366472151925E-05);(\"circumstances\",2.93516258718807E-05);(\"milan\",2.93500351990188E-05);(\"timber\",2.93457934047205E-05);(\"mail\",2.93118590503335E-05);(\"bridges\",2.93054963588859E-05);(\"apparent\",2.92975429945765E-05);(\"harbour\",2.92848176116814E-05);(\"portrait\",2.92811060416703E-05);(\"outdoor\",2.92763340230846E-05);(\"coaches\",2.92689108830625E-05);(\"pursue\",2.92418694444103E-05);(\"dramatic\",2.92333858558136E-05);(\"involves\",2.92238418186422E-05);(\"jurisdiction\",2.92079350900233E-05);(\"democracy\",2.9207404865736E-05);(\"guards\",2.92005119500012E-05);(\"qualification\",2.91952097071282E-05);(\"holiday\",2.91771820813601E-05);(\"ministers\",2.91665775956142E-05);(\"else\",2.91623358013158E-05);(\"wayne\",2.91586242313048E-05);(\"bid\",2.91580940070175E-05);(\"increases\",2.91432477269732E-05);(\"sailed\",2.91299921197907E-05);(\"carrier\",2.91278712226416E-05);(\"isolated\",2.91156760640337E-05);(\"nicholas\",2.91082529240116E-05);(\"magazines\",2.9107192475437E-05);(\"mention\",2.91008297839894E-05);(\"exclusively\",2.90907555225308E-05);(\"tribute\",2.90658349810278E-05);(\"mainstream\",2.90557607195692E-05);(\"certified\",2.90493980281216E-05);(\"rebellion\",2.90472771309725E-05);(\"completing\",2.9039323766663E-05);(\"campaigns\",2.90361424209392E-05);(\"unincorporated\",2.90350819723646E-05);(\"wearing\",2.90308401780663E-05);(\"pitch\",2.90091009822871E-05);(\"beijing\",2.89794084221985E-05);(\"elite\",2.8971455057889E-05);(\"clothing\",2.89592598992812E-05);(\"illness\",2.89576692264193E-05);(\"remove\",2.89491856378226E-05);(\"statistical\",2.89359300306402E-05);(\"belonging\",2.89269162177561E-05);(\"conventional\",2.89269162177561E-05);(\"eldest\",2.89269162177561E-05);(\"beating\",2.89221441991704E-05);(\"sang\",2.89173721805848E-05);(\"solutions\",2.89173721805848E-05);(\"enforcement\",2.89126001619991E-05);(\"enterprise\",2.89078281434134E-05);(\"add\",2.8894572536231E-05);(\"preparation\",2.88839680504851E-05);(\"concerning\",2.88791960318994E-05);(\"peoples\",2.88728333404519E-05);(\"hindu\",2.88696519947281E-05);(\"ongoing\",2.8865940424717E-05);(\"longest\",2.88558661632584E-05);(\"participating\",2.88537452661092E-05);(\"triple\",2.88526848175346E-05);(\"alice\",2.88468523503743E-05);(\"arrangement\",2.88362478646284E-05);(\"muslims\",2.88346571917665E-05);(\"tanks\",2.88224620331587E-05);(\"pages\",2.88150388931365E-05);(\"housed\",2.8808676201689E-05);(\"shall\",2.88007228373795E-05);(\"sporting\",2.87779231930258E-05);(\"suitable\",2.87705000530036E-05);(\"horror\",2.87678489315671E-05);(\"hawaii\",2.87614862401196E-05);(\"fa\",2.87572444458212E-05);(\"nbc\",2.8755123548672E-05);(\"acres\",2.87413377172023E-05);(\"substitute\",2.87180078485612E-05);(\"traded\",2.87169473999866E-05);(\"apple\",2.87164171756993E-05);(\"negotiations\",2.87100544842518E-05);(\"drivers\",2.86899059613345E-05);(\"volleyball\",2.86565018312348E-05);(\"repeated\",2.86522600369365E-05);(\"rarely\",2.86490786912127E-05);(\"baker\",2.86310510654446E-05);(\"delivery\",2.86273394954335E-05);(\"discussion\",2.86188559068368E-05);(\"violent\",2.86087816453781E-05);(\"tag\",2.85992376082068E-05);(\"recovery\",2.85949958139084E-05);(\"belt\",2.85891633467482E-05);(\"grades\",2.85881028981736E-05);(\"resort\",2.85753775152784E-05);(\"conclusion\",2.85716659452674E-05);(\"uniform\",2.85615916838087E-05);(\"so-called\",2.85584103380849E-05);(\"fifteen\",2.85568196652231E-05);(\"he's\",2.8553108095212E-05);(\"spaces\",2.85493965252009E-05);(\"fitted\",2.85446245066152E-05);(\"temperatures\",2.85366711423058E-05);(\"demonstrated\",2.85361409180185E-05);(\"focuses\",2.85308386751455E-05);(\"reveals\",2.85207644136869E-05);(\"qualify\",2.85016763393442E-05);(\"dismissed\",2.84958438721839E-05);(\"exhibitions\",2.84878905078745E-05);(\"weapon\",2.84868300592999E-05);(\"crossed\",2.84597886206478E-05);(\"vast\",2.84581979477859E-05);(\"radical\",2.84544863777748E-05);(\"adventure\",2.84359285277194E-05);(\"sacred\",2.84253240419735E-05);(\"historians\",2.84200217991005E-05);(\"dancing\",2.83956314818849E-05);(\"submarine\",2.83945710333103E-05);(\"manufactured\",2.83892687904373E-05);(\"immigration\",2.83839665475643E-05);(\"wheel\",2.83818456504152E-05);(\"funeral\",2.83542739874757E-05);(\"mitchell\",2.83447299503044E-05);(\"tigers\",2.83288232216855E-05);(\"till\",2.83277627731109E-05);(\"wells\",2.83160978387904E-05);(\"indicates\",2.83039026801826E-05);(\"suggest\",2.82789821386796E-05);(\"comprehensive\",2.82752705686685E-05);(\"karl\",2.82699683257956E-05);(\"debt\",2.82683776529337E-05);(\"copy\",2.82673172043591E-05);(\"patient\",2.82673172043591E-05);(\"soft\",2.82556522700386E-05);(\"dominant\",2.82370944199832E-05);(\"commons\",2.82302015042483E-05);(\"margin\",2.82280806070991E-05);(\"clean\",2.82217179156516E-05);(\"diamond\",2.81989182712978E-05);(\"interpretation\",2.81978578227232E-05);(\"writings\",2.81962671498613E-05);(\"grandfather\",2.81861928884027E-05);(\"lions\",2.81750581783695E-05);(\"arriving\",2.81649839169108E-05);(\"raf\",2.81623327954743E-05);(\"that's\",2.81543794311649E-05);(\"barry\",2.81517283097284E-05);(\"scope\",2.81490771882919E-05);(\"mac\",2.81443051697063E-05);(\"expert\",2.81411238239825E-05);(\"photographs\",2.81310495625238E-05);(\"activist\",2.81273379925128E-05);(\"thinking\",2.81172637310541E-05);(\"prices\",2.81140823853304E-05);(\"exercise\",2.80976454324242E-05);(\"airlines\",2.80769666852196E-05);(\"parent\",2.80764364609323E-05);(\"ties\",2.80626506294626E-05);(\"northwestern\",2.80584088351642E-05);(\"woods\",2.80536368165785E-05);(\"promoting\",2.80435625551199E-05);(\"jump\",2.80425021065453E-05);(\"pradesh\",2.80409114336834E-05);(\"lifetime\",2.80218233593407E-05);(\"landed\",2.80165211164678E-05);(\"genetic\",2.79942516964013E-05);(\"marry\",2.7993721472114E-05);(\"submitted\",2.79916005749648E-05);(\"copper\",2.79756938463459E-05);(\"eggs\",2.7974103173484E-05);(\"tend\",2.79698613791857E-05);(\"cotton\",2.79661498091746E-05);(\"state's\",2.79433501648208E-05);(\"collective\",2.79412292676716E-05);(\"excellent\",2.7940168819097E-05);(\"reporting\",2.79316852305003E-05);(\"originated\",2.792585276334E-05);(\"devoted\",2.79200202961798E-05);(\"symptoms\",2.79152482775941E-05);(\"choir\",2.79051740161355E-05);(\"withdrew\",2.78988113246879E-05);(\"manhattan\",2.78876766146547E-05);(\"waste\",2.78802534746325E-05);(\"consumer\",2.78457888959582E-05);(\"charlotte\",2.78383657559361E-05);(\"baptist\",2.7834654185925E-05);(\"wealthy\",2.7825640373041E-05);(\"robin\",2.78251101487537E-05);(\"layer\",2.78240497001791E-05);(\"shift\",2.78171567844442E-05);(\"playoff\",2.78081429715602E-05);(\"foster\",2.78076127472729E-05);(\"villa\",2.78065522986983E-05);(\"framework\",2.7786403775781E-05);(\"silent\",2.77259582070292E-05);(\"hip\",2.77227768613054E-05);(\"muhammad\",2.77100514784103E-05);(\"present-day\",2.7709521254123E-05);(\"scores\",2.77084608055484E-05);(\"buses\",2.76957354226533E-05);(\"farming\",2.76867216097692E-05);(\"believes\",2.7680889142609E-05);(\"citizen\",2.76771775725979E-05);(\"exposure\",2.76692242082885E-05);(\"topics\",2.7646954788222E-05);(\"repair\",2.76421827696363E-05);(\"fighters\",2.76405920967744E-05);(\"sweet\",2.76400618724871E-05);(\"interstate\",2.76278667138793E-05);(\"barbara\",2.76278667138793E-05);(\"tool\",2.76220342467191E-05);(\"thirty\",2.76156715552715E-05);(\"eligible\",2.76114297609731E-05);(\"automatic\",2.76082484152493E-05);(\"flights\",2.75902207894813E-05);(\"specialized\",2.7589690565194E-05);(\"fee\",2.75859789951829E-05);(\"correct\",2.7584388322321E-05);(\"thanks\",2.75827976494591E-05);(\"requested\",2.75822674251718E-05);(\"permission\",2.75658304722656E-05);(\"diplomatic\",2.75531050893705E-05);(\"judicial\",2.75371983607516E-05);(\"latest\",2.75250032021438E-05);(\"moral\",2.75181102864089E-05);(\"nigeria\",2.74990222120662E-05);(\"beetle\",2.74915990720441E-05);(\"truck\",2.74799341377236E-05);(\"jonathan\",2.74576647176571E-05);(\"intention\",2.74497113533476E-05);(\"ranging\",2.74285023818558E-05);(\"guests\",2.7416307223248E-05);(\"group's\",2.7386084438872E-05);(\"banned\",2.73776008502753E-05);(\"extensively\",2.73749497288388E-05);(\"can't\",2.73410153744518E-05);(\"restricted\",2.73293504401313E-05);(\"select\",2.73160948329489E-05);(\"travelled\",2.73076112443521E-05);(\"liberty\",2.730018810433E-05);(\"lowest\",2.72943556371697E-05);(\"slaves\",2.72901138428714E-05);(\"expensive\",2.72524679184733E-05);(\"guinea\",2.72503470213241E-05);(\"evans\",2.7242923881302E-05);(\"organic\",2.72392123112909E-05);(\"remote\",2.72312589469814E-05);(\"delta\",2.72275473769704E-05);(\"calendar\",2.71962641440198E-05);(\"alberta\",2.7194673471158E-05);(\"guardian\",2.71777062939645E-05);(\"giants\",2.71734644996661E-05);(\"recognised\",2.71660413596439E-05);(\"disambiguation\",2.7160739116771E-05);(\"distinction\",2.71496044067377E-05);(\"iranian\",2.7141120818141E-05);(\"protests\",2.71225629680856E-05);(\"hidden\",2.71162002766381E-05);(\"favorite\",2.71050655666048E-05);(\"grows\",2.71034748937429E-05);(\"adelaide\",2.71029446694556E-05);(\"wealth\",2.7101884220881E-05);(\"bases\",2.70949913051462E-05);(\"leagues\",2.70939308565716E-05);(\"dragon\",2.70865077165494E-05);(\"relegated\",2.7083856595113E-05);(\"pole\",2.70822659222511E-05);(\"seem\",2.70605267264719E-05);(\"ill\",2.70435595492784E-05);(\"inspiration\",2.70403782035546E-05);(\"phoenix\",2.70382573064054E-05);(\"ny\",2.70361364092563E-05);(\"parker\",2.70345457363944E-05);(\"pupils\",2.70324248392452E-05);(\"incumbent\",2.70170483349136E-05);(\"shops\",2.70143972134771E-05);(\"worship\",2.69984904848582E-05);(\"manufacturer\",2.69794024105155E-05);(\"regulation\",2.69762210647917E-05);(\"unless\",2.69682677004823E-05);(\"taxes\",2.69661468033331E-05);(\"reaches\",2.69661468033331E-05);(\"angel\",2.69619050090347E-05);(\"graduation\",2.69502400747142E-05);(\"chess\",2.69502400747142E-05);(\"tourist\",2.69332728975207E-05);(\"virtual\",2.69332728975207E-05);(\"maps\",2.69306217760842E-05);(\"dogs\",2.69306217760842E-05);(\"lights\",2.69290311032223E-05);(\"cancelled\",2.69274404303604E-05);(\"cuba\",2.69263799817859E-05);(\"alcohol\",2.69253195332113E-05);(\"seeds\",2.69178963931891E-05);(\"ratings\",2.69120639260288E-05);(\"contributing\",2.69025198888575E-05);(\"looked\",2.6899868767421E-05);(\"year's\",2.68882038331005E-05);(\"née\",2.68664646373213E-05);(\"democrat\",2.68643437401721E-05);(\"dollars\",2.6862222843023E-05);(\"corresponding\",2.68574508244373E-05);(\"vertical\",2.6851618357277E-05);(\"tech\",2.68447254415422E-05);(\"eagle\",2.68441952172549E-05);(\"coat\",2.68388929743819E-05);(\"manage\",2.6828288488636E-05);(\"sufficient\",2.68272280400614E-05);(\"feeling\",2.6822986245763E-05);(\"patent\",2.681768400289E-05);(\"clinton\",2.68118515357298E-05);(\"congregation\",2.68107910871552E-05);(\"bed\",2.67901123399506E-05);(\"designation\",2.67810985270666E-05);(\"illustrated\",2.67752660599063E-05);(\"alternate\",2.67704940413206E-05);(\"animation\",2.67556477612763E-05);(\"describing\",2.67492850698288E-05);(\"preferred\",2.67418619298066E-05);(\"philippine\",2.67376201355082E-05);(\"expand\",2.67360294626464E-05);(\"usual\",2.67307272197734E-05);(\"vary\",2.6726485425475E-05);(\"cap\",2.67227738554639E-05);(\"linear\",2.67095182482815E-05);(\"battles\",2.67015648839721E-05);(\"diseases\",2.66994439868229E-05);(\"valuable\",2.6697853313961E-05);(\"ballet\",2.66957324168118E-05);(\"disaster\",2.66771745667564E-05);(\"pure\",2.66771745667564E-05);(\"exhibited\",2.66734629967454E-05);(\"brisbane\",2.66671003052978E-05);(\"departed\",2.6663918959574E-05);(\"therapy\",2.66527842495408E-05);(\"evolved\",2.66437704366567E-05);(\"angle\",2.66389984180711E-05);(\"winds\",2.66246823623141E-05);(\"favour\",2.6610366306557E-05);(\"camps\",2.66045338393968E-05);(\"athens\",2.65907480079271E-05);(\"respective\",2.65716599335844E-05);(\"supposed\",2.65621158964131E-05);(\"hebrew\",2.65615856721258E-05);(\"accessible\",2.65557532049655E-05);(\"dj\",2.65472696163687E-05);(\"syria\",2.65430278220704E-05);(\"interviews\",2.65424975977831E-05);(\"ibn\",2.65308326634625E-05);(\"grammar\",2.65075027948215E-05);(\"sing\",2.65064423462469E-05);(\"territorial\",2.64963680847883E-05);(\"assessment\",2.64868240476169E-05);(\"jerry\",2.64841729261804E-05);(\"norfolk\",2.64756893375837E-05);(\"profile\",2.64740986647218E-05);(\"tournaments\",2.64666755246997E-05);(\"improvement\",2.64650848518378E-05);(\"outbreak\",2.64645546275505E-05);(\"reservoir\",2.64624337304013E-05);(\"saved\",2.64624337304013E-05);(\"identical\",2.64470572260697E-05);(\"alaska\",2.64459967774951E-05);(\"christianity\",2.64353922917492E-05);(\"simultaneously\",2.64173646659811E-05);(\"kids\",2.6399337040213E-05);(\"recreation\",2.63802489658703E-05);(\"munich\",2.63701747044117E-05);(\"harrison\",2.63569190972292E-05);(\"raw\",2.63532075272182E-05);(\"closure\",2.63388914714612E-05);(\"prefecture\",2.63298776585771E-05);(\"democrats\",2.63166220513947E-05);(\"journalism\",2.63139709299582E-05);(\"essentially\",2.63065477899361E-05);(\"chase\",2.63044268927869E-05);(\"confederate\",2.62641298469523E-05);(\"challenges\",2.62614787255159E-05);(\"sample\",2.62461022211842E-05);(\"shipping\",2.62407999783113E-05);(\"dakota\",2.62307257168526E-05);(\"lap\",2.6201033156764E-05);(\"rocky\",2.61941402410292E-05);(\"belongs\",2.61914891195927E-05);(\"cincinnati\",2.61655081295152E-05);(\"sitting\",2.61517222980454E-05);(\"breeding\",2.6149071176609E-05);(\"loop\",2.61432387094487E-05);(\"slowly\",2.61421782608741E-05);(\"exclusive\",2.6124150635106E-05);(\"wrong\",2.61193786165204E-05);(\"cooper\",2.61188483922331E-05);(\"bright\",2.6109834579349E-05);(\"powered\",2.61050625607633E-05);(\"congressional\",2.6100820766465E-05);(\"resignation\",2.60971091964539E-05);(\"leeds\",2.60944580750174E-05);(\"shield\",2.60918069535809E-05);(\"capita\",2.6090216280719E-05);(\"pierre\",2.60790815706858E-05);(\"waiting\",2.60711282063764E-05);(\"defend\",2.60647655149288E-05);(\"stones\",2.60626446177796E-05);(\"enrolled\",2.60568121506193E-05);(\"vi\",2.60520401320337E-05);(\"partial\",2.60477983377353E-05);(\"pan\",2.60414356462877E-05);(\"heights\",2.60409054220004E-05);(\"telephone\",2.60218173476578E-05);(\"southeastern\",2.60191662262213E-05);(\"attendance\",2.60181057776467E-05);(\"awareness\",2.60143942076356E-05);(\"radar\",2.60000781518786E-05);(\"phil\",2.59968968061548E-05);(\"buddhist\",2.59672042460662E-05);(\"cat\",2.5965083348917E-05);(\"comparison\",2.59624322274805E-05);(\"helps\",2.59459952745743E-05);(\"convicted\",2.59332698916792E-05);(\"approached\",2.59072889016017E-05);(\"autumn\",2.58956239672812E-05);(\"flower\",2.58866101543971E-05);(\"tons\",2.58850194815352E-05);(\"procedure\",2.58696429772036E-05);(\"defended\",2.5864870958618E-05);(\"attempting\",2.58431317628388E-05);(\"raising\",2.58426015385515E-05);(\"measured\",2.58404806414023E-05);(\"welfare\",2.58304063799437E-05);(\"sat\",2.58224530156342E-05);(\"undergraduate\",2.58192716699104E-05);(\"argument\",2.58081369598772E-05);(\"noble\",2.5802304492717E-05);(\"vocalist\",2.57832164183743E-05);(\"intellectual\",2.57726119326283E-05);(\"youtube\",2.57651887926062E-05);(\"difficulties\",2.57625376711697E-05);(\"wider\",2.57551145311475E-05);(\"exit\",2.57492820639873E-05);(\"distinctive\",2.57423891482524E-05);(\"crystal\",2.57339055596557E-05);(\"phd\",2.57286033167827E-05);(\"pink\",2.57233010739098E-05);(\"peru\",2.57206499524733E-05);(\"execution\",2.57142872610257E-05);(\"proteins\",2.57116361395892E-05);(\"pm\",2.56877760466609E-05);(\"intermediate\",2.5686185373799E-05);(\"oliver\",2.56792924580641E-05);(\"columns\",2.56750506637658E-05);(\"celebration\",2.56692181966055E-05);(\"bengal\",2.56549021408485E-05);(\"root\",2.56501301222628E-05);(\"spend\",2.56453581036771E-05);(\"restaurants\",2.56299815993455E-05);(\"scientist\",2.56257398050472E-05);(\"flood\",2.56225584593234E-05);(\"maritime\",2.56199073378869E-05);(\"fun\",2.56061215064172E-05);(\"bonus\",2.56018797121188E-05);(\"boxing\",2.5598698366395E-05);(\"cardinal\",2.55965774692459E-05);(\"hole\",2.5589684553511E-05);(\"ordinary\",2.55859729834999E-05);(\"stakes\",2.5575368497754E-05);(\"thick\",2.55668849091572E-05);(\"inherited\",2.55599919934224E-05);(\"flew\",2.55594617691351E-05);(\"theology\",2.55594617691351E-05);(\"barcelona\",2.55568106476986E-05);(\"inducted\",2.55393132462178E-05);(\"armenian\",2.55366621247813E-05);(\"colombia\",2.55202251718751E-05);(\"removal\",2.55096206861292E-05);(\"lie\",2.55053788918308E-05);(\"liberation\",2.55027277703943E-05);(\"eu\",2.54979557518087E-05);(\"turner\",2.54958348546595E-05);(\"decide\",2.54947744060849E-05);(\"slave\",2.5493183733223E-05);(\"mainland\",2.54581889302614E-05);(\"answer\",2.54512960145266E-05);(\"worst\",2.54507657902393E-05);(\"destroy\",2.54507657902393E-05);(\"visits\",2.54497053416647E-05);(\"characteristic\",2.54491751173774E-05);(\"meat\",2.54391008559187E-05);(\"stress\",2.54332683887585E-05);(\"poll\",2.54322079401839E-05);(\"experiments\",2.54078176229682E-05);(\"crosses\",2.54051665015318E-05);(\"long-term\",2.54030456043826E-05);(\"nevada\",2.53712321471448E-05);(\"leaf\",2.53457813813545E-05);(\"coffee\",2.53357071198959E-05);(\"corruption\",2.53330559984594E-05);(\"gift\",2.53028332140835E-05);(\"narrative\",2.52853358126027E-05);(\"exact\",2.52678384111219E-05);(\"dual\",2.52620059439617E-05);(\"variations\",2.52561734768014E-05);(\"theories\",2.52460992153428E-05);(\"impossible\",2.52349645053095E-05);(\"pointed\",2.52248902438509E-05);(\"options\",2.52243600195636E-05);(\"improvements\",2.52100439638066E-05);(\"perspective\",2.52068626180828E-05);(\"physician\",2.52031510480717E-05);(\"succession\",2.52010301509225E-05);(\"collaborated\",2.51978488051988E-05);(\"neck\",2.51951976837623E-05);(\"warning\",2.51808816280053E-05);(\"friendship\",2.51702771422593E-05);(\"punk\",2.51633842265245E-05);(\"preservation\",2.51570215350769E-05);(\"sultan\",2.51432357036072E-05);(\"bernard\",2.51400543578834E-05);(\"terry\",2.51310405449994E-05);(\"extend\",2.51209662835408E-05);(\"programmes\",2.51151338163805E-05);(\"milk\",2.51103617977948E-05);(\"locomotive\",2.51082409006456E-05);(\"descendants\",2.51050595549219E-05);(\"bone\",2.51039991063473E-05);(\"microsoft\",2.50986968634743E-05);(\"literacy\",2.50827901348554E-05);(\"eagles\",2.50705949762476E-05);(\"affect\",2.50610509390762E-05);(\"speakers\",2.50488557804684E-05);(\"permitted\",2.50371908461479E-05);(\"missile\",2.50329490518495E-05);(\"architects\",2.50292374818384E-05);(\"carries\",2.5015981874656E-05);(\"ensemble\",2.50053773889101E-05);(\"lodge\",2.4996363576026E-05);(\"reducing\",2.49884102117166E-05);(\"ranges\",2.49751546045342E-05);(\"atmosphere\",2.49645501187882E-05);(\"tone\",2.49369784558488E-05);(\"developments\",2.49284948672521E-05);(\"depicted\",2.49263739701029E-05);(\"commenced\",2.4924783297241E-05);(\"prove\",2.49221321758045E-05);(\"connect\",2.49067556714729E-05);(\"fundamental\",2.49062254471856E-05);(\"martial\",2.49025138771745E-05);(\"protestant\",2.49025138771745E-05);(\"relevant\",2.49003929800253E-05);(\"burned\",2.48929698400032E-05);(\"experiment\",2.48760026628097E-05);(\"decorated\",2.48685795227875E-05);(\"resource\",2.48659284013511E-05);(\"comprises\",2.48616866070527E-05);(\"sharp\",2.48547936913178E-05);(\"liga\",2.48537332427432E-05);(\"emphasis\",2.48473705512957E-05);(\"warriors\",2.48410078598481E-05);(\"thin\",2.4837296289837E-05);(\"nominations\",2.48330544955387E-05);(\"cdp\",2.48330544955387E-05);(\"touch\",2.48208593369308E-05);(\"placing\",2.48182082154944E-05);(\"objective\",2.48176779912071E-05);(\"tenth\",2.48176779912071E-05);(\"opponent\",2.48166175426325E-05);(\"roberts\",2.48081339540357E-05);(\"grave\",2.47964690197152E-05);(\"globe\",2.47922272254168E-05);(\"exactly\",2.47879854311185E-05);(\"nepal\",2.47863947582566E-05);(\"advocate\",2.47757902725106E-05);(\"structural\",2.47720787024996E-05);(\"autonomous\",2.47598835438917E-05);(\"approaches\",2.47519301795823E-05);(\"jacob\",2.4737083899538E-05);(\"ft\",2.47301909838031E-05);(\"collins\",2.47296607595158E-05);(\"coached\",2.47201167223445E-05);(\"defender\",2.47169353766207E-05);(\"weak\",2.47105726851731E-05);(\"hugh\",2.47042099937256E-05);(\"university's\",2.47010286480018E-05);(\"organisations\",2.46946659565542E-05);(\"examination\",2.46681547421894E-05);(\"casualties\",2.46681547421894E-05);(\"christians\",2.46623222750292E-05);(\"pine\",2.46596711535927E-05);(\"saudi\",2.46554293592943E-05);(\"luis\",2.46522480135705E-05);(\"thirteen\",2.46490666678467E-05);(\"pairs\",2.46453550978357E-05);(\"wolf\",2.46395226306754E-05);(\"escaped\",2.46384621821008E-05);(\"banking\",2.46379319578135E-05);(\"printing\",2.46135416405979E-05);(\"ticket\",2.4611950967736E-05);(\"namely\",2.46087696220122E-05);(\"targets\",2.46071789491503E-05);(\"trio\",2.46018767062773E-05);(\"informed\",2.4592332669106E-05);(\"rally\",2.4592332669106E-05);(\"hospitals\",2.45796072862109E-05);(\"towers\",2.45790770619236E-05);(\"catherine\",2.45790770619236E-05);(\"seemed\",2.45716539219014E-05);(\"coins\",2.45690028004649E-05);(\"stem\",2.45684725761776E-05);(\"civic\",2.45393102403763E-05);(\"preserve\",2.45334777732161E-05);(\"demands\",2.45308266517796E-05);(\"gates\",2.45292359789177E-05);(\"explains\",2.45069665588512E-05);(\"jay\",2.4504845661702E-05);(\"societies\",2.45043154374147E-05);(\"logo\",2.45021945402656E-05);(\"tea\",2.45016643159783E-05);(\"veteran\",2.4501134091691E-05);(\"bobby\",2.44942411759561E-05);(\"receives\",2.44915900545196E-05);(\"reforms\",2.44910598302323E-05);(\"parking\",2.44820460173483E-05);(\"colonies\",2.44804553444864E-05);(\"sharing\",2.44587161487072E-05);(\"faces\",2.44390978500773E-05);(\"assists\",2.44348560557789E-05);(\"compound\",2.44337956072043E-05);(\"party's\",2.44284933643313E-05);(\"resumed\",2.44194795514473E-05);(\"molecular\",2.44078146171268E-05);(\"instruction\",2.43982705799554E-05);(\"presidency\",2.43924381127952E-05);(\"vegas\",2.43839545241984E-05);(\"herbert\",2.43807731784746E-05);(\"aboard\",2.43738802627398E-05);(\"hardware\",2.43722895898779E-05);(\"reserves\",2.43717593655906E-05);(\"travels\",2.43659268984303E-05);(\"argentine\",2.4365396674143E-05);(\"recalled\",2.43558526369717E-05);(\"ghost\",2.43351738897671E-05);(\"earn\",2.43176764882863E-05);(\"emotional\",2.42943466196453E-05);(\"ref\",2.42805607881756E-05);(\"rocket\",2.42572309195345E-05);(\"midfielder\",2.4254579798098E-05);(\"signals\",2.42529891252361E-05);(\"boards\",2.42529891252361E-05);(\"disbanded\",2.4231249929457E-05);(\"non-families\",2.42291290323078E-05);(\"teach\",2.42190547708491E-05);(\"pulled\",2.42142827522635E-05);(\"talks\",2.4206329387954E-05);(\"enters\",2.41883017621859E-05);(\"variable\",2.41856506407495E-05);(\"presents\",2.41755763792908E-05);(\"computers\",2.41676230149814E-05);(\"sung\",2.41649718935449E-05);(\"são\",2.41601998749592E-05);(\"ken\",2.41273259691468E-05);(\"roster\",2.41267957448595E-05);(\"declaration\",2.40965729604836E-05);(\"ultimate\",2.4095512511909E-05);(\"kilometers\",2.40870289233123E-05);(\"collapse\",2.40796057832901E-05);(\"elevated\",2.40769546618536E-05);(\"phrase\",2.40737733161299E-05);(\"aside\",2.40568061389364E-05);(\"murdered\",2.40477923260523E-05);(\"literally\",2.40440807560413E-05);(\"mathematical\",2.4038248288881E-05);(\"referring\",2.40196904388256E-05);(\"quarterback\",2.40112068502289E-05);(\"sequel\",2.40101464016543E-05);(\"azerbaijan\",2.40090859530797E-05);(\"compiled\",2.39968907944719E-05);(\"petersburg\",2.39905281030243E-05);(\"wasn't\",2.3989997878737E-05);(\"affiliate\",2.39857560844386E-05);(\"rogers\",2.39804538415657E-05);(\"landmark\",2.39719702529689E-05);(\"dick\",2.39714400286816E-05);(\"denver\",2.39603053186484E-05);(\"hudson\",2.39603053186484E-05);(\"artificial\",2.39550030757754E-05);(\"variant\",2.39550030757754E-05);(\"regard\",2.39422776928803E-05);(\"warsaw\",2.39396265714438E-05);(\"sierra\",2.39348545528581E-05);(\"ruler\",2.39348545528581E-05);(\"rabbi\",2.39279616371233E-05);(\"contracts\",2.39237198428249E-05);(\"manuscript\",2.38961481798855E-05);(\"songwriter\",2.38866041427141E-05);(\"tributary\",2.38866041427141E-05);(\"sum\",2.38759996569682E-05);(\"error\",2.38733485355317E-05);(\"parade\",2.38696369655207E-05);(\"deemed\",2.38653951712223E-05);(\"supplied\",2.3859562704062E-05);(\"compositions\",2.38420653025812E-05);(\"switched\",2.38325212654099E-05);(\"pearl\",2.38277492468242E-05);(\"consistent\",2.38224470039513E-05);(\"deck\",2.38224470039513E-05);(\"telling\",2.38081309481942E-05);(\"delaware\",2.38038891538959E-05);(\"croatia\",2.37985869110229E-05);(\"amsterdam\",2.37901033224262E-05);(\"keith\",2.37763174909564E-05);(\"larry\",2.37678339023597E-05);(\"shah\",2.37641223323486E-05);(\"revised\",2.37551085194646E-05);(\"bulgarian\",2.37429133608568E-05);(\"installation\",2.37370808936965E-05);(\"gothic\",2.37307182022489E-05);(\"variation\",2.37248857350887E-05);(\"vincent\",2.37174625950665E-05);(\"wang\",2.37095092307571E-05);(\"grants\",2.36983745207238E-05);(\"looks\",2.36898909321271E-05);(\"concepts\",2.36840584649668E-05);(\"florence\",2.36824677921049E-05);(\"curriculum\",2.36692121849225E-05);(\"rev\",2.36538356805909E-05);(\"consumption\",2.36490636620053E-05);(\"associations\",2.36427009705577E-05);(\"consist\",2.36389894005466E-05);(\"raid\",2.36315662605245E-05);(\"athlete\",2.36315662605245E-05);(\"pedro\",2.36305058119499E-05);(\"aims\",2.36204315504912E-05);(\"efficiency\",2.36045248218723E-05);(\"earthquake\",2.36034643732977E-05);(\"traveling\",2.35971016818502E-05);(\"innovation\",2.35811949532313E-05);(\"drum\",2.35716509160599E-05);(\"nebraska\",2.35562744117283E-05);(\"extinct\",2.35451397016951E-05);(\"jefferson\",2.3527112075927E-05);(\"clock\",2.35265818516397E-05);(\"mansion\",2.35207493844795E-05);(\"difficulty\",2.351279602017E-05);(\"serial\",2.35053728801479E-05);(\"newcastle\",2.34921172729654E-05);(\"connects\",2.34915870486781E-05);(\"matrix\",2.34793918900703E-05);(\"dress\",2.34693176286117E-05);(\"venice\",2.34650758343133E-05);(\"trouble\",2.34608340400149E-05);(\"archives\",2.34587131428658E-05);(\"cricketer\",2.34258392370534E-05);(\"nickname\",2.34231881156169E-05);(\"aware\",2.34173556484566E-05);(\"knights\",2.34136440784455E-05);(\"militia\",2.34115231812964E-05);(\"dissolved\",2.34088720598599E-05);(\"renaissance\",2.34088720598599E-05);(\"canton\",2.34056907141361E-05);(\"professionals\",2.33987977984012E-05);(\"grove\",2.33972071255393E-05);(\"exhibit\",2.33913746583791E-05);(\"controls\",2.33903142098045E-05);(\"fallen\",2.33866026397934E-05);(\"ideal\",2.33844817426442E-05);(\"reflect\",2.3373347032611E-05);(\"northeastern\",2.3368044789738E-05);(\"amounts\",2.33622123225778E-05);(\"interaction\",2.33622123225778E-05);(\"predecessor\",2.33579705282794E-05);(\"coup\",2.33441846968097E-05);(\"chancellor\",2.33410033510859E-05);(\"administered\",2.33410033510859E-05);(\"input\",2.33410033510859E-05);(\"monday\",2.33261570710416E-05);(\"freight\",2.33182037067321E-05);(\"magnetic\",2.33176734824448E-05);(\"lloyd\",2.33144921367211E-05);(\"batting\",2.33097201181354E-05);(\"oblast\",2.33091898938481E-05);(\"worn\",2.33012365295386E-05);(\"neighboring\",2.32969947352403E-05);(\"ask\",2.32922227166546E-05);(\"sort\",2.32895715952181E-05);(\"yale\",2.3285860025207E-05);(\"widow\",2.32805577823341E-05);(\"craig\",2.32641208294279E-05);(\"reconstruction\",2.32598790351295E-05);(\"prayer\",2.32582883622676E-05);(\"suspension\",2.32566976894057E-05);(\"drinking\",2.32545767922565E-05);(\"convinced\",2.32508652222455E-05);(\"temporarily\",2.32466234279471E-05);(\"ottawa\",2.32434420822233E-05);(\"pushed\",2.32423816336487E-05);(\"editorial\",2.32291260264663E-05);(\"beer\",2.32211726621569E-05);(\"customs\",2.32158704192839E-05);(\"wish\",2.32095077278363E-05);(\"failing\",2.32073868306871E-05);(\"harold\",2.32031450363888E-05);(\"southwestern\",2.31920103263555E-05);(\"tested\",2.31888289806318E-05);(\"broadcasts\",2.31861778591953E-05);(\"croatian\",2.31755733734493E-05);(\"achievements\",2.31692106820018E-05);(\"integration\",2.31628479905542E-05);(\"renowned\",2.31543644019575E-05);(\"plastic\",2.31506528319464E-05);(\"recipient\",2.31405785704878E-05);(\"ca\",2.31315647576037E-05);(\"jail\",2.31257322904435E-05);(\"exile\",2.31236113932943E-05);(\"database\",2.31098255618246E-05);(\"warfare\",2.30955095060675E-05);(\"dialogue\",2.30933886089184E-05);(\"mosque\",2.30912677117692E-05);(\"bombing\",2.30827841231724E-05);(\"depot\",2.30817236745978E-05);(\"bulgaria\",2.30594542545314E-05);(\"thereby\",2.30583938059568E-05);(\"explain\",2.30536217873711E-05);(\"gospel\",2.30467288716363E-05);(\"citing\",2.30345337130284E-05);(\"recruited\",2.30318825915919E-05);(\"boulevard\",2.30308221430174E-05);(\"alumni\",2.30090829472382E-05);(\"seminary\",2.30085527229509E-05);(\"rebels\",2.29963575643431E-05);(\"commanding\",2.29958273400558E-05);(\"gathered\",2.29868135271717E-05);(\"uss\",2.29862833028844E-05);(\"two-year\",2.29597720885196E-05);(\"psychological\",2.29528791727847E-05);(\"equation\",2.29518187242102E-05);(\"dennis\",2.29359119955913E-05);(\"spots\",2.29322004255802E-05);(\"afternoon\",2.29279586312818E-05);(\"hans\",2.29226563884088E-05);(\"fellowship\",2.29205354912596E-05);(\"centres\",2.29184145941105E-05);(\"anime\",2.2915763472674E-05);(\"veterans\",2.29141727998121E-05);(\"sixteen\",2.29115216783756E-05);(\"cultures\",2.2910461229801E-05);(\"perry\",2.29067496597899E-05);(\"diet\",2.29062194355026E-05);(\"queen's\",2.29030380897789E-05);(\"aspect\",2.2901447416917E-05);(\"craft\",2.2901447416917E-05);(\"helen\",2.28680432868173E-05);(\"pilots\",2.28643317168062E-05);(\"random\",2.28638014925189E-05);(\"venues\",2.28611503710824E-05);(\"adventures\",2.28611503710824E-05);(\"specialist\",2.28595596982205E-05);(\"switch\",2.28569085767841E-05);(\"noise\",2.28569085767841E-05);(\"shut\",2.28383507267287E-05);(\"abolished\",2.2833578708143E-05);(\"hear\",2.28314578109938E-05);(\"manufacturers\",2.28272160166954E-05);(\"government's\",2.28176719795241E-05);(\"estates\",2.28160813066622E-05);(\"comments\",2.28081279423528E-05);(\"consequently\",2.28033559237671E-05);(\"pitched\",2.27985839051814E-05);(\"kenya\",2.27869189708609E-05);(\"farms\",2.2780026055126E-05);(\"ralph\",2.27779051579769E-05);(\"bills\",2.27752540365404E-05);(\"attacking\",2.27651797750817E-05);(\"delayed\",2.27646495507944E-05);(\"palm\",2.27598775322088E-05);(\"refugees\",2.2756696186485E-05);(\"putting\",2.27349569907058E-05);(\"verse\",2.27238222806726E-05);(\"stops\",2.2722761832098E-05);(\"predominantly\",2.27153386920758E-05);(\"cutting\",2.27148084677885E-05);(\"updated\",2.27073853277664E-05);(\"sheffield\",2.27057946549045E-05);(\"enemies\",2.26904181505729E-05);(\"paint\",2.26845856834126E-05);(\"missionary\",2.26819345619762E-05);(\"posts\",2.26814043376889E-05);(\"wake\",2.26808741134016E-05);(\"singers\",2.26782229919651E-05);(\"fill\",2.26538326747494E-05);(\"fortress\",2.264587931044E-05);(\"mystery\",2.26379259461305E-05);(\"gear\",2.2631563254683E-05);(\"liquid\",2.26193680960752E-05);(\"interesting\",2.26087636103292E-05);(\"retreat\",2.26045218160308E-05);(\"certificate\",2.25944475545722E-05);(\"surprise\",2.25896755359865E-05);(\"john's\",2.25790710502406E-05);(\"preliminary\",2.25774803773787E-05);(\"gauge\",2.25742990316549E-05);(\"feelings\",2.25711176859312E-05);(\"nearest\",2.25504389387266E-05);(\"portions\",2.25488482658647E-05);(\"edwards\",2.25377135558315E-05);(\"payment\",2.25313508643839E-05);(\"grass\",2.25292299672347E-05);(\"unity\",2.25165045843396E-05);(\"blind\",2.25005978557207E-05);(\"governing\",2.24990071828588E-05);(\"lebanon\",2.24974165099969E-05);(\"detail\",2.24894631456875E-05);(\"nephew\",2.24894631456875E-05);(\"indicating\",2.24862817999637E-05);(\"sailing\",2.24857515756764E-05);(\"surrender\",2.24831004542399E-05);(\"ski\",2.24751470899305E-05);(\"files\",2.24666635013337E-05);(\"ron\",2.24634821556099E-05);(\"nationwide\",2.2461891482748E-05);(\"neighbouring\",2.24565892398751E-05);(\"interchange\",2.24555287913005E-05);(\"danger\",2.24496963241402E-05);(\"manga\",2.24412127355435E-05);(\"butler\",2.24401522869689E-05);(\"non-profit\",2.24337895955213E-05);(\"load\",2.24231851097754E-05);(\"plaza\",2.24205339883389E-05);(\"experts\",2.24157619697532E-05);(\"documented\",2.24147015211786E-05);(\"drove\",2.24104597268803E-05);(\"engagement\",2.24035668111454E-05);(\"aggregate\",2.23950832225487E-05);(\"shanghai\",2.23871298582392E-05);(\"layout\",2.23701626810457E-05);(\"waves\",2.23611488681617E-05);(\"abilities\",2.23579675224379E-05);(\"extending\",2.2356376849576E-05);(\"ports\",2.23447119152555E-05);(\"axis\",2.23388794480952E-05);(\"shadow\",2.23245633923382E-05);(\"all-star\",2.23213820466144E-05);(\"asking\",2.23176704766034E-05);(\"grandson\",2.2313428682305E-05);(\"scout\",2.23107775608685E-05);(\"prestigious\",2.23102473365812E-05);(\"smooth\",2.23097171122939E-05);(\"diesel\",2.23044148694209E-05);(\"functional\",2.23022939722718E-05);(\"interface\",2.23022939722718E-05);(\"methodist\",2.22980521779734E-05);(\"stuart\",2.22922197108131E-05);(\"susan\",2.2284796570791E-05);(\"inn\",2.22773734307688E-05);(\"retiring\",2.22726014121831E-05);(\"maintaining\",2.22720711878958E-05);(\"embassy\",2.22667689450229E-05);(\"notice\",2.2265178272161E-05);(\"theatrical\",2.22614667021499E-05);(\"garrison\",2.22535133378405E-05);(\"confused\",2.22498017678294E-05);(\"shoot\",2.22482110949675E-05);(\"faster\",2.22439693006691E-05);(\"sleep\",2.22328345906359E-05);(\"manual\",2.2231243917774E-05);(\"byzantine\",2.22301834691994E-05);(\"politicians\",2.22280625720502E-05);(\"hms\",2.22275323477629E-05);(\"radiation\",2.22227603291773E-05);(\"observation\",2.22206394320281E-05);(\"leo\",2.22179883105916E-05);(\"hop\",2.22137465162932E-05);(\"generations\",2.21994304605362E-05);(\"madison\",2.21925375448013E-05);(\"readers\",2.21904166476522E-05);(\"lords\",2.21856446290665E-05);(\"rush\",2.21835237319173E-05);(\"diversity\",2.21745099190333E-05);(\"naming\",2.21718587975968E-05);(\"nationalist\",2.21649658818619E-05);(\"libraries\",2.21570125175525E-05);(\"ss\",2.21501196018176E-05);(\"challenged\",2.21453475832319E-05);(\"syrian\",2.21331524246241E-05);(\"custom\",2.2125729284602E-05);(\"moderate\",2.21130039017068E-05);(\"berkeley\",2.21098225559831E-05);(\"tube\",2.21087621074085E-05);(\"excellence\",2.21071714345466E-05);(\"actively\",2.21002785188117E-05);(\"episcopal\",2.20986878459498E-05);(\"crops\",2.20949762759388E-05);(\"tier\",2.20886135844912E-05);(\"perceived\",2.20880833602039E-05);(\"worker\",2.20854322387674E-05);(\"relay\",2.20833113416182E-05);(\"bull\",2.20700557344358E-05);(\"fourteen\",2.20674046129993E-05);(\"victories\",2.20583908001153E-05);(\"eddie\",2.2057860575828E-05);(\"collegiate\",2.20371818286234E-05);(\"victim\",2.20308191371759E-05);(\"airline\",2.20196844271426E-05);(\"steven\",2.20165030814189E-05);(\"appeals\",2.20159728571316E-05);(\"presentation\",2.20037776985237E-05);(\"doctors\",2.20016568013746E-05);(\"thai\",2.19974150070762E-05);(\"suddenly\",2.19958243342143E-05);(\"statements\",2.19931732127778E-05);(\"shorter\",2.19921127642032E-05);(\"aids\",2.19852198484684E-05);(\"rick\",2.19846896241811E-05);(\"montana\",2.19825687270319E-05);(\"warm\",2.19693131198495E-05);(\"burial\",2.19459832512084E-05);(\"bars\",2.19401507840481E-05);(\"kitchen\",2.19390903354735E-05);(\"firing\",2.19369694383244E-05);(\"altitude\",2.19316671954514E-05);(\"oxygen\",2.19263649525784E-05);(\"boss\",2.19237138311419E-05);(\"mutual\",2.19210627097055E-05);(\"quick\",2.19168209154071E-05);(\"journalists\",2.19109884482468E-05);(\"sustained\",2.19003839625009E-05);(\"reverse\",2.18956119439152E-05);(\"bachelor's\",2.18956119439152E-05);(\"catch\",2.18908399253296E-05);(\"manuel\",2.18887190281804E-05);(\"empty\",2.1884477233882E-05);(\"fortune\",2.18812958881582E-05);(\"criteria\",2.18807656638709E-05);(\"segments\",2.18632682623901E-05);(\"obama\",2.18531940009315E-05);(\"alpha\",2.18463010851966E-05);(\"sword\",2.1841529066611E-05);(\"burning\",2.18399383937491E-05);(\"discontinued\",2.1821910767981E-05);(\"imprisoned\",2.18203200951191E-05);(\"numbered\",2.18197898708318E-05);(\"emerging\",2.18012320207764E-05);(\"murphy\",2.17964600021908E-05);(\"focusing\",2.17959297779035E-05);(\"destination\",2.17938088807543E-05);(\"discuss\",2.1793278656467E-05);(\"advisor\",2.17869159650194E-05);(\"heroes\",2.17821439464337E-05);(\"accommodate\",2.17794928249973E-05);(\"south-east\",2.17688883392513E-05);(\"tales\",2.17672976663894E-05);(\"enzyme\",2.17614651992292E-05);(\"graphics\",2.17535118349197E-05);(\"arrives\",2.17524513863451E-05);(\"samples\",2.17508607134832E-05);(\"gaining\",2.17455584706103E-05);(\"package\",2.17434375734611E-05);(\"signature\",2.17376051063008E-05);(\"locality\",2.17333633120024E-05);(\"kerala\",2.17312424148533E-05);(\"behaviour\",2.17190472562454E-05);(\"touchdowns\",2.17153356862344E-05);(\"jon\",2.1711093891936E-05);(\"fewer\",2.17089729947868E-05);(\"artwork\",2.16851129018585E-05);(\"romance\",2.16835222289966E-05);(\"prepare\",2.16829920047093E-05);(\"quantum\",2.16713270703887E-05);(\"reflected\",2.1662843481792E-05);(\"tape\",2.16617830332174E-05);(\"riders\",2.16586016874936E-05);(\"intense\",2.16395136131509E-05);(\"accurate\",2.16368624917145E-05);(\"beaten\",2.16363322674272E-05);(\"fate\",2.16320904731288E-05);(\"extends\",2.1619895314521E-05);(\"tomb\",2.16114117259242E-05);(\"yugoslavia\",2.16103512773496E-05);(\"conferences\",2.15970956701672E-05);(\"situations\",2.15933841001561E-05);(\"considering\",2.1585960960134E-05);(\"clients\",2.15748262501007E-05);(\"cloud\",2.15684635586532E-05);(\"oral\",2.1566342661504E-05);(\"migration\",2.15541475028962E-05);(\"tiger\",2.15499057085978E-05);(\"gilbert\",2.15456639142994E-05);(\"tale\",2.15403616714265E-05);(\"wellington\",2.15361198771281E-05);(\"photo\",2.1532408307117E-05);(\"colleagues\",2.15244549428076E-05);(\"regardless\",2.1523394494233E-05);(\"displays\",2.1523394494233E-05);(\"tommy\",2.15122597841997E-05);(\"nashville\",2.15085482141887E-05);(\"belong\",2.15005948498792E-05);(\"provisions\",2.14995344013046E-05);(\"arrive\",2.14974135041554E-05);(\"sc\",2.14968832798681E-05);(\"gregory\",2.14942321584317E-05);(\"reformed\",2.14724929626525E-05);(\"survival\",2.14693116169287E-05);(\"argues\",2.14682511683541E-05);(\"contribute\",2.1464539598343E-05);(\"rivals\",2.14640093740557E-05);(\"unions\",2.14640093740557E-05);(\"strange\",2.14443910754258E-05);(\"lion\",2.14385586082655E-05);(\"relating\",2.14279541225196E-05);(\"soap\",2.14221216553593E-05);(\"doctorate\",2.14184100853482E-05);(\"trump\",2.1407275375315E-05);(\"stanford\",2.14062149267404E-05);(\"spectrum\",2.14051544781658E-05);(\"proof\",2.14051544781658E-05);(\"venezuela\",2.13812943852375E-05);(\"vermont\",2.13797037123756E-05);(\"syndrome\",2.13770525909391E-05);(\"luke\",2.13765223666518E-05);(\"prevented\",2.13717503480661E-05);(\"citizenship\",2.13696294509169E-05);(\"prisoner\",2.13653876566186E-05);(\"pit\",2.1353722722298E-05);(\"abu\",2.13484204794251E-05);(\"revenge\",2.13415275636902E-05);(\"promised\",2.13309230779443E-05);(\"one's\",2.13298626293697E-05);(\"marathon\",2.13293324050824E-05);(\"hughes\",2.13160767979E-05);(\"pitcher\",2.13118350036016E-05);(\"divine\",2.13086536578778E-05);(\"iraqi\",2.12932771535462E-05);(\"doctrine\",2.12927469292589E-05);(\"spell\",2.12810819949384E-05);(\"sending\",2.12657054906068E-05);(\"pa\",2.12593427991592E-05);(\"chapters\",2.12566916777228E-05);(\"commentary\",2.12460871919768E-05);(\"separation\",2.12386640519547E-05);(\"efficient\",2.12238177719104E-05);(\"independently\",2.1219575977612E-05);(\"lesser\",2.12169248561755E-05);(\"rob\",2.12132132861644E-05);(\"photographer\",2.12089714918661E-05);(\"merely\",2.12036692489931E-05);(\"mars\",2.11967763332582E-05);(\"circulation\",2.11935949875345E-05);(\"understood\",2.11840509503631E-05);(\"fairly\",2.11792789317774E-05);(\"virus\",2.11739766889045E-05);(\"workshop\",2.11681442217442E-05);(\"eat\",2.11681442217442E-05);(\"jose\",2.11628419788712E-05);(\"plains\",2.11591304088602E-05);(\"intervention\",2.11564792874237E-05);(\"remembered\",2.11416330073794E-05);(\"chiefs\",2.11379214373683E-05);(\"addressed\",2.11352703159318E-05);(\"dealing\",2.1132088970208E-05);(\"talking\",2.1132088970208E-05);(\"show's\",2.11278471759097E-05);(\"conductor\",2.11257262787605E-05);(\"underwent\",2.10912617000862E-05);(\"bench\",2.10875501300751E-05);(\"stored\",2.10785363171911E-05);(\"operators\",2.10758851957546E-05);(\"acoustic\",2.10631598128595E-05);(\"farmer\",2.10583877942738E-05);(\"beliefs\",2.10530855514008E-05);(\"mason\",2.10499042056771E-05);(\"committees\",2.10355881499201E-05);(\"variants\",2.10228627670249E-05);(\"realized\",2.10186209727266E-05);(\"ordained\",2.10117280569917E-05);(\"footage\",2.10096071598425E-05);(\"palestine\",2.1003244468395E-05);(\"threw\",2.0997942225522E-05);(\"disorder\",2.0997942225522E-05);(\"auckland\",2.09942306555109E-05);(\"identification\",2.09857470669142E-05);(\"www\",2.09852168426269E-05);(\"celtic\",2.09799145997539E-05);(\"handed\",2.09788541511793E-05);(\"backing\",2.09767332540301E-05);(\"founders\",2.09613567496985E-05);(\"ted\",2.09571149554001E-05);(\"teeth\",2.09512824882399E-05);(\"divorce\",2.09486313668034E-05);(\"orbit\",2.09316641896099E-05);(\"seal\",2.09258317224496E-05);(\"restrictions\",2.09194690310021E-05);(\"forcing\",2.09115156666926E-05);(\"ms\",2.0910455218118E-05);(\"lighting\",2.09040925266705E-05);(\"graphic\",2.09003809566594E-05);(\"allegations\",2.08998507323721E-05);(\"dependent\",2.08913671437754E-05);(\"maintains\",2.0887125349477E-05);(\"handling\",2.08765208637311E-05);(\"commitment\",2.08712186208581E-05);(\"rookie\",2.08664466022724E-05);(\"stationed\",2.08600839108249E-05);(\"han\",2.08553118922392E-05);(\"indies\",2.08240286592887E-05);(\"colspan\",2.08224379864268E-05);(\"headquartered\",2.08203170892776E-05);(\"agree\",2.08028196877968E-05);(\"canyon\",2.07969872206366E-05);(\"angels\",2.07948663234874E-05);(\"lecturer\",2.07900943049017E-05);(\"engage\",2.07874431834652E-05);(\"essex\",2.07847920620287E-05);(\"prague\",2.07704760062717E-05);(\"google\",2.07694155576971E-05);(\"anglican\",2.07651737633988E-05);(\"rhythm\",2.07630528662496E-05);(\"mixture\",2.07535088290782E-05);(\"cruz\",2.07535088290782E-05);(\"re-elected\",2.07503274833545E-05);(\"danny\",2.07497972590672E-05);(\"allegedly\",2.07360114275974E-05);(\"requiring\",2.07269976147134E-05);(\"hamlet\",2.07238162689896E-05);(\"chorus\",2.07238162689896E-05);(\"mtv\",2.07068490917961E-05);(\"seriously\",2.06978352789121E-05);(\"grammy\",2.06946539331883E-05);(\"geographic\",2.06920028117518E-05);(\"bath\",2.06824587745805E-05);(\"employee\",2.06819285502932E-05);(\"cuts\",2.0679807653144E-05);(\"tissue\",2.06718542888346E-05);(\"jet\",2.06686729431108E-05);(\"procedures\",2.06686729431108E-05);(\"prototype\",2.06670822702489E-05);(\"tribal\",2.0665491597387E-05);(\"cool\",2.06617800273759E-05);(\"larvae\",2.06617800273759E-05);(\"handle\",2.06501150930554E-05);(\"referendum\",2.06442826258951E-05);(\"sandy\",2.06326176915746E-05);(\"breaks\",2.06267852244143E-05);(\"beam\",2.06241341029779E-05);(\"exterior\",2.06167109629557E-05);(\"cork\",2.06167109629557E-05);(\"pale\",2.06098180472208E-05);(\"exploration\",2.05960322157511E-05);(\"journals\",2.05949717671765E-05);(\"cardinals\",2.05923206457401E-05);(\"electronics\",2.0588609075729E-05);(\"sure\",2.05827766085687E-05);(\"freestyle\",2.0578004589983E-05);(\"followers\",2.05764139171212E-05);(\"punjab\",2.05758836928339E-05);(\"demanded\",2.05541444970547E-05);(\"reactions\",2.0549372478469E-05);(\"discrimination\",2.0549372478469E-05);(\"heaven\",2.05451306841707E-05);(\"massacre\",2.05451306841707E-05);(\"eventual\",2.05408888898723E-05);(\"ivan\",2.05339959741374E-05);(\"bishops\",2.05324053012755E-05);(\"armies\",2.0526042609828E-05);(\"lectures\",2.05196799183804E-05);(\"sony\",2.05164985726566E-05);(\"voyage\",2.05138474512201E-05);(\"theological\",2.05106661054964E-05);(\"holland\",2.05085452083472E-05);(\"audiences\",2.0501122068325E-05);(\"eve\",2.04947593768775E-05);(\"mary's\",2.04788526482586E-05);(\"north-west\",2.04735504053856E-05);(\"tasks\",2.04618854710651E-05);(\"nights\",2.04592343496286E-05);(\"shots\",2.04571134524794E-05);(\"gameplay\",2.04560530039048E-05);(\"registration\",2.04496903124573E-05);(\"severely\",2.04486298638827E-05);(\"consultant\",2.04417369481478E-05);(\"arrangements\",2.04359044809875E-05);(\"greg\",2.04321929109765E-05);(\"fastest\",2.04311324624019E-05);(\"dynamic\",2.04300720138273E-05);(\"south-west\",2.0415225733783E-05);(\"praise\",2.04125746123465E-05);(\"lawsuit\",2.04093932666227E-05);(\"wheels\",2.04067421451862E-05);(\"repeatedly\",2.04056816966116E-05);(\"permanently\",2.0404621248037E-05);(\"conquest\",2.03982585565895E-05);(\"guidance\",2.03855331736944E-05);(\"vietnamese\",2.03828820522579E-05);(\"raymond\",2.0375989136523E-05);(\"heir\",2.03409943335614E-05);(\"neil\",2.03362223149758E-05);(\"reed\",2.0333040969252E-05);(\"survivors\",2.03181946892077E-05);(\"indonesian\",2.03107715491855E-05);(\"brings\",2.03065297548872E-05);(\"companion\",2.03017577363015E-05);(\"abraham\",2.03006972877269E-05);(\"dubbed\",2.02969857177158E-05);(\"retain\",2.02953950448539E-05);(\"queens\",2.02906230262683E-05);(\"throw\",2.02858510076826E-05);(\"absolute\",2.02710047276383E-05);(\"inscription\",2.02641118119034E-05);(\"suburbs\",2.02545677747321E-05);(\"gods\",2.02439632889862E-05);(\"purple\",2.02397214946878E-05);(\"moreover\",2.02291170089418E-05);(\"voiced\",2.02206334203451E-05);(\"roosevelt\",2.02137405046102E-05);(\"invented\",2.02121498317484E-05);(\"pride\",2.02063173645881E-05);(\"trustees\",2.0202605794577E-05);(\"arnold\",2.01930617574057E-05);(\"cult\",2.01760945802122E-05);(\"fifty\",2.01464020201236E-05);(\"requirement\",2.01464020201236E-05);(\"temples\",2.01416300015379E-05);(\"manages\",2.01395091043887E-05);(\"heavyweight\",2.01342068615157E-05);(\"renewed\",2.01193605814714E-05);(\"concentrated\",2.01183001328968E-05);(\"honored\",2.01172396843223E-05);(\"creates\",2.01082258714382E-05);(\"varied\",2.01066351985763E-05);(\"witness\",2.01050445257144E-05);(\"enlisted\",2.00928493671066E-05);(\"personally\",2.00870168999463E-05);(\"frontier\",2.00859564513718E-05);(\"beneath\",2.00838355542226E-05);(\"encourage\",2.00769426384877E-05);(\"brands\",2.00562638912831E-05);(\"improving\",2.00445989569626E-05);(\"sustainable\",2.00371758169405E-05);(\"tip\",2.00281620040564E-05);(\"mother's\",2.00133157240121E-05);(\"heading\",2.00111948268629E-05);(\"harvey\",2.00080134811391E-05);(\"findings\",2.00027112382662E-05);(\"mirror\",2.00021810139789E-05);(\"threats\",1.99979392196805E-05);(\"releasing\",1.99921067525202E-05);(\"nationally\",1.99921067525202E-05);(\"rough\",1.99894556310838E-05);(\"celebrate\",1.99894556310838E-05);(\"owns\",1.99597630709951E-05);(\"priests\",1.99587026224206E-05);(\"wallace\",1.99581723981333E-05);(\"phillips\",1.99581723981333E-05);(\"panama\",1.99560515009841E-05);(\"navigation\",1.99539306038349E-05);(\"favourite\",1.99369634266414E-05);(\"announcement\",1.99226473708844E-05);(\"pc\",1.99109824365639E-05);(\"investors\",1.9909391763702E-05);(\"somerset\",1.98961361565196E-05);(\"comprising\",1.98945454836577E-05);(\"discovers\",1.98887130164974E-05);(\"enabled\",1.98606111292707E-05);(\"joan\",1.98531879892485E-05);(\"xi\",1.9846825297801E-05);(\"stolen\",1.98404626063534E-05);(\"helicopter\",1.98372812606296E-05);(\"semifinals\",1.98351603634804E-05);(\"pace\",1.98282674477456E-05);(\"civilians\",1.98059980276791E-05);(\"shock\",1.97975144390824E-05);(\"scandal\",1.97922121962094E-05);(\"dreams\",1.97906215233475E-05);(\"investigate\",1.97831983833254E-05);(\"north-east\",1.97810774861762E-05);(\"mi\",1.97667614304192E-05);(\"deeply\",1.97657009818446E-05);(\"interactions\",1.9759338290397E-05);(\"shifted\",1.97566871689605E-05);(\"scotia\",1.97466129075019E-05);(\"shelter\",1.97291155060211E-05);(\"conflicts\",1.97264643845846E-05);(\"http\",1.97259341602973E-05);(\"rebel\",1.97259341602973E-05);(\"montgomery\",1.972540393601E-05);(\"transformed\",1.97232830388608E-05)|] |> Map.ofArray\n\n/// All drawn from Wikipedia except length 1 which was missing. Approximated using https://norvig.com/mayzner.html\nlet lengthFreqMap = [|(\"1\",0.027);(\"2\",0.000257568344411811);(\"3\",4.36149342814671E-05);(\"4\",1.810604712137E-05);(\"5\",1.00844498681708E-05);(\"6\",6.742179232986E-06);(\"7\",6.08192839360935E-06);(\"8\",5.17368184211515E-06);(\"9\",4.33606687724915E-06);(\"10\",3.92415387705948E-06);(\"11\",3.14628279863165E-06);(\"12\",3.01500014386427E-06);(\"13\",2.52392652134176E-06);(\"14\",2.01737241657513E-06);(\"15\",1.16226485206672E-06);(\"16\",9.30988328446582E-07);(\"17\",8.65358988660001E-07);(\"18\",8.52860002809193E-07);(\"19\",7.0619983686944E-07);(\"20\",4.51455153639651E-07);(\"21\",6.89125878395867E-07);(\"22\",4.02343829642286E-07);(\"23\",4.88336568600216E-07);(\"25\",2.11559490631364E-07)|] |> Array.map( fun (n,p)->int(n),p) |> Map.ofArray\n\nlet wordRegex = System.Text.RegularExpressions.Regex(\"\\w\")\n\n///Return the frequency of word if it is in top 5000 most frequent of Wikipedia. Otherwise uses term length to get a probability (counts of all terms of that length/total count/#terms of that length) again using Wikipedia. RETURNS 1.0 FOR NONWORDS\nlet Get( word : string ) =\n    if wordRegex.IsMatch(word) then\n        let query = word.Trim().ToLower()\n        match wordFreqMap.TryFind( query ) with\n        | Some( x ) -> x\n        | None -> \n            match lengthFreqMap.TryFind( query.Length ) with\n            | Some(y) -> y\n            | None -> lengthFreqMap.[25] //the rarest event we know\n    //Returns 1.0 for non words. This makes sense for how we use it but is otherwise wacky\n    else\n        1.0\n","module Paraphrase\n// The vision of this module is to connect to a paraphrase service and retrieve paraphrases per sentence.\n// For historical and performance reasons, we have both precomputed (cached) and live versions. The cached \n// versions currently exist in the stim files.\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json \nopen Thoth.Fetch\n\n//for node compatibility\nimportSideEffects \"isomorphic-fetch\"\n\nlet paraphraseEndpoint = \"https://paraphrase.olney.ai/api/\"\n\n/// Get a list of paraphrases (TODO: could update with optional n-best parameter (k : int option) )\n/// TODO: select the \"best\" paraphrase in terms of diversity, etc (may not be top-k result)\nlet getParaphrases(sentence: string): JS.Promise<Result<string,FetchError>> =\n    promise {\n        return! Fetch.tryPost( paraphraseEndpoint + \"getParaphrase\", {| sentence=sentence;  |}, caseStrategy = SnakeCase)\n    }\n\n/// a map from source sentence to backtranslated paraphrase\nlet mutable backtranslation = Map.empty\n\n/// Call to initialize the backtranslations, passing in tab-separated value text\nlet InitializeParaphraseCache ( text : string ) =\n    try\n        backtranslation <-  \n            text.Split('\\n')\n            |> Seq.map( fun l -> \n                let s = l.Split('\\t') \n                s.[2],s.[3] //file format is chapterid\\tsentenceid\\tsource\\ttarget\n            )\n            |> Map.ofSeq\n        promise{ return Ok( null ) }\n    with\n    | e -> promise{ return Error( e.Message ) }\n\n/// Using the source sentence as key (sa.sen), get a paraphrase\nlet getCachedParaphrase( sentence : string) =\n    match backtranslation.TryFind sentence with\n    | Some(paraphrase) -> paraphrase\n    | None -> sentence","module ClozeAPI\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json //for Json; might be cleaner way\n//TODO: possibly replace with this: https://github.com/thoth-org/Thoth.Fetch\n// open Fable.SimpleHttp\n\nopen AllenNLP\n\n// Domain model\n\n//-- Public ------------------------------\n///Public sentence component of an item\ntype SentenceAPI =\n  {\n    sentence :  string\n    itemId : int\n    hasCloze : bool\n  }\n\n///Public clozable component of an item\ntype ClozableAPI =\n  {\n    cloze : string\n    itemId : int\n    clozeId : int\n    correctResponse : string\n    /// Tags we can use for cluster assignment\n    tags : obj //the idea right now is to make this an anonymous record since the devs want an object rather than a list of attributes\n  }\n\n///Public API for items\ntype ClozeAPI =\n  {\n    sentences : SentenceAPI[]\n    clozes : ClozableAPI[]\n  }\n  \n//-- Internal ------------------------------\n/// A tag such that we can create an object literal (a pojo) from a list of tags\ntype Tag =\n    /// a measure of importance of an item group, with 1 being the most important\n    | WeightGroup of int \n    /// the numeric order of an item group, with 1 being the first\n    | OrderGroup of int \n    /// the dependency role of the cloze in the item\n    | SyntacticRole of string \n    /// the semantic role of the cloze in the item\n    | SemanticRole of string\n    /// number of hops from the cloze to the root of the item\n    | RootDistance of int \n    /// number of words from the start of the item to the cloze\n    | StartDistance of int \n    /// The number of coref clusters/chains in the item\n    | CorefClusters of int\n    /// The total weight (length) of all coref chains in the item\n    | CorefClusterTotalWeight of int\n    /// The backward weight (length) of all coref chains in the item\n    | CorefClusterBackwardWeight of int\n    /// The forward weight (length) of all coref chains in the item\n    | CorefClusterForwardWeight of int\n    /// Variant of total weight\n    | SentenceWeight of int\n    /// Word probability of rarest word in a cloze answer\n    | ClozeProbability of float\n    /// Source sentence with coreferents resolved\n    | ClozeCorefTransformation of string\n    /// Correct response with coreferents resolved\n    | CorrectResponseCorefTransformation of string\n    /// Source sentence paraphrased\n    | ClozeParaphraseTransformation of string\n    /// Transformations source sentence has undergone to make cloze item\n    | Transformations of string list\n    /// Debug information\n    | Trace of string\n    /// Mark deprecated tags that may still be in parse\n    | Deprecated of string\n\n\nlet StringToTag (keyValue : string) =\n    let s = keyValue.Split(':')\n    match s.[0] with\n    | \"weightGroup\" -> s.[1] |> int |> WeightGroup\n    | \"orderGroup\" -> s.[1] |> int |> OrderGroup\n    | \"OrderGroup\" -> s.[1] |> int |> OrderGroup\n    | \"chunk\" ->  s.[1] |> int |> OrderGroup //transitional\n    | \"default\" ->  s.[1] |> Deprecated //transitional\n    | _ -> \"Error:\" + keyValue |> Trace\n\n///A clozable we have generated\ntype Clozable =\n    {\n        ///The words being clozed on, i.e. the cloze fill-in\n        words : string[]\n        ///Position of first cloze word in source sentence\n        start : int\n        ///Position of last cloze word in source sentence\n        stop : int\n        ///Collected messages reflecting our decision making; primarily for debug purposes (obj b/c some are Tag)\n        trace : Tag list\n        ///Probability assigned to this clozable (single probability)\n        prob : float\n        ///Tags we can use for cluster assignment\n        tags : Tag list\n    }\n    //TODO switching to auto encoding/decoding b/c of the complexity of Tags and trace\n    /// A custom decoder allows precise json decoding errors to be reported\n    // static member Decoder : Thoth.Json.Decoder<Clozable>=\n    //     Decode.object\n    //         ( fun get ->\n    //             {\n    //                 words = get.Required.Field \"words\" (Decode.array Decode.string)\n    //                 start = get.Required.Field \"start\" Decode.int\n    //                 stop = get.Required.Field \"stop\" Decode.int\n    //                 trace = get.Required.Field \"trace\" (Decode.array Decode.string)\n    //                 prob = get.Required.Field \"prob\" Decode.float\n    //                 tags = get.Required.Field \"tags\" (Decode.list Decode.string)\n    //             }\n    //         )\n\n///All data we have collected and will use for final creation of cloze items\ntype InternalAPI =\n    {\n        sentences : SentenceAnnotation[]\n        coreference : Coreference\n        clozables : Clozable[][]\n    }\n\n///Based on the Heart Study\nlet EstimateDesiredSentences (sentences:string[] ) =\n    let wordCount = sentences |> Seq.sumBy( fun sentence -> sentence.Split(' ').Length ) |> float\n    //50% compression\n    // let desiredSentences = (wordCount / 1000.0) * 25.0 |> int \n    //33% compression?\n    let desiredSentences = (wordCount / 1000.0) * 12.0 |> int \n    desiredSentences\n\n///Based on the Heart Study\nlet EstimateDesiredItems (desiredSentences : int) =\n    //50% compression\n    //let desiredItems = desiredSentences * 2\n    //33% compression?\n    let desiredItems = (desiredSentences |> float) * 1.3 |> int\n    desiredItems\n\n///Estimate desired sentences using arbitrary percentage\nlet EstimateDesiredSentencesFromPercentage (nlpJson : string) ( percentage : float ) =\n    //Get a DocumentAnnotation if one wasn't passed in\n    let da = nlpJson |> ofJson<DocumentAnnotation> \n    let desiredSentences = (da.sentences.Length |> float) * percentage\n    //\n    desiredSentences |> int\n    \n/// Get weight of all chains in a sentence (add the lengths together)\nlet GetTotalWeight ( coref : Coreference ) sen =\n    // ** FALL 2019 VERSION **\n    // Problems: \n    // 1. can have duplicates\n    // 2. appears to be measuring length of spans not lengths of chains\n    // sen.cor.clusters \n    // |> Array.collect( fun id -> \n    //     let cluster = coref.clusters.[id]\n    //     cluster |> Array.map( fun c -> c.Length) \n    //     )\n    // |> Array.sum\n    // ****** TODO ***** below is techinically correct but we temporarily disable to generate features for analyzing fall 2019 data. Otherwise items may not match\n    let totalWeight =\n        sen.cor.clusters\n        |> Array.distinct\n        |> Array.sumBy( fun id -> coref.clusters.[id].Length )\n    totalWeight\n\n// -- Features for word level difficulty analysis, appended to trace ---\n// COMPLETELY GENERIC trace features for analysis of difficulty of this word\n/// distance from root feature\nlet getFeatureDistanceFromRoot start stop sen =\n    let distanceFromRoot (index:int) (heads:int[]) =\n        let mutable distance = 0\n        let mutable i = index\n        while i > -1 && heads.[i] <> 0 && distance < heads.Length do\n            i <- heads.[i] - 1 //heads is 1 indexed\n            distance <- distance + 1\n        //\n        distance\n    let maxDistance = [|  start .. stop |] |> Seq.map( fun i -> distanceFromRoot i sen.dep.predicted_heads ) |> Seq.max\n    // \"@rootDistance:\" + maxDistance.ToString()\n    maxDistance |> RootDistance\n/// distance from start of sentence feature\nlet getFeatureDistanceFromStart start =\n    // \"@startDistance:\" + start.ToString()\n    start |> StartDistance\n\n// ANNOTATION SPECIFIC trace features\n/// number of coref clusters/chains feature\nlet getFeatureCorefClusters sen =\n    let clusters = sen.cor.clusters |> Array.distinct\n    // \"@corefClusters:\" + clusters.Length.ToString()\n    clusters.Length |> CorefClusters\n\n/// total weight of sentence clusters feature: length of each cluster/chain in sentence\nlet getFeatureCorefClusterTotalWeight sen ( da : DocumentAnnotation ) =\n    let totalWeight = GetTotalWeight da.coreference sen\n    // ** FALL 2019 METHOD **\n    // let totalWeight =\n    //     sen.cor.clusters\n    //     |> Array.distinct\n    //     |> Array.sumBy( fun id -> da.coreference.clusters.[id].Length )\n    // \"@corefClusterTotalWeight:\" + totalWeight.ToString()\n    totalWeight |> CorefClusterTotalWeight\n\n/// backward weight of sentence cluster feature: length of each cluster/chain in backward direction\nlet getFeatureCorefClusterBackwardWeight sen ( da : DocumentAnnotation )  =\n    let weight = \n        sen.cor.clusters\n        |> Array.distinct\n        |> Array.collect( fun id -> da.coreference.clusters.[id] )\n        |> Array.filter( fun c -> c.[1] < sen.cor.offset) //end of mention token index is before current sentence start token index\n        |> Array.length\n    // \"@corefClusterBackwardWeight:\" + weight.ToString()\n    weight |> CorefClusterBackwardWeight\n\n/// forward weight of sentence cluster feature: length of each cluster/chain in forward direction\nlet getFeatureCorefClusterForwardWeight sen ( da : DocumentAnnotation )  =\n    let weight = \n        sen.cor.clusters\n        |> Array.distinct\n        |> Array.collect( fun id -> da.coreference.clusters.[id] )\n        |> Array.filter( fun c -> c.[0] > sen.cor.offset + sen.srl.words.Length) //start of mention token index is after current sentence last token index\n        |> Array.length\n    // \"@corefClusterForwardWeight:\" + weight.ToString()\n    weight |> CorefClusterForwardWeight\n\n// -- END Features for word level difficulty analysis, appended to trace ---\n\n/// Returns a Clozable for a modified NP given a sentence annotation and span of interest\nlet GetModifiedNPClozable sa startInit stopInit head traceInit =\n    let trace = ResizeArray<Tag>()\n    trace.AddRange(traceInit)\n    trace.Add( getFeatureDistanceFromRoot startInit stopInit sa )\n    trace.Add( getFeatureDistanceFromStart startInit)\n\n    //check for insanity first. return empty if insane\n    if startInit < 0 || stopInit >= sa.srl.words.Length then //|| head < 0 || head >= sen.srl.words.Length then\n        trace.Add(\"CRITICAL: invalid clozable parameters for \" + (sa |> toJson  ) |> Trace )\n        { words=Array.empty; start=0; stop=0; trace= trace|> Seq.toList ; prob = 1.0 ; tags = sa.tags |> Array.map StringToTag |> Array.toList } \n    else\n        //TODO: take another look at this logic now that we've created various utility functions for NLG that process AllenNLP dependencies\n        //this is a pseudohead of the span. we can't use real heads because stanford dependencies aren't universal dependencies\n        //therefore we must allow for functional/exocentric heads but find the pseudohead approximating universal dependencies \n        let h =\n            match head with\n            | Some(x) -> x\n            | None -> \n                let stanfordHead = \n                    [|  startInit .. stopInit |] \n                    //get the predicted heads for each index; predicted heads are 1 indexed (root is 0)\n                    |> Seq.map( fun i -> i,sa.dep.predicted_heads.[i])\n                    //find tuple with a predicted head outside the span (because English is projective)\n                    |> Seq.find( fun (_,h) -> h < startInit + 1 || h > stopInit + 1 )\n                    //return the index\n                    |> fst\n                //require nominal pseudohead if stanfordHead is not nominal\n                if sa.dep.pos.[ stanfordHead ].StartsWith(\"NN\") |> not then\n                    trace.Add( \"head is not nominal\" |> Trace)\n                    //debug\n                    // if sen.id > 140 then\n                    //     printfn \"debug\"\n                    //get subj/obj dependencies, take first\n                    let argOption = [|  startInit .. stopInit |] |> Seq.map( fun i -> i,sa.dep.predicted_dependencies.[i]) |> Seq.tryFind( fun (_,h) -> h.Contains(\"subj\") || h.Contains(\"obj\")) \n                    //get nominal words, take last\n                    let nnOption = [|  startInit .. stopInit |] |> Seq.map( fun i -> i,sa.dep.pos.[i]) |> Seq.rev |> Seq.tryFind( fun (_,h) -> h.StartsWith(\"NN\")) \n                    match argOption,nnOption with\n                    | Some(arg),_ ->  trace.Add( \"WARNING: using first syntactic arg as pseudohead\" |> Trace); arg |> fst\n                    | _, Some(nn) -> trace.Add( \"WARNING: using last nominal as pseudohead\" |> Trace); nn |> fst\n                    | _,_ -> trace.Add( \"CRITICAL: clozable without nominal or arg, defaulting to given span\" |> Trace); stopInit\n                else\n                    stanfordHead\n\n        //NOTE: the logic here focuses on premodifiers + nominal not post modifying phrases\n        //take preceeding modifiers of the nominal pseudohead that are nounish or JJ \n        let indices = [| startInit .. h |] |> Array.rev |> Array.takeWhile( fun i -> sa.dep.pos.[i].StartsWith(\"N\") || sa.dep.pos.[i] =  \"JJ\" ) |> Array.rev\n        let start, stop, words = \n            if indices.Length <> 0 then\n                let start = indices.[0]\n                let stop = indices |> Array.last\n                start, stop, sa.srl.words.[ start .. stop ]\n            else\n                trace.Add(\"CRITICAL: stanford head yields empty span, defaulting to given span\" |> Trace)\n                startInit, stopInit, sa.srl.words.[ startInit .. stopInit ]\n\n        let clozable = \n            { \n                words = words\n                start = start\n                stop =  stop\n                trace = trace |> Seq.toList //.ToArray()\n                //use the lowest freq word in the span\n                prob = words |> Array.map WordFrequency.Get |> Array.min\n                tags = sa.tags |> Array.map StringToTag |> Array.toList \n            }\n        //\n        clozable\n\n/// GetClozable items for a sentence using syntactic, srl, and coref information. \n/// DocumentAnnotation level enhancements are inserted here for now (resolved coref and paraphrase)\n/// TODO: filter non subj/obj/mod\nlet GetClozables ( da : DocumentAnnotation ) =\n    // get analogues for sentences; some, like coref, require document-level context so belong here\n    let corefresolvedSentences = da |> AllenNLP.resolveReferents\n\n    da.sentences\n    |> Array.map( fun sa -> \n        let clozable = new ResizeArray<Clozable>()\n        //coref based cloze\n        clozable.AddRange( \n            sa.cor.spans \n            |> Seq.mapi( fun i si -> \n                GetModifiedNPClozable sa si.[0] si.[1] None [ \"coref\" |> Trace; getFeatureCorefClusters sa; getFeatureCorefClusterTotalWeight sa da; getFeatureCorefClusterBackwardWeight sa da; getFeatureCorefClusterForwardWeight sa da ] )\n        )\n        //syntactic subj/obj\n        clozable.AddRange(\n            sa.dep.predicted_dependencies\n            |> Seq.mapi( fun i x -> i,x)\n            |> Seq.filter( fun (i,d) -> d.Contains(\"obj\") || d.Contains(\"subj\") || d.Contains(\"root\") ) //root for copula constructions\n            //must be noun (catches edge cases of relative clauses) TODO: allow pronoun if resolved to referent\n            |> Seq.filter( fun (i,d) -> sa.dep.pos.[i].StartsWith(\"N\") ) // || sen.dep.pos.[i] = \"PRP\" )\n            |> Seq.map( fun (i,d) -> GetModifiedNPClozable sa i i (i|>Some) [ \"dep\" |> Trace; d |> Trace;  d |> SyntacticRole] )\n        )\n        //srl\n        clozable.AddRange(\n            sa.srl.verbs\n            |> Seq.collect( fun pred ->\n                pred.tags \n                |> Seq.mapi( fun i t -> i,t)\n                |> Seq.filter( fun (_,t) -> t.Contains(\"ARG\") ) \n                |> Seq.groupBy( fun (_,t) -> t.Substring(2)) //e.g. I-ARG0, so group by ARG0; we don't split b/c there are multiple hyphens\n                |> Seq.map( fun (g,gtSeq) ->\n                    let start = (gtSeq |> Seq.minBy fst) |> fst\n                    let stop = (gtSeq |> Seq.maxBy fst) |> fst\n                    GetModifiedNPClozable sa start stop None [ \"srl\" |> Trace ; pred.description |> Trace;  g |> SemanticRole ])\n            )\n        )\n\n        // add tags; note some rely on da-level information and so really belong here and not elsewhere\n        for i = 0 to clozable.Count - 1 do\n            let tags = ResizeArray( clozable.[i].tags )\n            tags.Add( sa |>  GetTotalWeight da.coreference |> Tag.SentenceWeight )\n            tags.Add( clozable.[i].prob |> Tag.ClozeProbability )\n            tags.Add( corefresolvedSentences.[ sa.id ] |> Tag.ClozeCorefTransformation)\n            tags.Add( sa.sen |> Paraphrase.getCachedParaphrase |> Tag.ClozeParaphraseTransformation )\n            //update clozable record\n            clozable.[i] <- { clozable.[i] with tags = tags |> Seq.toList }\n\n        clozable\n    )\n\n///To throw away sentences we don't know how to handle\nlet badSentenceRegex = System.Text.RegularExpressions.Regex( \"(figure|table|section|clinical|application)\\s+[0-9]\",Text.RegularExpressions.RegexOptions.IgnoreCase)\n\n/// Generates clozables for every sentence when given text and an optional JSON of DocumentAnnotation (a serialized parse)\n/// Text input may be a JSON encoded string array or a string\n/// NOTE: input may be empty if serialized parse is passed in.\nlet GetAllCloze (nlpJsonOption: string option) ( stringArrayJsonOption : string option) ( inputText : string )=\n    promise {\n        //Get a DocumentAnnotation if one wasn't passed in\n        let! nlpResult = \n            match nlpJsonOption with\n            | Some(nlpJson) -> nlpJson |> ofJson<DocumentAnnotation> |> Promisify \n            | None -> GetNLP stringArrayJsonOption inputText \n\n        match nlpResult with\n        | Ok(da) ->\n            let clozables = da |> GetClozables |> Array.map( fun ra -> ra.ToArray() )\n            return Ok( {sentences = da.sentences; coreference = da.coreference; clozables = clozables} )\n        | Error(e) -> \n            return Error(e)\n    }\n\n//Import node diff\ntype IChangeObject =\n    abstract value : string with get\n    abstract added : bool option with get\n    abstract removed : bool option with get\ntype IJsDiff =\n    abstract diffWords : string * string * obj -> IChangeObject array\n[<ImportAll(\"diff\")>]\nlet diff : IJsDiff = jsNative\n\n/// 20200714 Generate data requested by Luke Eglington. Gets all clozables, resolves coref, and calculates some properties related to cloze generation/selection\nlet GetAllClozeLukeFormat20200714 (nlpJsonOption: string option) ( stringArrayJsonOption : string option) ( inputText : string )=\n    promise {\n        //Get a DocumentAnnotation if one wasn't passed in\n        let! nlpResult = \n            match nlpJsonOption with\n            | Some(nlpJson) -> nlpJson |> ofJson<DocumentAnnotation> |> Promisify \n            | None -> GetNLP stringArrayJsonOption inputText \n\n        match nlpResult with\n        //sentence,cloze,sentenceWeight,clozeProbability\n        | Ok(da) ->\n            let clozables = da |> GetClozables |> Array.map( fun ra -> ra.ToArray() )\n            // return Ok( {sentences = da.sentences; coreference = da.coreference; clozables = clozables} )\n            let output = \n                da.sentences\n                |> Array.mapi( fun i sa ->\n                    let totalWeight = sa |>  GetTotalWeight da.coreference\n                    clozables.[i]\n                    |> Array.map( fun cl -> \n                        let cloze = cl.words |> String.concat \" \"\n                        let sentence = sa.sen |> AllenNLP.removePrePunctuationSpaces\n                        //map coreferents\n                        let crOption = cl.tags |> List.choose( function | Tag.ClozeCorefTransformation sen -> Some(sen) | _ ->  None ) |> List.tryHead\n                        match crOption with\n                        | Some(cr) ->\n                            //attempt to make coref resolve variant of item; will be identical to cr if clozeAnswer isn't found\n                            //NOTE: we must handle resolution in clozeAnswer as well\n                            //map of diffs: original cloze -> coref replacement cloze\n                            let diffList = diff.diffWords( sa.sen, cr, {| ignoreCase = true |} )\n                            let diffMap = \n                                [| \n                                    let removeList = ResizeArray<string>()\n                                    let addList = ResizeArray<string>()\n                                    for d in diffList do\n                                        if d.removed.IsSome then \n                                            removeList.Add( d.value )\n                                        elif d.added.IsSome then\n                                            addList.Add( d.value )\n                                        elif d.value.Trim() = \"\" then\n                                            () //continue to accumulate over whitespace\n                                        else\n                                            if removeList.Count > 0 then\n                                                yield removeList |> String.concat \" \", (addList |> String.concat \" \").Trim()\n                                                removeList.Clear(); addList.Clear();\n                                |]\n                                |> Map.ofArray\n                            //correct response\n                            let crCloze =\n                                match diffMap.TryFind cloze with\n                                | Some(diffCloze) -> diffCloze\n                                | None -> cloze\n\n                            if sentence <> cr then\n                                {|Sentence=cr; Cloze=crCloze ; SentenceWeight=totalWeight; ClozeProbability=cl.prob |} //; OriginalSen=sa.sen |}\n                            else\n                                {|Sentence=sentence; Cloze=cl.words |> String.concat \" \"; SentenceWeight=totalWeight; ClozeProbability=cl.prob |} // ; OriginalSen=\"\" |}\n                                \n                        //no coref resolution\n                        | _ -> \n                            {|Sentence=sentence; Cloze=cl.words |> String.concat \" \"; SentenceWeight=totalWeight; ClozeProbability=cl.prob |} //; OriginalSen=\"\" |}\n                    )\n                )\n            \n            return Ok( output )\n        | Error(e) -> \n            return Error(e)\n    }\n    \n/// 20201218 Generate data requested by Luke Eglington. Gets all clozables, resolves coref, and calculates some properties related to cloze generation/selection\nlet GetAllClozeLukeFormat20201218 (nlpJsonOption: string option) ( stringArrayJsonOption : string option) ( inputText : string )=\n    promise {\n        //Get a DocumentAnnotation if one wasn't passed in\n        let! nlpResult = \n            match nlpJsonOption with\n            | Some(nlpJson) -> nlpJson |> ofJson<DocumentAnnotation> |> Promisify \n            | None -> GetNLP stringArrayJsonOption inputText \n\n        match nlpResult with\n        //sentence,cloze,sentenceWeight,clozeProbability\n        | Ok(da) ->\n            let clozables = da |> GetClozables |> Array.map( fun ra -> ra.ToArray() )\n            // return Ok( {sentences = da.sentences; coreference = da.coreference; clozables = clozables} )\n            let output = \n                da.sentences\n                |> Array.mapi( fun i sa ->\n                    let totalWeight = sa |>  GetTotalWeight da.coreference\n                    clozables.[i]\n                    |> Array.map( fun cl -> \n                        let cloze = cl.words |> String.concat \" \"\n                        let sentence = sa.sen |> AllenNLP.removePrePunctuationSpaces\n                        //map coreferents\n                        let crOption = cl.tags |> List.choose( function | Tag.ClozeCorefTransformation sen -> Some(sen) | _ ->  None ) |> List.tryHead\n                        match crOption with\n                        | Some(cr) ->\n                            //attempt to make coref resolve variant of item; will be identical to cr if clozeAnswer isn't found\n                            //NOTE: we must handle resolution in clozeAnswer as well\n                            //map of diffs: original cloze -> coref replacement cloze\n                            let diffList = diff.diffWords( sa.sen, cr, {| ignoreCase = true |} )\n                            let diffMap = \n                                [| \n                                    let removeList = ResizeArray<string>()\n                                    let addList = ResizeArray<string>()\n                                    for d in diffList do\n                                        if d.removed.IsSome then \n                                            removeList.Add( d.value )\n                                        elif d.added.IsSome then\n                                            addList.Add( d.value )\n                                        elif d.value.Trim() = \"\" then\n                                            () //continue to accumulate over whitespace\n                                        else\n                                            if removeList.Count > 0 then\n                                                yield removeList |> String.concat \" \", (addList |> String.concat \" \").Trim()\n                                                removeList.Clear(); addList.Clear();\n                                |]\n                                |> Map.ofArray\n                            //correct response\n                            let crCloze =\n                                match diffMap.TryFind cloze with\n                                | Some(diffCloze) -> diffCloze\n                                | None -> cloze\n\n                            if sentence <> cr then\n                                {|Sentence=cr; Cloze=crCloze ; itemId = hash sa; clozeId = hash cloze; OriginalSentence=sentence; Tags=cl.tags @ cl.trace  |}\n                            else\n                                {|Sentence=sentence; Cloze=cl.words |> String.concat \" \"; itemId = hash sa; clozeId = hash cloze;  OriginalSentence=sentence; Tags=cl.tags @ cl.trace  |}\n                                \n                        //no coref resolution\n                        | _ -> \n                            {|Sentence=sentence; Cloze=cl.words |> String.concat \" \"; itemId = hash sa; clozeId = hash cloze; OriginalSentence=sentence; Tags=cl.tags @ cl.trace |} \n                    )\n                )\n            \n            return Ok( output )\n        | Error(e) -> \n            return Error(e)\n    }\n\n/// Generate data for human evaluation. Gets all clozables  and calculates some properties related to cloze generation/selection\nlet GetAllClozeForHumanEvaluation2021061121 (nlpJsonOption: string option) ( stringArrayJsonOption : string option) ( inputText : string )=\n    promise {\n        //Get a DocumentAnnotation if one wasn't passed in\n        let! nlpResult = \n            match nlpJsonOption with\n            | Some(nlpJson) -> nlpJson |> ofJson<DocumentAnnotation> |> Promisify \n            | None -> GetNLP stringArrayJsonOption inputText \n\n        match nlpResult with\n        //sentence,cloze,sentenceWeight,clozeProbability\n        | Ok(da) ->\n            let clozables = da |> GetClozables |> Array.map( fun ra -> ra.ToArray() )\n            // return Ok( {sentences = da.sentences; coreference = da.coreference; clozables = clozables} )\n            let output = \n                da.sentences\n                |> Array.mapi( fun i sa ->\n                    let totalWeight = sa |>  GetTotalWeight da.coreference\n                    clozables.[i]\n                    |> Array.map( fun cl -> \n                        let cloze = cl.words |> String.concat \" \"\n                        let sentence = sa.sen |> AllenNLP.removePrePunctuationSpaces\n                        {|SentenceWeight=totalWeight; ClozeProbability=cl.prob; Sentence=sentence; SentenceIndex=i; ClozeStart=cl.start; ClozeStop=cl.stop; Cloze=cloze; itemId = hash sa; clozeId = hash cloze;  OriginalSentence=sentence; Tags=cl.tags @ cl.trace  |}\n                    )\n                )\n            \n            return Ok( output )\n        | Error(e) -> \n            return Error(e)\n    }\n\n\n//TODO: since we are not allowing truly long fill ins (~4 words long) prefering longer once here \n//may be causing us to throw items away. To prevent that, the length restriction need to be here as well\n/// Remove overlapping cloze, preferring larger spans\n/// a starts before b, but they overlap\n/// b starts before a, but they overlap\n/// a entirely inside b\n/// b entirely inside a\n/// all covered with a.start < b.end && b.start < a.end;\nlet RemoveOverlappingClozables (clozables : Clozable[] ) =\n    // let clozablesOut = ResizeArray<Clozable>(clozables)\n    // TODO: magic length parameter should be passed in not hard coded\n    let clozablesOut = ResizeArray<Clozable>(clozables |> Array.filter( fun cl -> cl.words.Length < 4 ))\n    for ci = 0 to clozables.Length - 1 do\n        for cj = ci to clozables.Length - 1 do\n            let overlap =  ci <> cj && clozables.[ci].start <= clozables.[cj].stop && clozables.[cj].start <= clozables.[ci].stop\n            //keep the bigger one\n            if overlap && (clozables.[ci].stop - clozables.[ci].start) >= (clozables.[cj].stop - clozables.[cj].start) then \n                clozablesOut.Remove( clozables.[cj] ) |> ignore\n            elif overlap then\n                clozablesOut.Remove( clozables.[ci] ) |> ignore\n    //\n    clozablesOut.ToArray()\n\n\n/// Perform item transformations (coref resolution/paraphrase) as applicable\n/// Store these alternatives as tags\nlet MakeItemWithTranformations (sa:SentenceAnnotation) (cl:Clozable) =\n    //default item\n    let blank = [| for _ = cl.start to cl.stop do yield \"__________\" |] |> String.concat \" \"\n    let sentence = Array.copy sa.srl.words |> String.concat \" \"\n    let cloze = cl.words |> String.concat \" \"\n    let item = System.Text.RegularExpressions.Regex.Replace( sentence, @\"\\b\" + cloze + @\"\\b\", blank) |> AllenNLP.removePrePunctuationSpaces\n\n    let crOption = cl.tags |> List.choose( function | Tag.ClozeCorefTransformation sen -> Some(sen) | _ ->  None ) |> List.tryHead\n    let paOption = cl.tags |> List.choose( function | Tag.ClozeParaphraseTransformation sen -> Some(sen) | _ ->  None ) |> List.tryHead\n    let tags = cl.tags |> List.filter( function | Tag.ClozeCorefTransformation  _ | Tag.ClozeParaphraseTransformation _ -> false | _ -> true ) \n    match crOption,paOption with\n    | Some(cr),Some(pa) ->\n        //attempt to make paraphrase item; will be identical to pa if clozeAnswer isn't found\n        let paItem = System.Text.RegularExpressions.Regex.Replace( pa, @\"\\b\" + cloze + @\"\\b\", blank)\n        //attempt to make coref resolve variant of item; will be identical to cr if clozeAnswer isn't found\n        //NOTE: we must handle resolution in clozeAnswer as well\n        //map of diffs: original -> replacement\n        let diffList = diff.diffWords( sa.sen, cr, {| ignoreCase = true |} )\n        let diffMap = \n            [| \n                let removeList = ResizeArray<string>()\n                let addList = ResizeArray<string>()\n                for d in diffList do\n                    if d.removed.IsSome then \n                        removeList.Add( d.value )\n                    elif d.added.IsSome then\n                        addList.Add( d.value )\n                    elif d.value.Trim() = \"\" then\n                        () //continue to accumulate over whitespace\n                    else\n                        if removeList.Count > 0 then\n                            yield removeList |> String.concat \" \", (addList |> String.concat \" \").Trim()\n                            removeList.Clear(); addList.Clear();\n            |]\n            |> Map.ofArray\n        let crCloze =\n            match diffMap.TryFind cloze with\n            | Some(diffCloze) -> diffCloze\n            | None -> cloze\n        let crItem = System.Text.RegularExpressions.Regex.Replace( cr, @\"\\b\" + crCloze + @\"\\b\", blank) \n            // |> String.mapi( fun i c -> match i with | 0 -> (Char.ToUpper(c)) | _ -> c) //uppercase first letter as needed\n\n        //handle cases for transformations\n        //all equal, no transformations, purge existing transformation tags\n        if cr = sa.sen && pa = sa.sen then\n            item, cloze, tags\n        //pa only, pa item succeeded, make item with pa tag\n        elif cr = sa.sen && pa <> sa.sen && pa <> paItem then\n            item, cloze, Tag.ClozeParaphraseTransformation(paItem)::tags\n        //cr only, cr item succeeded, make item with cr tag\n        elif cr <> sa.sen && pa = sa.sen && cr <> crItem then\n            item, cloze, Tag.ClozeCorefTransformation(crItem)::Tag.CorrectResponseCorefTransformation(crCloze)::tags\n        //pa and cr, make items for both\n        elif cr <> sa.sen && pa <> sa.sen then\n            let tempTags = tags |> ResizeArray\n            if pa <> paItem then tempTags.Add( Tag.ClozeParaphraseTransformation(paItem) )\n            if cr <> crItem then tempTags.Add( Tag.ClozeCorefTransformation(crItem) ); tempTags.Add( Tag.CorrectResponseCorefTransformation(crCloze) )\n            item, cloze, tempTags |> Seq.toList\n        //something went wrong, keep basic item and purge transformation tags\n        else\n            item, cloze, tags\n    //partial or total transformation failure, keep basic item and purge transformation tags\n    | _ , _ -> item, cloze, tags\n\n/// Return an item as a sentence with words blanked out, together with the corresponding words\n/// Modified to blank out ALL occurances of clozeAnswer, even if they appear multiple times\n/// Modified to perform optional item transformations (coref resolution/paraphrase)\nlet MakeItem (sa:SentenceAnnotation) (cl:Clozable)=\n    let blank = [| for _ = cl.start to cl.stop do yield \"__________\" |] |> String.concat \" \"\n    let sentence = Array.copy sa.srl.words |> String.concat \" \"\n    let cloze = cl.words |> String.concat \" \"\n    let item = System.Text.RegularExpressions.Regex.Replace( sentence, @\"\\b\" + cloze + @\"\\b\", blank) |> AllenNLP.removePrePunctuationSpaces\n    item,cloze\n\n// Original version\n// let MakeItem (sa:SentenceAnnotation) (cl:Clozable)=\n//     let itemWords = Array.copy sa.srl.words\n//     for i = cl.start to cl.stop do\n//         itemWords.[i] <- \"__________\"\n//     itemWords |> String.concat \" \", cl.words |> String.concat \" \"\n\n// TODO: CLEANING OUT PARENTHESES IN CLEANTEXT PROBABLY LIMITS OR UNDOES THIS\n/// Finds acronyms in parentheses and tries to map to nearby words. Makes strong assumptions / not highly general\nlet GetAcronymMap input =\n    //assumes all acronyms are caps only and bounded by parentheses. NOTE: used named group at first but gave up when it didn't work\n    let acronymRegex = System.Text.RegularExpressions.Regex( \"\\(([A-Z]+)\\)\" )\n    let matches = acronymRegex.Matches( input )\n    let acronymMap = \n        if matches.Count <> 0 then\n            seq {\n                for m in matches |> Seq.cast<System.Text.RegularExpressions.Match> do\n                    let acronym = m.Groups.[1].Value\n                    let index = m.Index //group index (m.Groups.[1].Index) not implemented in fable; m.Index OK because match almost identical to group\n                    //get the words before the acronym\n                    let start = if index - 50 > 0 then index - 50 else 0\n                    let words = input.Substring( start, 50 ) |> Split ' '\n                    //convert words to a string of their first letters and search for acronym in it\n                    let firstLetterString = words |> Array.map( fun w -> w.[0] ) |> String\n                    let letterRegex = System.Text.RegularExpressions.Regex( acronym )\n                    let lm = letterRegex.Match( firstLetterString.ToUpper() )\n                    //if we find a match then return the corresponding phrase and acronym\n                    if lm.Success then\n                        let phrase = words.[ lm.Index .. acronym.Length ] |> String.concat \" \"\n                        yield phrase,acronym\n                        yield acronym,phrase\n            }\n            |> Map.ofSeq\n        else\n            Map.empty\n    //\n    acronymMap |> toJson\n\n/// Returns select clozables given a target number by ranking clozables and returning top ranked.\n/// Since target numbers may be impossible to satisfy, does not guarantee returning the target quantities.\n/// Accepts optional serialized NLP, #sentences/items, and chunks of text (e.g. subsections). Any of these override the default if present.\n/// inputText (as a single chunk) is the default of stringArrayJsonOption and so may be empty if stringArrayJsonOption exists.\nlet GetSelectCloze (nlpJsonOption: string option) (sentenceCountOption: int option) (itemCountOption: int option) (doTrace : bool) ( stringArrayJsonOption : string option) ( inputText : string ) = \n    promise{\n        let! allClozeResult = GetAllCloze nlpJsonOption stringArrayJsonOption inputText\n\n        match allClozeResult with\n        | Ok( allCloze ) ->\n            \n              //Estimate how many items we want if this wasn't specified\n            let sentenceCount = \n                match sentenceCountOption with\n                | Some(sentenceCount) -> sentenceCount\n                | None -> allCloze.sentences |> Array.map( fun x -> x.sen) |> EstimateDesiredSentences \n            let itemCount =\n                match itemCountOption with\n                | Some(itemCount) -> itemCount\n                | None -> sentenceCount |> EstimateDesiredItems\n            \n            //hard filter: we exclude sentences that don't meet these criteria:\n            // 3 corefs with chain length > 2\n            // TODO: We don't have the discourse parser yet, so we can't apply the \"sentence contains nucleus\" constraint\n\n            //partition sentences into those meeting strict criteria and the rest\n            let hardFilterTuples,remainingTuples =\n                allCloze.sentences\n                |> Array.mapi( fun i s -> s,allCloze.clozables.[i])\n                //Filter sentences we don't know how to handle (A&P specific)\n                |> Array.filter( fun (sa,_) -> sa.sen |> badSentenceRegex.IsMatch |> not )\n                //Handle overlapping cloze\n                |> Array.map( fun ( sa, cl ) -> sa, cl |> RemoveOverlappingClozables )\n                //Remove impossibly hard cloze (>3 fill ins; TODO: get theoretical justification; assume pseudohead is problem)\n                |> Array.map( fun ( sa, cls ) -> sa, cls |> Array.filter( fun cl -> cl.words.Length < 4 ) )\n                //Filter sentences with no clozables\n                |> Array.filter( fun (_,cl) -> cl.Length > 0 )\n                //Remove duplicates defined by senId and clozeWords; guards against case where clozeWords are repeated in a sentence\n                |> Array.map( fun (sa,cls) -> sa, cls |> Array.distinctBy( fun cl -> cl.words ) )\n                //Apply strict criteria to create partition\n                |> Array.toList\n                |> List.partition( fun (sa,_) ->\n                    let chainsLengthTwoOrMore = \n                        sa.cor.clusters \n                        |> Array.map( fun id -> allCloze.coreference.clusters.[id])\n                        |> Array.filter( fun c -> c.Length > 1)\n                    chainsLengthTwoOrMore.Length > 2 //we have > 2 chains with length > 1\n                )\n\n            //Get the cloze tuples to make our items from. NOTE: we let desiredSentences take priority over desiredItems here. TODO decide which has priority, sentences or items.\n            let clozeTuples =\n                let hardFilterSentenceCount = hardFilterTuples.Length\n                //let hardFilterItemCount = hardFilterTuples |> Seq.collect snd |> Seq.length\n                //if hard filter produced at least as many items and sentences as we need, sort by total weight and take what we need. TODO use other criteria besides weight?\n                if hardFilterSentenceCount > sentenceCount then //&& hardFilterItemCount > itemCount then\n                    hardFilterTuples |> List.sortByDescending( fun (sa,_) -> sa |> GetTotalWeight allCloze.coreference ) |> List.take sentenceCount |> List.sortBy( fun (s,_) -> s.id )\n                //otherwise use all hard filter tuples and add top remainingTuples to get desired counts\n                else\n                    hardFilterTuples @ (remainingTuples  |> List.sortByDescending( fun (sa,_) -> sa |>  GetTotalWeight allCloze.coreference ) |> List.take (sentenceCount-hardFilterTuples.Length ) )\n                    |> List.sortBy( fun (s,_)-> s.id )\n\n            //We need to generate the desired # items BUT we also must take at least 1 from each sentence\n            //Step 1. Partition clozables into min probability per sentence and rest per sentence\n            let clozeProbTuples = \n                clozeTuples\n                |> List.map( fun (sa,cls) -> \n                    let sorted = cls |> Array.sortBy( fun cl -> cl.prob ) |> Array.toList\n                    sa,sorted.Head,sorted.Tail\n                )\n\n            //Step 2. Combine and rank rest clozables by prob, take itemCount, create lookup map\n            let restClozableMap = \n                clozeProbTuples\n                |> List.collect( fun (sa,_,rest) -> \n                    rest |> List.map( fun c -> sa,c) //inflate\n                )\n                |> List.sortBy( fun (_,cl) -> cl.prob)\n                |> List.take (itemCount - sentenceCount)\n                |> List.groupBy fst\n                |> Map.ofList\n       \n            //Step 3. Iterate over clozeProbTuples, adding matching high prob clozables to make allClozableMap\n            let allClozableMap = \n                clozeProbTuples\n                |> List.map( fun (sa, min, rest ) ->\n                    let cl = \n                        match restClozableMap.TryFind(sa) with \n                        | Some( t ) -> t |> List.map snd\n                        | None -> []\n                    sa, min::cl\n                )\n                |> Map.ofList\n\n            //Item tagging: rank sentences by totalweight, group into sets of 30, then create map of sentence to importance tags\n            let importantClozeMap =\n                allClozableMap\n                |> Map.toArray\n                |> Array.sortByDescending( fun (sa,_) -> sa |>  GetTotalWeight allCloze.coreference )\n                |> Array.collect( fun (sa,cl) -> cl |> List.toArray )\n                |> Array.chunkBySize 30 //TODO arbitrary size here; need theoretical justification\n                |> Array.mapi( fun i cl -> \n                    cl |> Array.map( fun cl -> cl,i )\n                )\n                |> Array.collect id\n                |> Map.ofArray\n                \n            // let test =\n            //     allClozableMap\n            //     |> Map.toArray\n            //     |> Array.sortByDescending( fun (sa,_) -> sa |>  GetTotalWeight allCloze.coreference )\n            //     |> Array.collect( fun (sa,cl) -> cl |> Array.ofList )\n            //     |> Array.windowed 30 //TODO arbitrary size here; need theoretical justification\n\n            //Create acronym map to expand \"correct\" answers for items\n            let input = \n                match stringArrayJsonOption with\n                | Some(chunksJson) -> chunksJson |> ofJson<string[]>\n                | None -> [| inputText |]\n            let acronymMap = input |> String.concat \" \" |> GetAcronymMap |> ofJson<Map<string,string>> \n            \n            //Package for external API\n            let sentences = ResizeArray<SentenceAPI>()\n            let clozes = ResizeArray<ClozableAPI>()\n\n            allCloze.sentences\n            |> Seq.iter( fun sa ->\n                match allClozableMap.TryFind(sa) with\n                | None -> sentences.Add( { sentence = sa.sen; itemId = (hash sa); hasCloze = false} )\n                | Some(clozables) -> \n                    sentences.Add( { sentence = sa.sen; itemId = (hash sa); hasCloze = true} )\n                    clozables |> Seq.iter( fun cl -> \n                        // //append the weight group to our tags and convert the list of tags into an object literal\n                        // let tags =  \n                        //     (importantClozeMap.[cl] |> WeightGroup) :: cl.tags @ cl.trace  \n                        //     |> List.choose( fun t ->   //filter junk tags\n                        //         match t with \n                        //         | Deprecated(x) -> None \n                        //         | Trace(x) -> None\n                        //         | _ -> Some(t) )\n                        //     |> keyValueList CaseRules.LowerFirst\n                        // let cloze,correctResponse = MakeItem sa cl\n                        let cloze,correctResponse, clTags = MakeItemWithTranformations sa cl\n                        //append the weight group to our tags and convert the list of tags into an object literal\n                        let tags =  \n                            (importantClozeMap.[cl] |> WeightGroup) :: clTags @ cl.trace  \n                            |> List.choose( fun t ->   //filter junk tags\n                                match t with \n                                | Deprecated(x) -> None \n                                | Trace(x) -> None\n                                | _ -> Some(t) )\n                            |> keyValueList CaseRules.LowerFirst\n                        //insert any alternative correct responses here\n                        let correctResponses = \n                            match acronymMap.TryFind(correctResponse) with\n                            | Some( acronym ) -> correctResponse + \"|\" + acronym // + if doTrace then \"~\" + (cl.trace |> String.concat \"~\") else \"\"\n                            | None -> correctResponse //+ if doTrace then \"~\" + (cl.trace |> String.concat \"~\") else \"\"\n\n                        clozes.Add( { cloze=cloze; itemId = hash sa; clozeId = hash cloze; correctResponse = correctResponses; tags=tags} ) \n                    )\n                )\n            return Ok( {sentences=sentences.ToArray();clozes=clozes.ToArray()} )\n        | Error(e) -> \n            return Error(e)\n    }\n\n///Reverse a string. Test of fable library imports\nlet DoSimpleComputation( input : string ) =\n    input.ToCharArray() |> Seq.rev |> Seq.cast |> String.concat \"\"","module Triples\n\n//=======================================================\n\n// THIS MODULE IS CURRENTLY NON-FUNCTIONAL\n\n//=======================================================\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json //for Json; might be cleaner way\n//TODO: possibly replace with this: https://github.com/thoth-org/Thoth.Fetch\n// open Fable.SimpleHttp\nopen AllenNLP\n// open DependencyCollapser\n\n//-- Internal ------------------------------\n/// A tag such that we can create an object literal (a pojo) from a list of tags\ntype Tag =\n    /// Debug information\n    | Trace of string\n\n/// A triple we have generated\n/// Rather than treating the triple as a primary representation, we treat it as another annotation on the sentence\n/// Other ideas: probability/confidence, score/importance\ntype Triple =\n    {\n        /// Start node, token indices\n        start : int[] \n        /// Edge node, token indices\n        edge : int[]\n        /// Stop node, token indices\n        stop : int[]\n        /// Is the edge negated\n        negated : bool\n        /// Collected messages reflecting our decision making; primarily for debug purposes (obj b/c some are Tag)\n        trace : Tag list\n    }\n\n///All data we have collected and will use for final creation of cloze items\ntype InternalAPI =\n    {\n        sentences : SentenceAnnotation[]\n        coreference : Coreference\n        triples : Triple[][]\n    }\n\n//---------------------------------------------------------------------\n\n    \n\n\n\n// MIGRATION NOTES\n// 1. Heavily symbolic approach, complex sentences \n// /z/aolney/repos/CGA3/CGA3/CGAExtractor/TriplesFromParse\n\n// /z/aolney/repos/CGA3/CGA3/CGAExtractor/TripleFilter\n// 2. Tidy example of high level API; references CGA3 library\n// /z/aolney/research_projects/braintrust/materials/NEETS/concept-maps-option-e.bkr\n\n// 3. Modernized freeform approach, uses EDUs\n// /z/aolney/research_projects/braintrust/code/NeetsToHtmlAndTasks\n// /z/aolney/repos/FreeformMapGenerator\n\n// LTH uses PTB tags and **extended** PTB dependencies \n// http://www.surdeanu.info/mihai/teaching/ista555-fall13/readings/PennTreebankConstituents.html\n// https://wacky.sslmit.unibo.it/lib/exe/fetch.php?media=papers:conll-syntax.pdf\n// Allen uses PTB tags and standard Stanford dependencies (not universal) https://nlp.stanford.edu/software/dependencies_manual.pdf\n\n\n\n// /// Returns if copula, subject, and predicate exist. **Heavily** simplified from LTH\n// let IsATripleDependencyOnly ( sa : SentenceAnnotation ) =\n//     let s = sa |> SubjectNode\n//     let p = sa |> PredicateNode\n//     let b = sa |> BeRoot\n//     match s,b,p with\n//     | Some(subj),Some(be),Some(pred) -> \n//         {\n//             start = sa |> GetDependentNodes subj\n//             edge = [| be |]\n//             stop = sa |> GetDependentNodes pred\n//             trace = [ ]\n//         } |> Some\n//     | _ -> None\n\n\n/// Convert SRL BIO tags to indices for start, edge, stop \n/// Uses a simplistic assumption that lowest ARG is the start node and next ARG is the stop node\nlet tripleIndicesFromSrlTags (srlTags : string[]) =\n    let map = srlTags |> srlArgToIndexMap\n    let sortedArgs = map |> Map.toArray |> Array.map fst |> Array.filter( fun a -> a.StartsWith(\"ARG\" ))\n    if sortedArgs.Length >= 2 then\n        Some(map.[sortedArgs.[0]]), map.TryFind(\"V\"), Some(map.[sortedArgs.[0]])\n    else\n        None,None,None\n\n//CGA3 implementation was entirely dependency based and allowed for only 1 root be-form\n//AllenNLP SRL works for be-forms, so we have option of nicely retrieving multiple in a single SA and then using dependencies to fix errors.\n/// Returns all be-form triples by jointly using SRL and dependencies\n// let IsATriples ( sa : SentenceAnnotation ) =\n//     let copTuples = sa.dep.predicted_dependencies |> Array.indexed |>  Array.filter (fun (i, x) -> x = \"cop\") \n//     let candidateTriples = sa.srl.verbs |> Array.map( fun v -> v.tags |> tripleIndicesFromSrlTags )\n//     //Assume the SRL has labeled arguments correctly. TODO error catching when this fails\n//     copTuples\n//     |> Array.collect( fun (copIndex,_) ->\n//         // let s = sa |> SubjectNode\n//         // let p = sa |> PredicateNode\n//         // let b = sa |> BeRoot\n//         candidateTriples\n//         |> Array.choose( fun (startOption,edgeOption,stopOption) ->\n//             match startOption,edgeOption,stopOption with\n//             //Find all three components\n//             | Some(start),Some(edge),Some(stop) -> \n//                 //check the edge indices contain the copula index\n//                 if edge |> Array.exists( fun (_,i) -> i = copIndex) then\n//                     {\n//                         start = start |> Array.map snd\n//                         edge = edge |> Array.map snd\n//                         stop = stop |> Array.map snd //TODO enforce nominal\n//                         trace = [ Trace( \"copIndex:\" + string(copIndex)) ]\n//                     } |> Some\n//                 else\n//                     None\n//             | _ -> None\n//         )\n//     )\n\n// FEEDBACK FOCAL EXAMPLE\n// Blood can floow from the atria down into the ______ because there are openings in the horizontal septum that separate them.\n// <Student>: artery\n// Artery is not right. The right answer is ventricles. \n// You may be confused about the difference between blood vessels and chambers of the heart. \n// Arteries and veins are blood vessesl that connect to the heart. \n// Atria and ventricles are chambers of the heart. The names are similar so they are easily confused.\n// IDEAS: \n// - build indexes for key dependencies, loop over srl, do all discovery at once. will condense repetitive actions across code and unify ideas\n// - use te to type edges. could be a vector of edge types\n// - use soundex for similar sounding words as errors; https://www.google.com/search?q=f%23+soundex\n// - include ditransitive verbs\n// - abandon triples for vectors. Would help search not explanation/text generation.\n// Compare response with correct using all attributes of each (similar)\n// Then focus on most salient dimensions in which they are different\n// http://verbs.colorado.edu/propbank/EPB-Annotation-Guidelines.pdf\n// TODO: \n// - amod, nn, num, (property)\n// - appos (isa)\n// - cop (isa or property)\n// - coref argument substitution\n// - ccomp and AM as possible worlds?\n\n/// Get all triples from a sentence using an SRL-first approch\nlet triplesFromSentence ( sa : SentenceAnnotation ) =\n    let copTuples = sa.dep.predicted_dependencies |> Array.indexed |>  Array.filter (fun (i, x) -> x = \"cop\") \n    let candidateTriples = sa.srl.verbs |> Array.map( fun v -> v.tags |> tripleIndicesFromSrlTags )\n    //Assume the SRL has labeled arguments correctly. TODO error catching when this fails\n    copTuples\n    |> Array.collect( fun (copIndex,_) ->\n        // let s = sa |> SubjectNode\n        // let p = sa |> PredicateNode\n        // let b = sa |> BeRoot\n        candidateTriples\n        |> Array.choose( fun (startOption,edgeOption,stopOption) ->\n            match startOption,edgeOption,stopOption with\n            //Find all three components\n            | Some(start),Some(edge),Some(stop) -> \n                //check the edge indices contain the copula index\n                if edge |> Array.exists( fun (_,i) -> i = copIndex) then\n                    {\n                        start = start |> Array.map snd\n                        edge = edge |> Array.map snd\n                        stop = stop |> Array.map snd //TODO enforce nominal\n                        trace = [ Trace( \"copIndex:\" + string(copIndex)) ]\n                        negated = false; //TODO: fix\n                    } |> Some\n                else\n                    None\n            | _ -> None\n        )\n    )\n\n/// Returns triples; accepts a serialized NLP object option, a chunksJson option, and an inputText \nlet GetTriples (nlpJsonOption: string option) ( chunksJsonOption : string option) ( inputText : string ) =\n    promise {\n        //Get a DocumentAnnotation if one wasn't passed in\n        let! nlpResult = \n            match nlpJsonOption with\n            | Some(nlpJson) -> nlpJson |> ofJson<DocumentAnnotation> |> Promisify \n            | None -> GetNLP chunksJsonOption inputText\n\n        match nlpResult with\n        | Ok(da) ->\n            //Make triples for every sentence \n            let (triples : Triple[][]) = da.sentences |> Array.map triplesFromSentence\n      \n            let apiResponse = {sentences = da.sentences; coreference = da.coreference; triples = triples}\n            return Ok( apiResponse )\n        | Error(e) -> \n            return Error(e)\n    }","module DefinitionalFeedback\n\nopen Thoth.Json //for Json; might be cleaner way\nopen SpellingCorrector\n\n//Fable 2 transition \nlet inline toJson x = Encode.Auto.toString(4, x)\nlet inline ofJson<'T> json = Decode.Auto.unsafeFromString<'T>(json)\n\n// a simple implementation of elaborated feedback \n// that uses the definitions of the wrong answer and correct answer\n// simple spelling correction is used to match wrong answers\n\n// So for example:\n\n// Cloze: The brain connects to the spinal cord through the __________ .\n\n// Student: nervous system\n\n// Feedback:\n// Nervous system is not right. The right answer is brain stem.\n// The difference is that (the nervous system is a network of cells that\n// sense and respond to stimuli in ways that maintain homeostasis), and\n// (the brain stem is a portion of the brain that includes the midbrain,\n// pons, and medulla oblongata.)\n\n// () delimit the start/edn of the definitions for example purposes\n\ntype Feedback =\n    {\n        feedback : string\n    }\n\n/// Defines an entry in our glossary. Tagging is needed for surface realization.\ntype EntryGloss =\n    {\n        entry : string[]\n        entryTag : string[]\n        gloss : string[]\n        glossTag : string[]\n    }\n\nlet firstLetterUpper (input : string) =\n    input.Substring(0,1).ToUpper() + input.Substring(1)\n\nlet lower ( s : string ) = s.ToLower()\n\n/// Map of definitions to EntryGloss\nlet mutable definitionMap = Map.empty\n/// Map of definitions to possible determiners\nlet mutable determinerMap = Map.empty\n/// Set of all words in definitions so we can distinguish b/w words that don't take a det and words we've never seen \nlet mutable wordSet = Set.empty\n\n/// Initialize the definition dictionary using a JSON object of string*EntryGloss\n/// Construct the determiner map with this information\nlet Initialize jsonDictionary =\n    try\n        definitionMap <- jsonDictionary |> ofJson<Map<string,EntryGloss>>\n        wordSet <- definitionMap |> Map.toSeq |> Seq.collect( fun (k,v) -> v.gloss |> Array.map lower ) |> Set.ofSeq\n\n        //Use only the first word of an entry when looking for determiner matches; may be too strong an assumption\n        let entryFirstWordSet = definitionMap |> Map.toSeq |> Seq.map( fun (k,v) -> v.entry.[0].ToLower() ) |> Set.ofSeq\n        determinerMap <-\n            definitionMap\n            |> Map.toSeq\n            |> Seq.collect( fun (k,v) -> Seq.zip (v.gloss |> Array.map lower) v.glossTag )\n            |> Seq.pairwise\n            |> Seq.choose( fun ( (w1,t1),(w2,t2) ) ->\n                let w1Lower = w1.ToLower()\n                match t1,entryFirstWordSet.Contains(w2) with\n                | \"DT\", true when w1Lower = \"a\" || w1Lower = \"an\" || w1Lower = \"the\" -> Some(w2,w1) //entry first word and determiner\n                | _ -> None\n            )\n            |> Seq.groupBy fst\n            //Get the most frequent determiner\n            |> Seq.map( fun (ent,detTuples) -> ent, detTuples |> Seq.countBy snd |> Seq.maxBy snd |> fst )\n            |> Map.ofSeq\n\n        promise{ return Ok( null ) }\n    with\n    | e -> promise{ return Error( e.Message ) }\n\n// /// This function should only be called by the test harness GUI. It wraps Initialize to match the test harness API\n// let HarnessInitialize ( jsonOption : string option) ( _ : string) =\n//     promise {\n//         match jsonOption with\n//         | Some(json) -> \n//             json |> Initialize\n//             return \"ok\", \"{}\"\n//         | None -> return \"error\", \"\"\"{\"message\":\"missing dictionary of EntryGloss\"}\"\"\"\n//     }\n\nlet isAcronym ( word : string ) = word = word.ToUpper() \n\nlet trim ( s : string ) = s.Trim()\n\nlet tokensToString tokens =\n    System.Text.RegularExpressions.Regex.Replace( tokens |> String.concat \" \" |> trim , @\" ([^\\w])\", \"$1\")\n\n/// Gets a determiner phrase, which could be subject or object\nlet getDeterminerPhraseFromTokens (tokens : string[]) =\n    let token0Lower = tokens.[0] |> lower\n    let det =\n        match determinerMap.TryFind( token0Lower ) with\n        | Some(det) -> det\n        | None -> \n            //If it is a word we've never seen OR we've seen the plural (which implies a count noun); assume it takes \"a\"/\"an\"; TODO: better job of plurals, etc\n            if not <| wordSet.Contains( token0Lower) || wordSet.Contains( token0Lower + \"s\" ) then\n                match token0Lower.Substring(0,1) with\n                | \"a\" | \"e\" | \"i\" | \"o\" | \"u\" -> \"an\"\n                | _ -> \"a\"\n            else\n                \"\" \n\n    //don't lowercase acronyms\n    let correctCaseToken0 = if isAcronym(tokens.[0]) then tokens.[0] else token0Lower \n    //return the det, which may be empty, a lowercased first token, and the rest\n    [| yield det; yield correctCaseToken0; for i = 1 to tokens.Length - 1 do yield tokens.[i] |] |> tokensToString\n\nlet getDeterminerPhrase ( text : string ) =\n    text.Split(' ') |> getDeterminerPhraseFromTokens\n\n/// Gets a predicate (verb + object phrase) for the entry\nlet getPredicate entry =\n    //Acronyms are singular\n    //let isAcronym = entry.entry.[0] = entry.entry.[0].ToUpper() \n    //We partly rely on the consistency of the glosses for marking adjective entries (gloss starts with Pertaining)\n    let nounEntry = entry.glossTag.[0] <> \"Pertaining\" && ( entry.entryTag |> Array.last ).StartsWith(\"N\")\n    let pluralEntry = nounEntry  && (entry.entryTag |> Array.last ).EndsWith(\"S\")\n    let needsDeterminer = entry.entryTag.[0].StartsWith(\"N\") || entry.entryTag.[0].StartsWith(\"J\") //noun or adj; all other cases need nothing\n    \n    let verb = \n        match nounEntry, pluralEntry, isAcronym( entry.entry.[0] ) with\n        | _, _, true -> \"is\"\n        | true,true,_ -> \"are\"\n        | true,false,_ -> \"is\"\n        | _ -> \"means\"\n\n    let completion =\n        if needsDeterminer then\n            entry.gloss |> getDeterminerPhraseFromTokens\n        else\n            entry.gloss |> tokensToString\n    \n    verb + \" \" + completion.Trim([|' ';'.'|])\n\ntype HarnessFeedbackRequest =\n    { \n        CorrectAnswer : string\n        IncorrectAnswer : string\n    }\n    static member InitializeTest() = {CorrectAnswer=\"ADH\"; IncorrectAnswer =\"acetylcholine\"; }\n \n/// Generates simple definitional feedback given a json object representing a FeedbackRequest\nlet GenerateFeedback incorrectAnswer correctAnswer =\n    promise {\n        //TODO: check why this seems to require 8GB of RAM\n        //let incorrectAnswerSpellingMatch = incorrectAnswer |> CorrectSpelling\n        let incorrectAnswerSpellingMatch = incorrectAnswer\n\n        let feedback =\n            match definitionMap.TryFind( incorrectAnswerSpellingMatch ), definitionMap.TryFind( correctAnswer ) with\n            | Some( incorrectEntry ), Some( correctEntry ) -> \n                firstLetterUpper( incorrectAnswerSpellingMatch ) + \" is not right. The right answer is \" + correctAnswer  + \". \" +\n                \"The difference is that \" + getDeterminerPhrase( incorrectAnswerSpellingMatch )  + \" \" + getPredicate( incorrectEntry ) + \n                \", and \" + getDeterminerPhrase( correctAnswer ) + \" \" + getPredicate( correctEntry ) + \".\"\n            | _ -> null\n        //return Ok( {feedback = feedback } )\n        if feedback <> null then\n            return Ok( {feedback = feedback } )\n        else \n            return Error( \"Unable to generate definitional feedback. Definitional feedback cache is \" + if definitionMap.IsEmpty then \"empty\" else \"full\" ) \n    }\n\n/// This function should only be called by the test harness GUI. It wraps GenerateFeedback to match the test harness API\nlet HarnessGenerateFeedback jsonFeedbackRequest =\n    let fr = jsonFeedbackRequest |> ofJson<HarnessFeedbackRequest>\n    GenerateFeedback fr.IncorrectAnswer fr.CorrectAnswer\n\n/// Very simplistic approach to turning non-sentential glossary entries into sentences\nlet GetDefinitionFromGlossary( term : string) =\n    match definitionMap.TryFind( term ) with\n    | Some(entry) -> (getDeterminerPhrase( term ) |> firstLetterUpper) + \" \" + getPredicate( entry ) +  \".\" |> Some\n    | None -> None\n\n/// Find the term or successive words then do a Very simplistic approach to turning non-sentential glossary entries into sentences\nlet GetDefinitionFromGlossaryHighRecall( term : string )=\n    //use the whole term then the first word of the term ; using  following words tends to create drift, e.g. digestive tract goes to tract (neuron)\n    // let candidateTerms = (Array.append [|term|] (term.Split( ' ' )) ) |> Array.filter( fun t -> definitionMap.ContainsKey( t ) )\n    let candidateTerms = [|term ; term.Split( ' ' ).[0] |] |> Array.filter( fun t -> definitionMap.ContainsKey( t ) )\n    if candidateTerms.Length > 0 then \n        GetDefinitionFromGlossary candidateTerms.[0]\n    else\n        None","module CachedElaboratedFeedback\n\nopen Thoth.Json \n\n//Fable 2 transition \nlet inline toJson x = Encode.Auto.toString(4, x)\nlet inline ofJson<'T> json = Decode.Auto.unsafeFromString<'T>(json)\n\n// This module caches elaborated feedback generated offline for common errors\n// It backs off to definitional feedback if nothing is found in the cache.\n\ntype Tag =\n    /// Did we use definitional feedback\n    | DefinitionalFeedback\n    /// Did we use cached elaborated feedback\n    | CachedElaboratedFeedback\n    /// Debug information\n    | Trace of string\n\ntype Feedback =\n    {\n        Feedback : string\n        Tags: Tag[]\n    }\n\n\n/// Map of definitions to EntryGloss\nlet mutable cache = Map.empty\n\n/// Initialize the cache using a JSON object of string[][] because ofJson doesn't like tuples as keys\nlet Initialize jsonDictionary =\n    try\n        cache <- jsonDictionary |> ofJson<string[][]> |> Array.choose( fun arr -> if arr.[2].Trim() <> \"\" then Some((arr.[0],arr.[1]), arr.[2]) else None) |> Map.ofArray\n        promise{ return Ok( null ) }\n    with\n    | e -> promise{ return Error( e.Message ) }\n\nlet firstLetterUpper (input : string) =\n    input.Substring(0,1).ToUpper() + input.Substring(1)\n\nlet correctnessStatement incorrectAnswer correctAnswer =\n    firstLetterUpper( incorrectAnswer ) + \" is not right. The right answer is \" + correctAnswer  + \". \" \n\n/// Generate elaborated feedback from the cache, backing off to definitional feedback\nlet GenerateFeedback incorrectAnswer correctAnswer =\n    promise {\n        let tags = ResizeArray<Tag>();\n        /// Search for incorrect,correct and correct,incorrect at once, preferring the incorrect,correct order consistent with the cache design\n        /// and backing off to definitional feedback if neither is found\n        let elaboratedFeedback =\n            match cache.TryFind( incorrectAnswer,correctAnswer ), cache.TryFind( correctAnswer,incorrectAnswer ) with\n            | Some(ef),_ -> ef |> Some\n            | None, Some(ef) -> ef |> Some\n            | None, None -> None\n\n        if elaboratedFeedback.IsSome then\n            tags.Add(CachedElaboratedFeedback)\n            let cs = correctnessStatement incorrectAnswer correctAnswer\n            return Ok( {Feedback = cs + elaboratedFeedback.Value; Tags=tags.ToArray() } )\n        else \n            let! dfResult = DefinitionalFeedback.GenerateFeedback incorrectAnswer correctAnswer\n            match dfResult with\n            | Ok(df) -> \n                tags.Add(DefinitionalFeedback)\n                return Ok( {Feedback = df.feedback; Tags=tags.ToArray() } )\n            // ~~DefinitionalFeedback.GenerateFeedback doesn't return errors, so this case exists to avoid compiler warnings~~\n            | Error( e ) -> \n                // let trace = Trace <| \"Unable to generate feedback. Elaborated feedback cache is \" + if cache.IsEmpty then \"empty\" else \"full\" + \". Definition feedback is \" + if DefinitionalFeedback.definitionMap.IsEmpty then \"empty.\" else \"full.\"\n                // tags.Add(trace)\n                // return  Ok( {Feedback = null; Tags=tags.ToArray() } )\n                let message = \"Unable to generate elaborated feedback. Elaborated feedback cache is \" + if cache.IsEmpty then \"empty\" else \"full\" + \". \" + e\n                return  Error( message )\n    }\n\ntype HarnessFeedbackRequest =\n    { \n        CorrectAnswer : string\n        IncorrectAnswer : string\n    }\n    static member InitializeTest() = {CorrectAnswer=\"nervous system\"; IncorrectAnswer =\"spinal cord\"; }\n \n/// This function should only be called by the test harness GUI. It wraps GenerateFeedback to match the test harness API\nlet HarnessGenerateFeedback jsonFeedbackRequest =\n    let fr = jsonFeedbackRequest |> ofJson<HarnessFeedbackRequest>\n    GenerateFeedback fr.IncorrectAnswer fr.CorrectAnswer\n","module Wikifier\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json \nopen Thoth.Fetch\nopen System.Text.RegularExpressions\n\n//for node compatibility\nimportSideEffects \"isomorphic-fetch\"\n\nlet allOK (resultsArr : Result<'t,'e>[] ) = resultsArr |> Array.forall( fun r -> match r with | Ok(r) -> true | Error(e) -> false )\nlet resultsToType (resultsArr : Result<'t,'e>[] )  = resultsArr |> Array.choose( fun r -> match r with | Ok(r) -> Some(r) | Error(_) -> None ) \nlet resultsToError (resultsArr : Result<'t,'e>[] )  = resultsArr |> Array.choose( fun r -> match r with | Ok(r) -> None | Error(e) -> Some(e) ) \n\n\n//Fable 2 transition \nlet inline toJson x = Encode.Auto.toString(4, x)\nlet inline ofJson<'T> json = Decode.Auto.unsafeFromString<'T>(json)\n\n// type HappyError =\n//     | Fetch of FetchError\n//     | Other of string\n\ntype Candidate =\n    {\n        /// Wikifier confidence\n        score : float\n        /// Wikipedia title (at one time) for this entity\n        wikiTitle : string\n        /// Wikipedia id (fairly stable) for this entity\n        wikiId : int\n        /// category/topic type attributes associated with this entity, tab delimited\n        attributes : string\n    }\n/// Wikipedia entity alignment\ntype Entity =\n    {\n        /// Surface realization of input text corresponding to this entity\n        surfaceForm : string\n        /// Character start position of surface realization in input text\n        start : int\n        /// Character stop position of surface realization in input text\n        stop :int\n        /// Candidate Wikipedia entities for this Entity\n        candidates : Candidate[]\n    }\n/// A wikification based on the illinois-wikifier API\ntype Wikification =\n    {\n        /// Input text\n        inputText : string\n        /// Wikipedia entities found in the input text\n        entities : Entity[]\n    }\n\nlet endpoint = \"http://127.0.0.1:8800/\"\n// let endpoint = \"https://wikifier.olney.ai/\"\n\n\ntype WikificationRequest = { text : string }\n\n/// Get a wikification for the input text\nlet GetWikification(text: string): JS.Promise<Result<Wikification,FetchError>> =\n    promise {\n        //Disallow short/empty input (illinois wikifier restriction)\n        if text.Trim().Length < 5 then\n            return Ok( { inputText = text; entities = Array.empty})\n        else\n            return! Fetch.tryPost( endpoint + \"wikify\", { text=text;  } ) //caseStrategy = SnakeCase) //capitalization on the document fields seems to blow up the case strategy\n    }\n\n/// The target is A and the query is B, so we score the overlap with respect to A\nlet overlap startA stopA startB stopB =\n    if startA < stopB && startB < stopA then\n        let maxStart = if startA < startB then startB else startA\n        let minStop = if stopA < stopB then stopA else stopB\n        float(minStop - maxStart) / float(stopA-startA) \n        // float((stopB-startA) + (stopA-startB)) / float(stopA-startA) \n    else\n        0.0\n\n/// A match result for a query term with a Wikipedia entity in a text \ntype EntityMatch = \n    {\n        /// Percentage of many characters of the WP entity align with this term\n        Coverage : float\n        /// The Wikipeida entity the term aligns with\n        Entity : Entity\n    }\n\ntype WikiTermEntityMatch =\n    {\n        /// The term we are trying to match\n        Term : string\n        /// Character start position of the term\n        Start : int\n        /// Character stop position of the term\n        Stop : int\n        /// Array of Wikipedia entity match results\n        EntityMatches : EntityMatch[]\n    }\n\n/// Get wikipedia entities that overlap with terms\n/// We don't care about tracking precise correspondence\nlet GetWikiEntitiesForTerms( text : string) ( terms : string[]) = \n    promise {\n        let! wikification = text |> GetWikification\n        match wikification with\n        | Ok(w) ->\n            let wikiTermEntityMatches = [|\n                for t in terms do\n                    for m in Regex.Matches(text, @\"\\b\" + t + @\"\\b\", RegexOptions.IgnoreCase) |> Seq.cast<Match>  do\n                        let startA = m.Index\n                        let stopA = (m.Index + m.Length)\n                        let entityMatches = [|\n                            for e in w.entities do\n                                let coverage = overlap startA stopA e.start e.stop\n                                if coverage > 0.0 then\n                                    yield { Coverage=coverage; Entity= e } \n                        |]\n                        if entityMatches.Length > 0 then\n                            yield { Term = t ; Start=startA; Stop = stopA; EntityMatches = entityMatches }\n            |]\n            return Ok(wikiTermEntityMatches)\n        | Error(e) -> return Error(e)\n\n    }\n\n// Request for the test harness UI\ntype HarnessWikifyAlignRequest =\n    { \n        Text : string\n        Terms : string[]\n    }\n    static member InitializeTest() = {Text=\"Emotional stress can either increase or decrease TRH and TSH secretion, depending upon circumstances.\"; Terms = [| \"TSH secretion\"; \"TRH\"; \"emotional stress\" |] }\n  \n/// This function should only be called by the test harness GUI. It wraps GetWikiEntitiesForTerms to match the test harness API\nlet HarnessWikiAlign jsonRequest =\n    let request = jsonRequest |> ofJson<HarnessWikifyAlignRequest>\n    GetWikiEntitiesForTerms request.Text request.Terms\n\ntype FromTo = { from : string ; ``to`` : string  }\ntype Page = { pageid : int; ns : int option; title : string option; extract : string option; missing : string option }\ntype WikipediaQuery = { normalized : FromTo[] option; redirects : FromTo[] option; pages : Map<string,Page> }\ntype WikipediaExtractResult = { batchcomplete : string ; query : WikipediaQuery }\n\n/// Get a the first paragraph of a wikipedia page by id\nlet GetWikipediaPageFirstParagraph( pageId: int): JS.Promise<Result<WikipediaExtractResult,FetchError>> =\n    promise {\n        do! Promise.sleep 100 // be nice and throttle requests\n        let wikipediaQuery = \"https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&origin=*&pageids=\" + pageId.ToString()\n        return! Fetch.tryGet( wikipediaQuery ) //  , [Fetch.Types.RequestProperties.Mode Fetch.Types.RequestMode.Nocors])\n    }\n\ntype WikiTermEntityExtracts =\n    {\n        WikiTermEntityMatches : WikiTermEntityMatch[]\n        Pages : Page[]\n    }\n\nlet GetWikiExtractsForTerms( text : string) ( terms : string[]) = \n    promise {\n        let! wikiTermEntityMatches = GetWikiEntitiesForTerms text terms\n        match wikiTermEntityMatches with\n        | Ok( wtems ) -> \n            //for each entity match, get the extract for the top candidate\n            let! extractResults = \n                wtems\n                |> Seq.collect( fun wtem -> \n                    wtem.EntityMatches\n                    |> Seq.choose( fun em ->\n                        if em.Entity.candidates <> null && em.Entity.candidates.Length > 0 then\n                            //candidates are sorted so best match is first\n                            let max = em.Entity.candidates |> Array.maxBy( fun c -> c.score) \n                            Some <| max.wikiId \n                        else\n                            None\n                    )\n                    // Be nice to WP and avoid duplicates\n                    |> Seq.distinct\n                    |> Seq.map GetWikipediaPageFirstParagraph\n                )\n                |> Promise.all\n            if allOK <| extractResults then\n                let pages = \n                    extractResults \n                    |> resultsToType\n                    |> Array.collect( fun wer -> wer.query.pages |> Map.toArray |> Array.map snd)\n                    // Remove duplicates, i.e. if similar page queries returned overlapping sets of pages\n                    |> Array.distinctBy( fun p -> p.pageid)\n                    // |> Array.map( fun wer -> \n                    //    (Map.toList wer.query.pages) |> List.map snd |> List.head ) //NOTE: only taking first page!\n                return Ok( { WikiTermEntityMatches = wtems; Pages = pages } )\n            else \n                //We have a choice here to extend Fetch to report set of errors at once OR we can stay within Fetch and report the first such error\n                //We choose the later on the suspicion that all errors in this batch will be of the same type\n                // let errorPayload = (extractResults |> resultsToError |> Array.map (sprintf \"wikipedia extract query error: %A\") |> Array.distinct )\n                // return Error(errorPayload |> String.concat \"\\n\" |> HappyError.Other ) \n                return Error( extractResults |> resultsToError |> Array.head )\n    \n        | Error(e) -> return Error( e ) //HappyError.Fetch(e) )\n    }\n\n/// This function should only be called by the test harness GUI. It wraps GetWikiExtractsForTerms to match the test harness API\nlet HarnessWikiExtracts jsonRequest =\n    let request = jsonRequest |> ofJson<HarnessWikifyAlignRequest>\n    GetWikiExtractsForTerms request.Text request.Terms\n","module ElaboratedFeedback\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json \nopen Thoth.Fetch\nopen LongformQA\nopen Wikifier\n\n//Fable 2 transition \nlet inline toJson x = Encode.Auto.toString(4, x)\nlet inline ofJson<'T> json = Decode.Auto.unsafeFromString<'T>(json)\n\n//convenience functions for unwrapping/mapping results\nlet isOK ( r : Result<'t,'e> ) = match r with | Ok(r) -> true | Error(e) -> false\nlet resultToTypeOption (r : Result<'t,'e> )  = match r with | Ok(r) -> Some(r) | Error(_) -> None \nlet resultToErrorOption (r : Result<'t,'e> )  = match r with | Ok(r) -> None | Error(e) -> Some(e)\nlet allOK (resultsArr : Result<'t,'e>[] ) = resultsArr |> Array.forall( fun r -> match r with | Ok(r) -> true | Error(e) -> false )\nlet resultsToType (resultsArr : Result<'t,'e>[] )  = resultsArr |> Array.choose( fun r -> match r with | Ok(r) -> Some(r) | Error(_) -> None ) \nlet resultsToError (resultsArr : Result<'t,'e>[] )  = resultsArr |> Array.choose( fun r -> match r with | Ok(r) -> None | Error(e) -> Some(e) ) \nlet PromisifyOk ( input:'t ) =\n    promise{ return Ok(input) }\n\n[<StringEnum>]\ntype QuestionType =\n    /// Was the synthetic question \"What is the difference between X and Y\"\n    | DifferenceQuestion\n    /// Was the synthetic question \"What is the relationship between X and Y\"\n    | RelationshipQuestion\n\ntype Tag =\n    /// Were definitions inserted as context documents in the order of words in question\n    | DefinitionsUsed of int\n    /// Was the cloze sentence used as a context document\n    | ClozeUsed of bool\n    /// Number of Elasticsearch documents returned\n    | ElasticDocumentsFound of int\n    /// Number of Elasticsearch documents with both answers\n    | ElasticDocumentsContainBothKeys of int\n    /// Number of Elasticsearch documents used (for whatever reason)\n    | ElasticDocumentsUsed of int\n    /// Number of answer sentences with one key term\n    | AnswerSentencesContainOneKey of int\n    /// Was coreference used to clean up answer\n    | CoreferenceFilteredSentences of bool\n    /// What was the synthetic question?\n    | SyntheticQuestion of QuestionType\n    /// Debug information\n    | Trace of string\n\n/// Capture manipulations of Elasticsearch results going into QA\ntype ElasticProcess = \n    {\n        /// Documents retrieved from Elasticsearch AP book using the synthetic question\n        ElasticDocuments : Document[]\n        /// Index of ElasticDocuments that contain both IncorrectAnswer and CorrectAnswer\n        MatchingElasticDocumentIndices : int[]\n        /// Output of this process to be used as query context\n        OutputContext : string[]\n    }\n/// Capture manipulations using coreference resolution on answer\ntype CoreferenceProcess = \n    {\n        /// The unprocessed answer sentences, may contain garbage sentences\n        CandidateAnswerSentences : string[];\n        /// Coref resolved candidate answer sentences\n        CorefCandidateAnswerSentences : string[];\n        /// Index of CorefCandidateAnswer sentences used\n        SelectedSentenceIndices : int[];\n        /// Output of this process to be used as the answer\n        OutputAnswer : string\n    }\n/// The source of a definition\n[<StringEnum>]\ntype DefinitionSource =\n    /// Book glossary, constructed per domain\n    | Glossary\n    /// Wikipedia, totally dynamic\n    | Wikipedia\n\n/// A definition with associated metadata\ntype Definition =\n    {\n        /// The text of the definition\n        Text : string \n        /// Source of the definition\n        Source : DefinitionSource\n    }\n    //Project the text of a Definition option as an option\n    static member TextOption ( def : Definition option) =  match def with | Some(d) -> Some <| d.Text | None -> None \n\n/// Capture manipulations of definitions\ntype DefinitionProcess = \n    {\n        /// The definition we retrieved for the CorrectAnswer\n        CorrectAnswerDefinition : Definition option\n        /// The definition we retrieved for the IncorrectAnswer\n        IncorrectAnswerDefinition : Definition option\n        /// Wikipedia metadata associated with definitions from that source\n        WikiExtracts : WikiTermEntityExtracts option\n        /// Output of this process to be used as query context\n        OutputContext : string[]\n    }\n/// An elaborated feedback based on the longform-qa API\ntype ElaboratedFeedback =\n    {\n        /// The output elaborated feedback as a string\n        ElaboratedFeedback : string\n        /// The incorrect answer to the cloze item provided by the student\n        IncorrectAnswer : string\n        /// The correct answer to the cloze item\n        CorrectAnswer : string\n        /// The sentence that the cloze item was generated from, i.e. without a blank\n        ClozeSentence : string option;\n        /// Manipulations of Elasticsearch results going into query\n        ElasticProcess : ElasticProcess\n        /// Manipulations of definition results going into query\n        DefinitionProcess : DefinitionProcess option\n        /// Documents provided as longform QA context\n        ContextDocuments : string[]\n        /// Manipulations using coreference resolution on answer\n        CoreferenceProcess : CoreferenceProcess option\n        /// The synthethic question used, e.g What is the difference between X and Y?\n        SyntheticQuestion : string;\n        /// List of tags for analysis and debugging\n        Tags : Tag[]\n    }\n\n/// An entailment comparison between elaborated feedbacks\ntype EntailmentComparison =\n    {\n        Premise : ElaboratedFeedback\n        Hypothesis : ElaboratedFeedback\n        Entailment : float\n        Contradiction : float\n        Neutral : float\n    }\n\nlet lower ( s : string ) = s.ToLower()\nlet lowContains ( a : string ) ( b : string ) =\n    a.ToLower().Contains( b.ToLower () )\n\n\ntype Configuration =\n    {\n        UseCloze : bool;\n        /// Implies glossary by default\n        UseGlossaryDefinitions : bool;\n        /// Requires UseGlossaryDefinitions to be true\n        UseWikipediaDefinitionsForMissingGlossaryDefinitions : bool;\n        ElasticDocsContainBothKeys : bool;\n        MaxElasticDocs : int;\n        UseAnswerCoreferenceFilter : bool;\n        SyntheticQuestion : QuestionType;\n    }\n    static member Default() = { UseCloze = true; UseGlossaryDefinitions = true; UseWikipediaDefinitionsForMissingGlossaryDefinitions = true; ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n\n/// Given a term, find the associated definitions in WikiTermEntityExtracts\nlet getWikiDefinition (wikiExtracts: WikiTermEntityExtracts) ( term : string ) =\n    let wtemOption =\n        wikiExtracts.WikiTermEntityMatches\n        |> Array.tryFind( fun wtem -> wtem.Term = term )\n    // get page ids of the first candidate for eacy entity (top ranked candidate)\n    let pageIdsOption =\n        match wtemOption with\n        | Some(wtem) -> \n            wtem.EntityMatches \n            // Rank order em by candidate probability so most probable gets most consideration\n            |> Array.choose( fun em -> \n                if em.Entity.candidates <> null && em.Entity.candidates.Length > 0 then\n                    let max = em.Entity.candidates |> Array.maxBy( fun c -> c.score) \n                    Some <| (max.score,max.wikiId )\n                else\n                    None\n            )\n            |> Array.sortByDescending fst\n            |> Array.map snd\n            |> Array.distinct\n            |> Some\n            // OLD: assumes candidates are already sorted by descending, which isn't always true\n            // |> Array.sortByDescending( fun em -> em.Entity.candidates.[0].score)\n            // |> Array.map( fun em -> em.Entity.candidates.[0].wikiId) |> Some\n        | None -> None\n    // find definitions with associated pageIds, if they exist, avoiding duplicates\n    match pageIdsOption with\n    | Some(pageIds) ->\n        let definitions =  \n            [| for pageId in pageIds do\n                for page in wikiExtracts.Pages do\n                    if pageId = page.pageid && page.extract.IsSome then\n                        //simplistic - use first sentence marked by period\n                        yield page.extract.Value.Split('.').[0]\n            |] |> String.concat \". \"\n        if definitions.Length > 0 then \n            Some <| { Text = definitions ; Source = Wikipedia }\n        else None\n    | None -> None\n    \n/// Get a glossary definition\nlet getGlossaryDefinition (term:string) = \n    match term |> DefinitionalFeedback.GetDefinitionFromGlossaryHighRecall with\n    | Some(d) -> Some <| { Text = d; Source = Glossary }\n    | None -> None\n\n/// Get definition process (definitions and aspects of construction)\nlet getDefinitionProcess correctAnswer incorrectAnswer text config =\n    // promise {\n        //Log our progress using tags\n        let tags = ResizeArray<Tag>()\n\n        // We have multiple options for definitions. \n        // We prefer the glossary entry if it exists\n        // An alternative is Wikipedia \n        if config.UseGlossaryDefinitions then\n            let glossaryIncorrectDefinitionOption = incorrectAnswer |> getGlossaryDefinition\n            let glossaryCorrectDefinitionOption = correctAnswer |> getGlossaryDefinition\n            //if we fail to get glossary definitions, query wikipedia\n            if config.UseWikipediaDefinitionsForMissingGlossaryDefinitions && (glossaryIncorrectDefinitionOption.IsNone || glossaryCorrectDefinitionOption.IsNone) then\n                promise {\n                    // Try to get definitions for the terms we are missing from Wikipedia\n                    // Because only the correct answer is in the text for certain, we create a synthetic text where we've replaced the correct answer with the correct answer\n                    let syntheticText = text + \" \" + text.Replace( correctAnswer, incorrectAnswer)\n                    let! wikiResult = GetWikiExtractsForTerms syntheticText [| incorrectAnswer ; correctAnswer |] \n                    match wikiResult with\n                    | Ok( wikiExtracts ) -> \n                        let wikiIncorrectDefinitionOption = getWikiDefinition wikiExtracts incorrectAnswer\n                        let wikiCorrectDefinitionOption = getWikiDefinition wikiExtracts correctAnswer\n                        // Use the glossary definition, backing off to the wiki definition\n                        let finalIncorrectDefinition = \n                            match glossaryIncorrectDefinitionOption, wikiIncorrectDefinitionOption with\n                            | Some(_), _ -> glossaryIncorrectDefinitionOption\n                            | None, Some(_) -> wikiIncorrectDefinitionOption\n                            | None, None -> None\n                        let finalCorrectDefinition = \n                            match glossaryCorrectDefinitionOption, wikiCorrectDefinitionOption with\n                            | Some(_), _ -> glossaryCorrectDefinitionOption\n                            | None, Some(_) -> wikiCorrectDefinitionOption\n                            | None, None -> None\n\n\n                        let definitionContext = [| finalIncorrectDefinition; finalCorrectDefinition |] |> Array.choose Definition.TextOption\n                        tags.Add(DefinitionsUsed(definitionContext.Length))\n\n                        let dp = { CorrectAnswerDefinition = finalCorrectDefinition; IncorrectAnswerDefinition = finalIncorrectDefinition; WikiExtracts = Some <| wikiExtracts; OutputContext = definitionContext }\n                        return Ok( Some <| dp, tags)\n                    | Error(e) -> return Error(e)\n                }\n            else\n                //Note incorrect precedes correct: this should match the synthetic question word order\n                let definitionContext = [| glossaryIncorrectDefinitionOption ; glossaryCorrectDefinitionOption |] |> Array.choose Definition.TextOption\n                tags.Add(DefinitionsUsed(definitionContext.Length))\n                let dp = { CorrectAnswerDefinition = glossaryCorrectDefinitionOption; IncorrectAnswerDefinition = glossaryIncorrectDefinitionOption; WikiExtracts = None; OutputContext = definitionContext }      \n                PromisifyOk ( Some <| dp ,tags)\n        else\n            tags.Add(DefinitionsUsed(0))\n            PromisifyOk ( None,tags )\n    // }\n\n/// Get Elastic process (documents and aspects of construction)\nlet getElasticProcess (docs : Document[]) correctAnswer incorrectAnswer config =\n    //Log our progress using tags\n    let tags = ResizeArray<Tag>()\n    tags.Add(ElasticDocumentsFound(docs.Length))\n\n    //tuple for accessing indices later; skip synthetic question doc\n    let docTuples =  docs |> Array.skip 1 |> Array.mapi( fun i d -> i,d )\n\n    // Apply selection criteria (if any) to elastic documents\n    let filteredDocuments = \n        //Remove documents that don't contain both incorrect and correct answers\n        if config.ElasticDocsContainBothKeys then \n            let fd = docTuples |> Array.filter( fun (_,d) ->  (lowContains d.Text incorrectAnswer) && (lowContains d.Text correctAnswer) )\n            tags.Add(ElasticDocumentsContainBothKeys(fd.Length))\n            fd\n        else\n            docTuples\n    \n    let retainedDocIndices = filteredDocuments |> Array.map fst\n\n    //Heuristic limit on number of elastic documents to use (idea is that too much irrelevant context is harmful)\n    let elasticDocLimit = config.MaxElasticDocs\n    let tryTake i (arr:string[]) = if i > arr.Length then arr else arr.[0..i-1]\n    let finalElasticDocs = filteredDocuments |> Array.map( fun (_,d) -> d.Text) |> tryTake elasticDocLimit\n    tags.Add(ElasticDocumentsUsed(finalElasticDocs.Length))\n\n    { ElasticDocuments = docs; MatchingElasticDocumentIndices = retainedDocIndices; OutputContext = finalElasticDocs},tags\n\n/// Get coreference process (coref filtered answer and aspects of construction)\nlet getCoreferenceProcess answer correctAnswer incorrectAnswer config = \n    promise {       \n        //Log our progress using tags\n        let tags = ResizeArray<Tag>()\n\n        if config.UseAnswerCoreferenceFilter then\n            //Remove sentences that do not contain one of our terms; we get better recall by using coref resolution to do this\n            let! answerWithResolvedReferents = answer |> AllenNLP.ResolveTextReferents\n            match answerWithResolvedReferents with\n            | Ok(res) ->\n                // let sentences = ans.answer.Split('.') //hacking sentence segmentation\n                //align before filtering\n                let sentenceTuples =  res.documentAnnotation.sentences |> Array.zip res.resolvedSentences |> Array.mapi( fun i (r,s) -> i, r, s.sen)\n                let candidateSentences = sentenceTuples |> Array.map( fun (i,r,s) -> s)\n                //filter\n                let filteredTuples = sentenceTuples |> Array.filter( fun (i,r,s) ->  (lowContains r incorrectAnswer) || (lowContains r correctAnswer) )\n                //project results\n                let corefSentences = filteredTuples |> Array.map( fun (i,r,s) -> r)\n                let answerSentences = filteredTuples |> Array.map( fun (i,r,s) -> s)\n                let retainedSentenceIndices = filteredTuples |> Array.map( fun (i,r,s) -> i)\n                tags.Add(AnswerSentencesContainOneKey(answerSentences.Length))\n                tags.Add(CoreferenceFilteredSentences(true))\n                let finalAnswer = answerSentences |> String.concat \" \"\n                \n                return Ok(  Some <| {CandidateAnswerSentences = candidateSentences; CorefCandidateAnswerSentences = corefSentences; SelectedSentenceIndices=retainedSentenceIndices; OutputAnswer=finalAnswer}, tags ) \n            // Error on resolving coreference\n            | Error(e) -> \n                return Error( FetchError.DecodingFailed(e) ) //HACK: must be a fetch error to match type, so we choose a FetchError that wraps string\n        else\n            return Ok( None, tags ) \n          \n    }\n\nlet GetElaboratedFeedback( incorrectAnswer : string ) (correctAnswer : string) ( clozeSentence : string ) ( configurationOption : Configuration option)=\n    promise {\n        let config =\n            match configurationOption with\n            | Some(c) -> c\n            | None -> Configuration.Default()\n\n        //Log our progress using tags\n        let tags = ResizeArray<Tag>()\n\n        //Get definitions\n        let! dpResult = getDefinitionProcess correctAnswer incorrectAnswer clozeSentence config\n        match dpResult with\n        | Ok(definitionProcess,dpTags) -> \n            tags.AddRange(dpTags)\n                \n            \n            //Create synthetic question\n            let question = \n                match config.SyntheticQuestion with\n                | RelationshipQuestion -> \"What is the relationship between the \" + incorrectAnswer + \" and the \" + correctAnswer + \"?\"\n                | DifferenceQuestion -> \"What is the difference between the \" + incorrectAnswer + \" and the \" + correctAnswer + \"?\"\n            tags.Add( SyntheticQuestion( config.SyntheticQuestion ))\n\n            //Get elastic docs; see tutorial dialogue for example of handling promises if things get more complicated\n            let! documents = question |> getDocuments\n            match documents with\n            | Ok(docs) ->\n\n                // Process elastic docs\n                let elasticProcess, epTags = getElasticProcess docs correctAnswer incorrectAnswer config\n                tags.AddRange(epTags)\n                \n                //Construct full custom context for query\n                let definitionContext = \n                    match definitionProcess with\n                    | Some(dp) -> dp.OutputContext\n                    | None -> [||]\n                let clozeContext = \n                    if config.UseCloze then  \n                        tags.Add(ClozeUsed(true))\n                        [| clozeSentence |] \n                    else Array.empty\n                let context = Array.concat [ definitionContext; clozeContext; elasticProcess.OutputContext ]               \n                \n                // Process query and results\n                let! answer = getAnswerWithContext question context\n                match answer with\n                | Ok(ans) -> \n                    let! cpResult = getCoreferenceProcess ans.answer correctAnswer incorrectAnswer config\n                    match cpResult with\n                    | Ok(coreferenceProcess,cpTags) -> \n                        tags.AddRange(cpTags)\n\n                        let finalAnswer =\n                            match coreferenceProcess with \n                            | Some(cp) -> cp.OutputAnswer\n                            | None -> ans.answer\n\n                        let elaboratedFeedback = \n                            {\n                                ElaboratedFeedback = finalAnswer;\n                                IncorrectAnswer = incorrectAnswer;\n                                CorrectAnswer = correctAnswer;\n                                ClozeSentence = if config.UseCloze then Some <| clozeSentence else None;\n                                ElasticProcess = elasticProcess;\n                                DefinitionProcess = definitionProcess;\n                                ContextDocuments = context;\n                                CoreferenceProcess = coreferenceProcess;                           \n                                SyntheticQuestion = question;\n                                Tags = tags.ToArray()\n                            }\n                        return Ok( elaboratedFeedback ) \n                    // Error on resolving coreference\n                    | Error(e) -> \n                       return Error(e)            \n                // Error on getting answer from longform qa\n                | Error(e) -> \n                    return Error(e)\n            // Error on getting docs from elasticsearch\n            | Error(e) -> \n                return Error(e)\n        // Error on getting definitions\n        | Error(e) -> \n            return Error(e)\n    }\n\n/// Request for the test harness UI\ntype HarnessElaboratedFeedbackRequest =\n    { \n        CorrectAnswer : string\n        IncorrectAnswer : string\n        ClozeSentence : string\n    }\n    // static member InitializeTest() = {CorrectAnswer=\"cerebellum\"; IncorrectAnswer =\"cerebrum\"; ClozeSentence=\"Small amounts enter the central canal of the spinal cord, but most CSF circulates through the subarachnoid space of both the brain and the spinal cord by passing through openings in the wall of the fourth ventricle near the cerebellum .\"}\n    static member InitializeTest() = {CorrectAnswer=\"digestive tract\"; IncorrectAnswer =\"digestive system\"; ClozeSentence=\"Other organs that produce hormones include the pineal gland; the thymus; reproductive organs; and certain cells of the digestive tract, the heart, and the kidneys.\"}\n\n/// This function should only be called by the test harness GUI. It wraps GenerateFeedback to match the test harness API\nlet HarnessGetElaboratedFeedback jsonRequest =\n    let request = jsonRequest |> ofJson<HarnessElaboratedFeedbackRequest>\n    let config = \n        None\n        //Some <| { UseCloze = false; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n    GetElaboratedFeedback request.IncorrectAnswer request.CorrectAnswer request.ClozeSentence config \n\n\n// ABLATION EXPERIEMENTS: CALLING FROM NODE WITH TIMEOUTS TO AVOID BLOWING UP CUDA\n[<StringEnum>]\ntype AblationCondition = \n    /// No cloze, no definitions, but everything else\n    | [<CompiledName(\"NoClozeNoDefinitions\")>] NoClozeNoDefinitions\n    /// No cloze, but glossary definitions and everything else\n    | [<CompiledName(\"NoClozeGlossaryDefinitions\")>] NoClozeGlossaryDefinitions\n    /// The full system!\n    | [<CompiledName(\"Full011720\")>] Full011720\n    // The next 16 conditions are for the evaluation paper: \n    // Defi Y means definitions are used (both types); Cloz Y means cloze is used; Keyf Y means elasticsearch docs are filtered to contain both terms; Corf Y means sentences sentences that don't contain a key term, even when coref is resolved, are filtered out\n    | [<CompiledName(\"Defi_Y__Cloz_Y__Keyf_Y__Corf_Y\")>] Defi_Y__Cloz_Y__Keyf_Y__Corf_Y\n    | [<CompiledName(\"Defi_N__Cloz_Y__Keyf_Y__Corf_Y\")>] Defi_N__Cloz_Y__Keyf_Y__Corf_Y\n    | [<CompiledName(\"Defi_Y__Cloz_N__Keyf_Y__Corf_Y\")>] Defi_Y__Cloz_N__Keyf_Y__Corf_Y\n    | [<CompiledName(\"Defi_N__Cloz_N__Keyf_Y__Corf_Y\")>] Defi_N__Cloz_N__Keyf_Y__Corf_Y\n    | [<CompiledName(\"Defi_Y__Cloz_Y__Keyf_N__Corf_Y\")>] Defi_Y__Cloz_Y__Keyf_N__Corf_Y\n    | [<CompiledName(\"Defi_N__Cloz_Y__Keyf_N__Corf_Y\")>] Defi_N__Cloz_Y__Keyf_N__Corf_Y\n    | [<CompiledName(\"Defi_Y__Cloz_N__Keyf_N__Corf_Y\")>] Defi_Y__Cloz_N__Keyf_N__Corf_Y\n    | [<CompiledName(\"Defi_N__Cloz_N__Keyf_N__Corf_Y\")>] Defi_N__Cloz_N__Keyf_N__Corf_Y\n    | [<CompiledName(\"Defi_Y__Cloz_Y__Keyf_Y__Corf_N\")>] Defi_Y__Cloz_Y__Keyf_Y__Corf_N\n    | [<CompiledName(\"Defi_N__Cloz_Y__Keyf_Y__Corf_N\")>] Defi_N__Cloz_Y__Keyf_Y__Corf_N\n    | [<CompiledName(\"Defi_Y__Cloz_N__Keyf_Y__Corf_N\")>] Defi_Y__Cloz_N__Keyf_Y__Corf_N\n    | [<CompiledName(\"Defi_N__Cloz_N__Keyf_Y__Corf_N\")>] Defi_N__Cloz_N__Keyf_Y__Corf_N\n    | [<CompiledName(\"Defi_Y__Cloz_Y__Keyf_N__Corf_N\")>] Defi_Y__Cloz_Y__Keyf_N__Corf_N\n    | [<CompiledName(\"Defi_N__Cloz_Y__Keyf_N__Corf_N\")>] Defi_N__Cloz_Y__Keyf_N__Corf_N\n    | [<CompiledName(\"Defi_Y__Cloz_N__Keyf_N__Corf_N\")>] Defi_Y__Cloz_N__Keyf_N__Corf_N\n    | [<CompiledName(\"Defi_N__Cloz_N__Keyf_N__Corf_N\")>] Defi_N__Cloz_N__Keyf_N__Corf_N\n\nlet ElaboratedFeedbackCondition( row : string)(condition : AblationCondition) =\n    let config = \n        match condition with\n        | NoClozeNoDefinitions -> Some <| { UseCloze = false; UseGlossaryDefinitions = false; UseWikipediaDefinitionsForMissingGlossaryDefinitions = false; ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | NoClozeGlossaryDefinitions -> Some <| { UseCloze = false; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Full011720 -> Some <| { UseCloze = true; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_Y__Keyf_Y__Corf_Y -> Some <| { UseCloze = true; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_Y__Keyf_Y__Corf_Y -> Some <| { UseCloze = true; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_N__Keyf_Y__Corf_Y -> Some <| { UseCloze = false; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_N__Keyf_Y__Corf_Y -> Some <| { UseCloze = false; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_Y__Keyf_N__Corf_Y -> Some <| { UseCloze = true; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_Y__Keyf_N__Corf_Y -> Some <| { UseCloze = true; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_N__Keyf_N__Corf_Y -> Some <| { UseCloze = false; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_N__Keyf_N__Corf_Y -> Some <| { UseCloze = false; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_Y__Keyf_Y__Corf_N -> Some <| { UseCloze = true; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_Y__Keyf_Y__Corf_N -> Some <| { UseCloze = true; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_N__Keyf_Y__Corf_N -> Some <| { UseCloze = false; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_N__Keyf_Y__Corf_N -> Some <| { UseCloze = false; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_Y__Keyf_N__Corf_N -> Some <| { UseCloze = true; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_Y__Keyf_N__Corf_N -> Some <| { UseCloze = true; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_Y__Cloz_N__Keyf_N__Corf_N -> Some <| { UseCloze = false; UseGlossaryDefinitions = true;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = true;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n        | Defi_N__Cloz_N__Keyf_N__Corf_N -> Some <| { UseCloze = false; UseGlossaryDefinitions = false;  UseWikipediaDefinitionsForMissingGlossaryDefinitions = false;  ElasticDocsContainBothKeys = false; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = false ; SyntheticQuestion = RelationshipQuestion}\n\n    let s = row.Split('\\t')\n    GetElaboratedFeedback s.[0] s.[1] s.[2] config\n       \n// ISSUES WITH THIS BLOWING UP CUDA WHEN CALLED FROM IJSKERNEL\n// [<Emit(\"async function doSleep() { await new Promise(res => setTimeout(res, $0)); }\")>]\n// let emitSleep ( milliseconds : int) = jsNative\n// [<Emit(\"doSleep()\")>]\n// let doSleep () = jsNative\n// /// Currently specific to /z/aolney/research_projects/mofacts/analysis/2020-01-13-error-analysis-for-content-generation/termConfusionCountNoQuotes.tsv\n// let BatchElaboratedFeedback( multiLineTabDelimitedText : string ) ( condition : BatchCondition )=\n//     promise {\n//         match condition with\n//         | TermOnly -> \n//             let config = Some <| { UseCloze = false; UseDefinitions = true; ElasticDocsContainBothKeys = true; MaxElasticDocs = 3; UseAnswerCoreferenceFilter = true ; SyntheticQuestion = RelationshipQuestion}\n//             let rows = multiLineTabDelimitedText.Split('\\n') |> Array.skip 1 |> Array.take 20 //DEBUG TAKE\n\n\n//             // let! r1 = \n//             //     promise {\n//             //         let feedbacks = new ResizeArray<JS.Promise<Result<ElaboratedFeedback,FetchError>>>()\n//             //         for r in rows do\n//             //             let s = r.Split('\\t')\n//             //             feedbacks.Add(GetElaboratedFeedback s.[0] s.[1] \"\" config)\n//             //             let timeout = 30\n//             //             printfn \"sleeping for %A\" timeout\n//             //             do! Promise.sleep (1000 * timeout) // pad sleep to avoid CUDA OOM\n//             //         return feedbacks |> Promise.all;\n//             //     } \n//             // let! results = r1 \n            \n//             // This works, but I can't insert a sleep \n//             let timeout = 30\n//             emitSleep(1000 * timeout) // pad sleep to avoid CUDA OOM\n                  \n//             let! results = \n//                 rows \n//                 |> Seq.map( fun r -> \n//                     let s = r.Split('\\t')\n//                     doSleep()\n//                     GetElaboratedFeedback s.[0] s.[1] \"\" config;\n//                     )\n//                 |> Promise.all\n                \n\n//             let whitespaceRegex = System.Text.RegularExpressions.Regex(\"\\s+\")\n//             if allOK <| results  then\n//                 let newCols = \n//                     results\n//                     |> resultsToType\n//                     |> Array.map ( fun ef ->  \n//                         let json = whitespaceRegex.Replace( toJson <| ef, \" \")\n//                         ef.ElaboratedFeedback + \"|\" + json)\n                \n//                 let outputBody = \n//                     Array.zip rows newCols\n//                     |> Array.map( fun (r,nc) -> r.Replace(\"\\t\",\"|\") + \"|\" + nc)\n//                     |> String.concat \"\\n\"\n\n//                 let outputHeader = \"term1|term2|count|def1|def2|feedback|json\\n\"\n//                 return Ok(outputHeader + outputBody)\n\n//             else\n//                 let errorPayload = ( results |> resultsToError |> Array.map (sprintf \" error: %A\")  )\n//                 return Error(errorPayload |> String.concat \"\\n\")\n//     }","module LemmInflect\n// Implements https://lemminflect.readthedocs.io/en/latest/inflections/\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json \nopen Thoth.Fetch\n\n//for node compatibility\nimportSideEffects \"isomorphic-fetch\"\n\n[<StringEnum>]\ntype UPOS = \n    /// adjective\n    | [<CompiledName(\"ADJ\")>] ADJ  \n    /// adposition\n    | [<CompiledName(\"ADP\")>] ADP \n    /// adverb \n    | [<CompiledName(\"ADV\")>] ADV  \n    /// auxiliary\n    | [<CompiledName(\"AUX\")>] AUX  \n    /// coordinating conjunction\n    | [<CompiledName(\"CCONJ\")>] CCONJ \n    /// determiner\n    | [<CompiledName(\"DET\")>] DET  \n    /// interjection\n    | [<CompiledName(\"INTJ\")>] INTJ \n    /// noun \n    | [<CompiledName(\"NOUN\")>] NOUN  \n    /// numeral\n    | [<CompiledName(\"NUM\")>] NUM  \n    /// particle\n    | [<CompiledName(\"PART\")>] PART \n    /// pronoun \n    | [<CompiledName(\"PRON\")>] PRON  \n    /// proper noun\n    | [<CompiledName(\"PROPN\")>] PROPN  \n    /// punctuation\n    | [<CompiledName(\"PUNCT\")>] PUNCT  \n    /// subordinating conjunction\n    | [<CompiledName(\"SCONJ\")>] SCONJ  \n    /// symbol\n    | [<CompiledName(\"SYM\")>] SYM  \n    /// verb\n    | [<CompiledName(\"VERB\")>] VERB  \n    /// other\n    | [<CompiledName(\"X\")>] X  \n\n[<StringEnum>]\ntype PennPOS =\n    ///Coordinating conjunction\n    | [<CompiledName(\"CC\")>] CC \n    ///Cardinal number\n    | [<CompiledName(\"CD\")>] CD \n    ///Determiner\n    | [<CompiledName(\"DT\")>] DT \n    ///Existential there\n    | [<CompiledName(\"EX\")>] EX \n    ///Foreign word\n    | [<CompiledName(\"FW\")>] FW \n    ///Preposition or subordinating conjunction\n    | [<CompiledName(\"IN\")>] IN \n    ///Adjective\n    | [<CompiledName(\"JJ\")>] JJ \n    ///Adjective, comparative\n    | [<CompiledName(\"JJR\")>] JJR \n    ///Adjective, superlative\n    | [<CompiledName(\"JJS\")>] JJS \n    ///List item marker\n    | [<CompiledName(\"LS\")>] LS \n    ///Modal\n    | [<CompiledName(\"MD\")>] MD \n    ///Noun, singular or mass\n    | [<CompiledName(\"NN\")>] NN \n    ///Noun, plural\n    | [<CompiledName(\"NNS\")>] NNS \n    ///Proper noun, singular\n    | [<CompiledName(\"NNP\")>] NNP \n    ///Proper noun, plural\n    | [<CompiledName(\"NNPS\")>] NNPS \n    ///Predeterminer\n    | [<CompiledName(\"PDT\")>] PDT \n    ///Possessive ending\n    | [<CompiledName(\"POS\")>] POS \n    ///Personal pronoun\n    | [<CompiledName(\"PRP\")>] PRP \n    ///Possessive pronoun\n    | [<CompiledName(\"PRP$\")>] PRPdollar\n    ///Adverb\n    | [<CompiledName(\"RB\")>] RB \n    ///Adverb, comparative\n    | [<CompiledName(\"RBR\")>] RBR \n    ///Adverb, superlative\n    | [<CompiledName(\"RBS\")>] RBS \n    ///Particle\n    | [<CompiledName(\"RP\")>] RP \n    ///Symbol\n    | [<CompiledName(\"SYM\")>] SYM \n    ///to\n    | [<CompiledName(\"TO\")>] TO \n    ///Interjection\n    | [<CompiledName(\"UH\")>] UH \n    ///Verb, base form\n    | [<CompiledName(\"VB\")>] VB \n    ///Verb, past tense\n    | [<CompiledName(\"VBD\")>] VBD \n    ///Verb, gerund or present participle\n    | [<CompiledName(\"VBG\")>] VBG \n    ///Verb, past participle\n    | [<CompiledName(\"VBN\")>] VBN \n    ///Verb, non-3rd person singular present\n    | [<CompiledName(\"VBP\")>] VBP \n    ///Verb, 3rd person singular present\n    | [<CompiledName(\"VBZ\")>] VBZ \n    ///Wh-determiner\n    | [<CompiledName(\"WDT\")>] WDT \n    ///Wh-pronoun\n    | [<CompiledName(\"WP\")>] WP \n    ///Possessive wh-pronoun\n    | [<CompiledName(\"WP$\")>] WPdollar\n    ///Wh-adverb \n    | [<CompiledName(\"WRB\")>] WRB \n\nlet lemmInflectEndpoint = \"https://lemminflect.olney.ai/api/\"\n\n// NOTE: sometimes when we use anonymous records in the requests, they are rendered as empty payloads later, so we manually specify all requests\ntype LemmaRequest = { word : string ; upos : UPOS } \ntype LemmaOovRequest = { word : string ; upos : UPOS ; lemmatize_oov : bool }\ntype TagRequest = { tag : PennPOS } \ntype InflectionOovRequest = { lemma : string ; tag : PennPOS ; inflect_oov : bool } \ntype InflectionRequest = { lemma : string ; upos : UPOS } \n/// This methods aggregates getAllLemmas and getAllLemmasOOV. \n/// It first tries to find the lemma using the dictionary based lookup. \n/// If no forms are available, it then tries to find the lemma using the rules system. \n/// If a Penn Tag is available, it is best practice to first call isTagBaseForm (below), \n/// and only call this function if that is False. \n/// Doing this will eliminate potentials errors from lemmatizing a word already in lemma form.\n/// Arguments\n/// word: word to lemmatize\n/// upos: Universal Dependencies part of speech the return is limited to\n/// lemmatize_oov: Allow the method to use the rules based lemmatizer for words not in the dictionary\nlet getLemma(word: string)(upos :UPOS)(lemmatize_oov : bool) : JS.Promise<Result<string[],FetchError>> =\n    promise {\n        // return! Fetch.tryPost( lemmInflectEndpoint + \"getLemma\", {| word=word; upos=upos; lemmatize_oov = lemmatize_oov  |}, caseStrategy = SnakeCase)\n        return! Fetch.tryPost( lemmInflectEndpoint + \"getLemma\", { word=word; upos=upos; lemmatize_oov = lemmatize_oov  }, caseStrategy = SnakeCase)\n    }\nlet testGetLemma(word: string) = getLemma word UPOS.NOUN true\n\n/// Returns lemmas for the given word. \n/// The format of the return is a dictionary where each key is the upos tag \n/// and the value is a tuple of possible spellings.\n/// Arguments\n/// word: word to lemmatize\n/// upos: Universal Dependencies part of speech tag the returned values are limited to\nlet getAllLemmas(word: string)(upos :UPOS) : JS.Promise<Result<Map<UPOS,string[]>,FetchError>> =\n    promise {\n        return! Fetch.tryPost( lemmInflectEndpoint + \"getAllLemmas\", { word=word; upos=upos }, caseStrategy = SnakeCase)\n    }\n/// Similar to getAllLemmas except that the rules system is used for lemmatization, instead of the dictionary. The return format is the same as well.\n/// Arguments\n/// word: word to lemmatize\n/// upos: Universal Dependencies part of speech tag the returned values are limited to\nlet getAllLemmasOOV(word: string)(upos :UPOS) : JS.Promise<Result<Map<UPOS,string[]>,FetchError>> =\n    promise {\n        return! Fetch.tryPost( lemmInflectEndpoint + \"getAllLemmasOOV\", { word=word; upos=upos }, caseStrategy = SnakeCase)\n    }\n/// Returns True or False if the Penn Tag is a lemma form. This is useful since lemmatizing a lemma can lead to errors. The upos tags used in the above methods don't have enough information to determine this, but the Penn tags do.\n/// Arguments\n/// tag: Penn Treebank tag\nlet isTagBaseForm(tag: PennPOS) : JS.Promise<Result<bool,FetchError>> =\n    promise {\n        return! Fetch.tryPost( lemmInflectEndpoint + \"isTagBaseForm\", { tag=tag }, caseStrategy = SnakeCase)\n    }\n/// The method returns the inflection for the given lemma based on the PennTreebank tag. \n/// It first calls getAllInflections and if none were found, calls getAllInflectionsOOV. \n/// The flag allows the user to disable the rules based inflections. \n/// The return from the method is a tuple of different spellings for the inflection.\n/// Arguments\n/// lemma: the word to inflect\n/// tag: the Penn-Treebank tag\n/// inflect_oov: if False the rules sytem will not be used.\nlet getInflection(lemma: string)(tag :PennPOS)(inflect_oov : bool) : JS.Promise<Result<string[],FetchError>> =\n    promise {\n        // return! Fetch.tryPost( lemmInflectEndpoint + \"getInflection\", {| lemma=lemma; tag=tag; inflect_oov = inflect_oov  |}, caseStrategy = SnakeCase)\n        return! Fetch.tryPost( lemmInflectEndpoint + \"getInflection\", { lemma=lemma; tag=tag; inflect_oov = inflect_oov  }, caseStrategy = SnakeCase)\n    }\n\nlet testGetInflection(lemma: string) = getInflection lemma PennPOS.NNS true\n\n/// This method does a dictionary lookup of the word and returns all lemmas. \n/// Optionally, the upos tag may be used to limit the returned values to a specific part-of-speech. \n/// The return value is a dictionary where the key is the Penn Treebank tag \n/// and the value is a tuple of spellings for the inflection.\n/// Arguments\n/// lemma: the word to inflect\n/// upos: Universal Dependencies part of speech tag the returned values are limited to\nlet getAllInflections(lemma: string)(upos :UPOS) : JS.Promise<Result<Map<PennPOS,string[]>,FetchError>> =\n    promise {\n        return! Fetch.tryPost( lemmInflectEndpoint + \"getAllInflections\", { lemma=lemma; upos=upos }, caseStrategy = SnakeCase)\n    }\n/// Similary to getAllInflections, but uses the rules system to inflect words.\n/// Arguments\n/// lemma: the word to inflect\n/// upos: Universal Dependencies part of speech tag the returned values are limited to\nlet getAllInflectionsOOV(lemma: string)(upos :UPOS) : JS.Promise<Result<Map<PennPOS,string[]>,FetchError>> =\n    promise {\n        return! Fetch.tryPost( lemmInflectEndpoint + \"getAllInflectionsOOV\", { lemma=lemma; upos=upos }, caseStrategy = SnakeCase)\n    }","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Container =\n\n    type Option =\n        /// Add `is-fluid` class\n        | [<CompiledName(\"is-fluid\")>] IsFluid\n        /// Add `is-widescreen` class\n        | [<CompiledName(\"is-widescreen\")>] IsWideScreen\n        /// Add `is-fullhd` class\n        | [<CompiledName(\"is-fullhd\")>] IsFullHD\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"container\"></div>\n    let container (options: Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsFluid\n            | IsWideScreen\n            | IsFullHD -> result.AddCaseName option\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"container\").ToReactElement(div, children)\n","module SpellingCorrector\n\n// from http://www.fssnip.net/6j/title/Norvigs-Spelling-Corrector\n// Norvig's Spelling Corrector: http://norvig.com/spell-correct.html\nopen System.IO open System.Text.RegularExpressions\n\nlet edits1 (word : string) = \n    let splits = [for i in 0 .. word.Length do yield (word.[0..i-1], word.[i..])]\n    let deletes = [for a, b in splits do if b <> \"\" then yield a + b.[1..]]\n    let transposes = [for a, b in splits do if b.Length > 1 then yield a + string b.[1] + string b.[0] + b.[2..]]\n    let replaces = [for a, b in splits do for c in 'a'..'z' do if b <> \"\" then yield a + string c + b.[1..]]\n    let inserts = [for a, b in splits do for c in 'a'..'z' do yield a + string c + b]\n    deletes @ transposes @ replaces @ inserts |> Set.ofList\n\nlet mutable NWORDS = Map.empty\n\n/// Call to initialize the spelling corrector, passing in unstructured text\nlet Initialize ( text : string) =\n    try\n        NWORDS <-  \n            text |> (Regex \"[a-zA-Z]+\").Matches |> Seq.cast \n            |> Seq.map (fun (m:Match) -> m.Value.ToLower()) |> Seq.countBy id |> Map.ofSeq\n        promise{ return Ok( null ) }\n    with\n    | e -> promise{ return Error( e.Message ) }\n    \n/// This function should only be called by the test harness GUI. It wraps Initialize to match the test harness API\n// let HarnessInitialize ( textOption : string option ) ( _ : string) =\n//     promise {\n//         match textOption with\n//         | Some(text) -> \n//             text |> Initialize\n//             return \"ok\", \"{}\"\n//         | None -> return \"error\", \"\"\"{\"message\":\"missing raw text file defining correctly spelled words\"}\"\"\"\n//     }\n\nlet knownEdits2 word = [for e1 in edits1(word) do for e2 in edits1(e1) do if Map.containsKey e2 NWORDS then yield e2] |> Set.ofList\nlet known words = [for w in words do if Map.containsKey w NWORDS then yield w] |> Set.ofList\n\nlet (<||>) (first : Lazy<_>) (second : Lazy<_>) : Lazy<_> = lazy(if Set.isEmpty first.Value then second.Value else first.Value)\n\n/// YOU MUST INITIALIZE NWORDS BEFORE CALLLING THIS FUNCTION (InitializeNWORDS)\n/// Corrects a word using the following rules\n/// The original word, if it is known; otherwise\n/// The list of known words at edit distance one away, if there are any; otherwise\n/// The list of known words at edit distance two away, if there are any; otherwise\n/// The original word, even though it is not known. \nlet CorrectSpelling word = \n    (lazy known([word]) <||> lazy known(edits1(word)) <||> lazy knownEdits2(word) <||> lazy Set.singleton word).Value \n    |> Seq.sortBy (fun w -> -NWORDS.[w]) |> Seq.head\n\n// Example\n// correct \"speling\"","module TutorialDialogue\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json \nopen Thoth.Fetch\nopen AllenNLP\nopen QuestionGenerator\n\n\n/// Stateless types do not require tracking across turns\n/// Questions are the primary stateful type \n[<StringEnum>]\ntype StatelessDialogueMoveType =\n    | ElaborationMarker\n    | ShiftMarker\n    | PositiveFeedback\n    | NeutralPositiveFeedback\n    | NeutralFeedback\n    | NeutralNegativeFeedback\n    | NegativeFeedback\n    | Elaboration\n\nlet dialogueBags =\n    [\n        (ElaborationMarker, [ \n            \"Remember that\"; \n            \"It's important to remember that\";  \n            \"It is significant that\";\n            \"We've established that\"\n            ])\n        (ShiftMarker, [\n            \"Moving on.\"; \n            \"Let's move on.\";\n            \"Let's keep going.\";\n            \"Let's continue.\";\n        ])\n        (PositiveFeedback, [\n            \"Yes.\";\n            \"Good.\";\n            \"Yes!\";\n            \"Yay!\";\n            \"Wow!\";\n            \"Right.\";\n            \"Cool.\";\n            \"Okay.\";\n            \"Good!\";\n            \"Yeah!\";\n            \"Great!\";\n            \"Right!\";\n            \"Sweet!\";\n            \"Super!\";\n            \"Bingo!\";\n            \"Perfect!\";\n            \"Ok good.\";\n            \"Got it.\";\n            \"Correct.\";\n            \"Awesome!\";\n            \"Exactly!\";\n            \"Ok, good.\";\n            \"Good job!\";\n            \"Very good!\";\n            \"Excellent.\";\n            \"That's it.\";\n            \"Good call.\";\n            \"Okay good.\";\n            \"Yep, good.\";\n            \"That's it!\";\n            \"Ok, super!\";\n            \"Yes siree.\";\n            \"Absolutely.\";\n            \"There we go.\";\n            \"That's good.\";\n            \"Super duper!\";\n            \"That's right.\";\n            \"You're right.\";\n            \"Yeah exactly.\";\n            \"There you go!\";\n            \"Yeah, awesome!\";\n            \"Exactly, yeah.\";\n            \"Good, awesome.\";\n            \"Perfect. good.\";\n            \"Ok, very good.\";\n            \"Alright, cool!\";\n            \"That's perfect.\";\n            \"That's awesome!\";\n            \"Alright, sweet.\";\n            \"Good! good job!\";\n            \"That's correct.\";\n            \"You're correct.\";\n            \"Right, exactly.\";\n            \"Yep, excellent.\";\n            \"That's terrific.\";\n            \"Good, very good.\";\n            \"Good, that's it.\";\n            \"That was perfect.\";\n            \"Absolutely right.\";\n            \"Good, you got it.\";\n            \"That is fantastic.\";\n            \"Yes, that's right.\";\n            \"Yeah, you're right.\";\n            \"There you go, you got it.\"\n        ])\n        (NeutralPositiveFeedback, [\n            \"Close.\";\n            \"Sort of.\";\n            \"That's close.\";\n            \"Almost.\";\n            \"Kind of.\"\n        ])\n        (NeutralFeedback, [\n            \"Oh. hmm.\";\n            \"Um.\";\n            \"Hmm.\";\n            \"Huh.\";\n            \"Umm.\";\n            \"Well. um\";\n        ])\n        (NeutralNegativeFeedback, [\n            \"Not quite.\";\n            \"Not exactly.\";\n            \"Not really.\";\n        ])\n        (NegativeFeedback, [\n            \"No.\";\n            \"Nope.\";\n            \"Oh, no.\";\n            \"Uh, no.\";\n            \"Well, no.\";\n            \"Oh, no.\";\n            \"Not good.\";\n            \"Well, no.\";\n            \"Um, nope.\";\n            \"Hmm, nope.\";\n            \"Actually no.\";\n            \"That's not it.\";\n            \"No, that's not it.\";\n        ])\n    ] |> Map.ofList\nlet random = System.Random()\nlet getRandomMove (dm : StatelessDialogueMoveType) = dialogueBags.[dm].[random.Next(dialogueBags.[dm].Length-1)]\n\n/// A wrapper of text and type, mostly for logging purposes\ntype DialogueMove =\n    {\n        Text : string\n        Type : StatelessDialogueMoveType\n    } with\n    static member GetRandom( aType : StatelessDialogueMoveType ) = { Text = aType |> getRandomMove; Type = aType }\n    static member Create( text : string, aType : StatelessDialogueMoveType ) = { Text = text; Type = aType }\n\ntype DialogueState =\n    {\n        ///The cloze item presented, e.g. \"Water is _____\"\n        ClozeItem:string\n        ///Answer to the cloze item, e.g. \"wet\"\n        ClozeAnswer:string\n        ///Questions from QuestionGenerator\n        Questions: Question[] option\n        ///The question we just asked the student that they responded to with StudentAnswer\n        LastQuestion : Question option\n        ///The student answer to the LastQuestion\n        LastStudentAnswer:string option\n        ///The feedback in response to the LAST question/answer, which we are saying now\n        CurrentFeedback : DialogueMove option\n        //The elaborated feedback we are putting to the student now\n        CurrentElaboration : DialogueMove[] option\n        ///The question we are asking the student now\n        CurrentQuestion : Question option\n        ///What the client should display now\n        Display : string option\n        ///Is the dialogue finished\n        Finished : bool option\n    } with\n    static member Initialize( clozeItem )( clozeAnswer) = { ClozeItem = clozeItem; ClozeAnswer = clozeAnswer; Questions = None; LastQuestion = None; LastStudentAnswer = None; CurrentFeedback = None; CurrentElaboration = None; CurrentQuestion = None; Display = None; Finished = None }\n    // static member InitializeTest() = DialogueState.Initialize \"The supraspinatus is located in the depression above the spine of the scapula on its _______ _______.\" \"posterior surface\"\n    // static member InitializeTest() = DialogueState.Initialize \"Human anatomy and physiology are the studies of the _______ _______ and how it works.\" \"human body\"\n    // static member InitializeTest() = DialogueState.Initialize \"\"\"Cells are specialized to take on specific and \"necessary responsibilities\", and together they maintain an environment within _____ _____ in which they can all live.\"\"\" \"the body\"\n    // static member InitializeTest() = DialogueState.Initialize \"\"\"Parts of the axial portion of the body can be described using terms similar to the names of the __________ within them.\"\"\" \"cavities\"\n    static member InitializeTest() = DialogueState.Initialize \"\"\"The interstitial fluid, which bathes cells in the body, is the environment to which those cells are most directly exposed, but the composition of the interstitial fluid is in equilibrium with the composition of the blood plasma, so both contribute to the ______ ______\"\"\" \"internal environment\"\n\n\n// BEHAVIOR IN MOFACTS AS OF 1/20/21\n// - student gets item wrong\n// System: \"Incorrect, the correct answer is <correct answer>\".\n// System does a transition statement:\n// [\n// \"That wasn’t right, so to help you build the knowledge let’s chat about it\n// for a little.\",\n// \"That wasn’t the answer we are looking for. To help you construct the\n// understanding, let’s have a short discussion.\",\n// \"Sorry, but that wasn’t quite right. Let’s talk through this item.\",\n// \"Incorrect. Lets help you build that knowledge with a brief discussion.\",\n// \"The right answer is different. To get you started learning it, let’s chat.\"\n// ,\n// \"Your answer was incorrect. Let’s talk about this some more.\",\n// \"Not quite. I’m going to ask you some follow up questions.\"\n// ]\n// System uses GetDialogue to generate the remaining tutorial dialogue\n\n/// Given a dialogue state, generate a new dialogue state. This is meant to be called repeatedly until Finished is false.\nlet GetDialogue (state:DialogueState) =\n    promise{\n        //Accumulate errors\n        let errors = ResizeArray<obj>()\n\n        // let! saOption = \n        //     \"hi\" |> GetNLP None\n        // sa |> GetQuestions\n\n        // let resultsToType (resultsArr : Result<'t,'e>[] )  = resultsArr |> Array.choose( fun r -> match r with | Ok(r) -> Some(r) | Error(_) -> None ) \n        \n        //The cloze in complete sentence form\n        let text = System.Text.RegularExpressions.Regex.Replace(state.ClozeItem, \"(_ _|_)+\", state.ClozeAnswer) //multi word cloze requires _ _ first\n \n        //To make promises cleaner, pull them all here; can't use pattern matching without nested promises\n        //Prepare for question generation by getting NLP; doing a no-op if not needed (TODO make cleaner?)\n        let! daResult = \n            if state.Questions.IsNone then \n                text |> GetNLP None \n            else \n                DocumentAnnotation.CreateEmpty() |> Promisify\n        //Assess student answers, doing a no-op if not needed (TODO make cleaner?)\n        let! teResult = \n            if state.LastQuestion.IsSome && state.LastStudentAnswer.IsSome then \n                GetTextualEntailment state.LastQuestion.Value.Answer state.LastStudentAnswer.Value\n            else\n                Entailment.CreateEmpty() |> Promisify\n\n        //convenience functions for unwrapping/mapping results\n        let isOK ( r : Result<'t,'e> ) = match r with | Ok(r) -> true | Error(e) -> false\n        let resultToTypeOption (r : Result<'t,'e> )  = match r with | Ok(r) -> Some(r) | Error(_) -> None \n        let resultToErrorOption (r : Result<'t,'e> )  = match r with | Ok(r) -> None | Error(e) -> Some(e)\n\n        //if no errors in service calls\n        if daResult |> isOK && teResult |> isOK then\n\n            //unwrap results to options\n            let daOption = daResult |> resultToTypeOption\n            let teOption = teResult |> resultToTypeOption\n\n            //Prepare to accumulate text to display\n            let display = ResizeArray<string>()\n\n            //Generate questions if needed\n            let questions = \n                match state.Questions, daOption with\n                | Some(q), _ -> q\n                | None, Some(da) -> da.sentences |> Array.head |> GetQuotedQuestions state.ClozeAnswer\n                | _,_ -> Array.empty //this is logically impossible\n\n            //Select hint, prompt, or elaboration depending on last question\n            //remove question from available questions so it doesn't get selected again\n            let currentQuestionOption,newQuestions =\n                //TODO add more sophisticated selection logic\n                let hintOption = questions |> Array.tryFind(fun q -> q.QuestionType = Hint )\n                let prompts = questions |> Array.filter(fun q -> q.QuestionType = Prompt )\n                match state.LastQuestion, hintOption, prompts with\n                //Initial move, we have a hint, so do hint\n                | None, Some(h), _ -> h |> Some, questions |> Array.filter( fun q -> q <> h )\n                //Last was hint, we have a prompt, so do prompt\n                | Some(lastQ),_,ps when lastQ.QuestionType = Hint && ps.Length > 0 -> \n                    // Score available prompts according to how much their focus matches the answer of the last question, so giving a clue\n                    let lastSet = lastQ.Answer.Split( ' ' ) |> Set.ofArray\n                    let p = ps |> Array.maxBy( fun ap ->\n                        let candidateSet = ap.Focus.Split( ' ' ) |> Set.ofArray\n                        let intersection = Set.intersect candidateSet lastSet\n                        intersection.Count\n                    )\n                    p |> Some, questions |> Array.filter( fun q -> q <> p )\n                //Any other case (e.g. last question was prompt or we are out of questions) set current question to None\n                | _ -> None, questions\n\n            //Provide feedback if there is someting to assess\n            let feedbackOption  = \n                match state.LastQuestion,state.LastStudentAnswer,teOption with\n                | Some( lq ),Some (sa),Some(te) ->\n                    //feedback polarity determined by whether entailment is > contradiction\n                    let polarity = if te.label_probs.[0] > te.label_probs.[1] then 1 else -1\n                    //feedback strength determined by amount of uncertainty (3 levels) NOTE: these are arbitrary thresholds\n                    let strength = if te.label_probs.[2] > 0.66 then 1 elif te.label_probs.[2] > 0.33 then 2 else 3\n                    let feedback =\n                        //Neutral on empty answers\n                        if sa.Trim() = \"\" then\n                            DialogueMove.GetRandom(  NeutralFeedback )\n                        //Use TE on all other answers\n                        else \n                            match polarity,strength with\n                            | 1,2 -> DialogueMove.GetRandom(  NeutralPositiveFeedback )\n                            | 1,3 -> DialogueMove.GetRandom(  PositiveFeedback )\n                            | -1,2 -> DialogueMove.GetRandom(  NeutralNegativeFeedback )\n                            | -1,3 -> DialogueMove.GetRandom(  NegativeFeedback )\n                            | _,_ -> DialogueMove.GetRandom(  NeutralFeedback )\n                    //to display feedback\n                    display.Add( feedback.Text )\n                    //return structured feedback\n                    feedback |> Some\n                | _ -> None\n\n            // Separate into function to remove redundancy in branches; might be a ?better? way using active patterns: https://stackoverflow.com/questions/31710260/the-two-sides-of-this-or-pattern-bind-different-sets-of-variables\n            let makeElaboration() =\n                let elaboration = [| DialogueMove.GetRandom( ElaborationMarker) ; DialogueMove.Create( text, Elaboration ); DialogueMove.GetRandom(ShiftMarker) |] \n                //to display elaboration\n                display.AddRange( elaboration |> Array.map( fun e -> e.Text ))\n                //return structured elaboration\n                elaboration\n\n            //Provide any feedback elaborations if needed (currently only if we have ended our question sequence)\n            //Case 1: Hint received positive feedback, so complete\n            //Case 2: We have tried a hint and a prompt, so bail\n            let elaborationOption =\n                match currentQuestionOption,feedbackOption with\n                | _ , Some(x) when x.Type = PositiveFeedback -> makeElaboration() |> Some\n                | None,_ -> makeElaboration() |> Some\n                | _ -> None\n\n            //Add question to display, but only if we don't have an elaboration ; TODO: add goal semantics to avoid structural rules like this\n            match currentQuestionOption,elaborationOption with\n            | Some( q ), None -> display.Add( q.Text )\n            | _ -> ()\n\n            //If we have done an elaboration, we have finished\n            let finishedOption = \n                match elaborationOption with\n                | Some(x) -> true |> Some\n                | None -> false |> Some\n\n            // You can't have dialogue without questions (never was a question and isn't one now)\n            // TODO: can we catch failure to generate questions earlier?\n            if state.LastQuestion.IsNone && currentQuestionOption.IsNone then\n                return Error(\"Aborting dialogue: unable to generate questions\")\n            else\n                //TODO add wrapping for logging purposes\n                return Ok( \n                    { state with \n                        Questions=newQuestions |> Some; \n                        LastQuestion=currentQuestionOption; \n                        CurrentFeedback=feedbackOption;\n                        CurrentElaboration=elaborationOption;\n                        CurrentQuestion = currentQuestionOption;\n                        Display = display |> String.concat \" \" |> Some;\n                        Finished = finishedOption\n                    })\n        else\n             //collect all errors; avoid duplicates\n            let errorPayload = ResizeArray<string>()\n            errorPayload.AddRange( [ daResult ] |> List.choose resultToErrorOption |> List.map (sprintf \"document annotation error: %A\")  )\n            errorPayload.AddRange( [ teResult ] |> List.choose resultToErrorOption |> List.map (sprintf \"textual entailment error: %A\")  )\n            return Error(errorPayload |> String.concat \"\\n\") \n    }\n\n\n/// This function should only be called by the test harness GUI. It wraps GetDialogue to match the test harness API\nlet HarnessGetDialogue jsonState =\n    let state = jsonState |> ofJson<DialogueState>\n    GetDialogue state\n\n\n/// Get a DialogueState initialized by elaborated feedback.\n/// GetDialogue can then be called with this state.\nlet GetElaboratedDialogueState correctAnswer incorrectAnswer clozeItem =\n    promise {\n        // Spring 2021: we are only using cached elaborated feedback for performance issues\n        //NOTE: ideally we'd be working with an annotated object here (including coreferece) instead of raw text for performance reasons\n        let! efResult = CachedElaboratedFeedback.GenerateFeedback incorrectAnswer correctAnswer\n        match efResult with\n        | Ok(ef) ->\n            //remove correctness statement from ef\n            let cs = CachedElaboratedFeedback.correctnessStatement incorrectAnswer correctAnswer\n            // OPTION: use a JS sentence segmenter: https://www.npmjs.com/package/cldr-segmentation\n            let candidateSentences = ef.Feedback.Replace( cs, \"\").Split('.')\n\n            // Search for incorrect/correct answers in the elaborated feedback\n            let jointOption = candidateSentences |> Array.tryFind( fun s -> s.ToLower().Contains( incorrectAnswer.ToLower() ) && s.ToLower().Contains( correctAnswer.ToLower() ) )\n            let iaOption = candidateSentences |> Array.tryFind( fun s -> s.ToLower().Contains( incorrectAnswer.ToLower() ) )\n            let caOption = candidateSentences |> Array.tryFind( fun s -> s.ToLower().Contains( correctAnswer.ToLower() ) )\n\n            // Create a proxy for the cloze item/answer required by GetDialogue, starting with a sentence that contains both, \n            // backing off to incorrect answer, backing of to correct answer, backing off to cloze item\n            let pseudoCloze,pseudoClozeAnswer = \n                match jointOption,iaOption,caOption with\n                | Some(j), _, _ -> j + \".\", incorrectAnswer\n                | _, Some(i), _ -> i + \".\", incorrectAnswer\n                | _, _, Some(c) -> c + \".\", correctAnswer\n                | _ -> clozeItem, correctAnswer\n\n            return Ok( DialogueState.Initialize pseudoCloze pseudoClozeAnswer )\n\n        | Error(e) -> return Error(e)\n    }\n    \n\ntype HarnessElaboratedDialogueState =\n    { \n        CorrectAnswer : string\n        IncorrectAnswer : string\n        ClozeItem : string\n    }\n    static member InitializeTest() = { CorrectAnswer = \"cerebellum\" ; IncorrectAnswer = \"cerebrum\"; ClozeItem= \"Small amounts enter the central canal of the spinal cord, but most CSF circulates through the subarachnoid space of both the brain and the spinal cord by passing through openings in the wall of the fourth ventricle near the cerebellum .\"}\n  \nlet HarnessGetElaboratedDialogueState jsonState = \n    let state = jsonState |> ofJson<HarnessElaboratedDialogueState>\n    GetElaboratedDialogueState state.CorrectAnswer state.IncorrectAnswer state.ClozeItem","namespace Fulma\n\nopen Fable.React\nopen Fable.React.Props\n\nmodule Reflection =\n\n    open Microsoft.FSharp.Reflection\n    open System\n\n    let getCaseName (case : 'T) =\n#if FABLE_COMPILER\n        Fable.Core.Reflection.getCaseName case\n#else\n        // Get UnionCaseInfo value from the F# reflection tools\n        let (caseInfo, _args) = FSharpValue.GetUnionFields(case, typeof<'T>)\n        caseInfo.GetCustomAttributes()\n        |> Seq.tryPick (function\n                        | :? CompiledNameAttribute as att -> Some att.CompiledName\n                        | _ -> None)\n        |> Option.defaultWith (fun () -> caseInfo.Name)\n#endif\n\n    let getCaseTag (case : 'T) =\n#if FABLE_COMPILER\n        Fable.Core.Reflection.getCaseTag case\n#else\n        let (caseInfo, _args) = FSharpValue.GetUnionFields(case, typeof<'T>)\n        caseInfo.Tag\n#endif\n\n[<RequireQualifiedAccess>]\ntype Screen =\n    | All\n    | [<CompiledName(\"desktop\")>] Desktop\n    | [<CompiledName(\"tablet\")>] Tablet\n    | [<CompiledName(\"mobile\")>] Mobile\n    | [<CompiledName(\"widescreen\")>] WideScreen\n    | [<CompiledName(\"touch\")>] Touch\n    | [<CompiledName(\"fullhd\")>] FullHD\n\n    static member ToString (screen : Screen) =\n        match screen with\n        | All -> \"\"\n        | Desktop\n        | Tablet\n        | Mobile\n        | WideScreen\n        | Touch\n        | FullHD -> \"-\" + Reflection.getCaseName screen\n\n[<AutoOpen>]\nmodule Color =\n\n    type IColor =\n        | [<CompiledName(\"is-black\")>] IsBlack\n        | [<CompiledName(\"is-dark\")>] IsDark\n        | [<CompiledName(\"is-light\")>] IsLight\n        | [<CompiledName(\"is-white\")>] IsWhite\n        | [<CompiledName(\"is-primary\")>] IsPrimary\n        | [<CompiledName(\"is-info\")>] IsInfo\n        | [<CompiledName(\"is-success\")>] IsSuccess\n        | [<CompiledName(\"is-warning\")>] IsWarning\n        | [<CompiledName(\"is-danger\")>] IsDanger\n        | [<CompiledName(\"is-link\")>] IsLink\n        | [<CompiledName(\"is-black-bis\")>] IsBlackBis\n        | [<CompiledName(\"is-black-ter\")>] IsBlackTer\n        | [<CompiledName(\"is-grey-darker\")>] IsGreyDarker\n        | [<CompiledName(\"is-grey-dark\")>] IsGreyDark\n        | [<CompiledName(\"is-grey\")>] IsGrey\n        | [<CompiledName(\"is-grey-light\")>] IsGreyLight\n        | [<CompiledName(\"is-grey-lighter\")>] IsGreyLighter\n        | [<CompiledName(\"is-white-ter\")>] IsWhiteTer\n        | [<CompiledName(\"is-white-bis\")>] IsWhiteBis\n        /// Allow you to specify a custom color. The color will be prefixed by \"is-\"\n        | IsCustomColor of string\n        /// Allow you to specify a NoColor case.\n        | NoColor\n\n    let ofColor level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"is-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> Reflection.getCaseName level\n\n[<AutoOpen>]\nmodule Size =\n\n    type ISize =\n        | [<CompiledName(\"is-small\")>] IsSmall\n        | [<CompiledName(\"is-medium\")>] IsMedium\n        | [<CompiledName(\"is-large\")>] IsLarge\n\n    let inline ofSize size =\n        Reflection.getCaseName size\n\n[<RequireQualifiedAccess>]\nmodule TextSize =\n    type Option =\n        | Is1\n        | Is2\n        | Is3\n        | Is4\n        | Is5\n        | Is6\n        | Is7\n\n        static member ToString (x: Option) =\n            Reflection.getCaseTag x + 1 |> string\n\n    let inline generic screen size =\n        \"is-size-\" + Option.ToString size + Screen.ToString screen\n\n    let inline only screen size =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-size-\" + Option.ToString size + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-size-xxx-only`.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule TextAlignment =\n\n    type Option =\n        /// Add `has-text-centered`\n        | [<CompiledName(\"has-text-centered\")>] Centered\n        /// Add `has-text-justified`\n        | [<CompiledName(\"has-text-justified\")>] Justified\n        /// Add `has-text-left`\n        | [<CompiledName(\"has-text-left\")>] Left\n        /// Add `has-text-right`\n        | [<CompiledName(\"has-text-right\")>] Right\n\n        static member inline ToString opt =\n            Reflection.getCaseName opt\n\n    let inline generic screen alignment =\n        Option.ToString alignment + Screen.ToString screen\n\n    let inline only screen alignment =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            Option.ToString alignment + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-size-xxx-only`.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule TextWeight =\n\n    type Option =\n        /// Add `has-text-weight-light`\n        | [<CompiledName(\"has-text-weight-light\")>] Light\n        /// Add `has-text-weight-normal`\n        | [<CompiledName(\"has-text-weight-normal\")>] Normal\n        /// Add `has-text-weight-semibold`\n        | [<CompiledName(\"has-text-weight-semibold\")>] SemiBold\n        /// Add `has-text-weight-bold`\n        | [<CompiledName(\"has-text-weight-bold\")>] Bold\n        /// Add `has-text-weight-medium`\n        | [<CompiledName(\"has-text-weight-medium\")>] Medium\n\n    let inline internal ofOption opt =\n        Reflection.getCaseName opt\n\n[<RequireQualifiedAccess>]\nmodule TextTransform =\n\n    type Option =\n        /// Add `is-capitalized`\n        | [<CompiledName(\"is-capitalized\")>] Capitalized\n        /// Add `is-lowercase`\n        | [<CompiledName(\"is-lowercase\")>] LowerCase\n        /// Add `is-uppercase`\n        | [<CompiledName(\"is-uppercase\")>] UpperCase\n        /// Add `is-italic`\n        | [<CompiledName(\"is-italic\")>] Italic\n\n        static member inline toClass opt =\n            Reflection.getCaseName opt\n\n[<RequireQualifiedAccess>]\nmodule Display =\n\n    type Option =\n        | [<CompiledName(\"block\")>] Block\n        | [<CompiledName(\"flex\")>] Flex\n        | [<CompiledName(\"inline\")>] Inline\n        | [<CompiledName(\"inline-block\")>] InlineBlock\n        | [<CompiledName(\"inline-flex\")>] InlineFlex\n\n        static member inline toClass opt =\n            Reflection.getCaseName opt\n\n    let internal toDisplayClass screen display =\n        let display = Option.toClass display\n        let screen = Screen.ToString screen\n\n        \"is-\" + display + screen\n\n    let internal toDisplayOnlyClass screen display =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            let display = Option.toClass display\n            let screen = Screen.ToString screen\n            \"is-\" + display + screen + \"-only\"\n\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support display only.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule Modifier =\n    let internal ofBackground level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"has-background-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> \"has-background-\" + (Reflection.getCaseName level).[3..]\n\n    let internal ofText level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"has-text-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> \"has-text-\" + (Reflection.getCaseName level).[3..]\n\n    let internal ofInvisible screen =\n        \"is-invisible\" + Screen.ToString screen\n\n    let internal ofHidden screen =\n        \"is-hidden\" + Screen.ToString screen\n\n    let internal ofInvisibleOnly screen =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-invisible\" + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-invisible-xxx-only`.\" + string x)\n            \"\"\n\n    let internal ofHiddenOnly screen =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-hidden\" + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-hidden-xxx-only`.\" + string x)\n            \"\"\n\n    type IModifier =\n        | BackgroundColor of IColor\n        | TextColor of IColor\n        | TextWeight of TextWeight.Option\n        | TextSize of Screen * TextSize.Option\n        | TextSizeOnly of Screen * TextSize.Option\n        | TextAlignment of Screen * TextAlignment.Option\n        | TextAlignmentOnly of Screen * TextAlignment.Option\n        | TextTransform of TextTransform.Option\n        | Display of Screen * Display.Option\n        | DisplayOnly of Screen * Display.Option\n        | [<CompiledName(\"is-clearfix\")>] IsClearfix\n        | [<CompiledName(\"is-pulled-left\")>] IsPulledLeft\n        | [<CompiledName(\"is-pulled-right\")>] IsPulledRight\n        | [<CompiledName(\"is-marginless\")>] IsMarginless\n        | [<CompiledName(\"is-paddingless\")>] IsPaddingless\n        | [<CompiledName(\"is-overlay\")>] IsOverlay\n        | [<CompiledName(\"is-clipped\")>] IsClipped\n        | [<CompiledName(\"is-radiusless\")>] IsRadiusless\n        | [<CompiledName(\"is-shadowless\")>] IsShadowless\n        | [<CompiledName(\"is-unselectable\")>] IsUnselectable\n        | [<CompiledName(\"is-relative\")>] IsRelative\n        | IsInvisible of Screen * bool\n        | IsHidden of Screen * bool\n        | IsInvisibleOnly of Screen * bool\n        | IsHiddenOnly of Screen * bool\n        | IsSrOnly\n        | IsScreenReaderOnly\n\n    let parseModifiers options =\n        let parseOptions result option =\n            match option with\n            | BackgroundColor color             -> (ofBackground color)::result\n            | TextColor color                   -> (ofText color)::result\n            | TextWeight textWeight             -> (TextWeight.ofOption textWeight)::result\n            | TextSize (screen, size)           -> (TextSize.generic screen size)::result\n            | TextSizeOnly (screen, size)       -> (TextSize.only screen size)::result\n            | TextAlignment (screen, size)      -> (TextAlignment.generic screen size)::result\n            | TextAlignmentOnly (screen, size)  -> (TextAlignment.only screen size)::result\n            | TextTransform transform           -> (TextTransform.Option.toClass transform)::result\n            | Display (screen, display)         -> (Display.toDisplayClass screen display)::result\n            | DisplayOnly (screen, display)     -> (Display.toDisplayOnlyClass screen display)::result\n            | IsInvisible (screen, b)           -> if b then (ofInvisible screen)::result else result\n            | IsInvisibleOnly (screen, b)       -> if b then (ofInvisibleOnly screen)::result else result\n            | IsHidden (screen, b)              -> if b then (ofHidden screen)::result else result\n            | IsHiddenOnly (screen, b)          -> if b then (ofHiddenOnly screen)::result else result\n            | IsSrOnly\n            | IsScreenReaderOnly -> \"is-sr-only\"::result\n            | IsClearfix\n            | IsPulledLeft\n            | IsPulledRight\n            | IsMarginless\n            | IsPaddingless\n            | IsOverlay\n            | IsClipped\n            | IsRadiusless\n            | IsShadowless\n            | IsUnselectable\n            | IsRelative -> (Reflection.getCaseName option)::result\n\n        options |> List.fold parseOptions []\n\n[<AutoOpen>]\nmodule Common =\n    type GenericOption =\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    type GenericOptions =\n        { Props : IHTMLProp list\n          Classes : string list\n          RemovedClasses : string list }\n\n        static member Empty =\n            { Props = []; Classes = []; RemovedClasses = [] }\n\n        static member Parse(options, parser, ?baseClass, ?baseProps) =\n            let result = options |> List.fold parser GenericOptions.Empty\n\n            let result =\n                match baseClass with\n                | Some baseClass -> result.AddClass(baseClass)\n                | None -> result\n\n            match baseProps with\n            | Some baseProps -> result.AddProps(baseProps)\n            | None -> result\n\n        member this.AddProp(prop : IHTMLProp) =\n            { this with Props = prop::this.Props }\n\n        member this.AddProps(props : IHTMLProp list) =\n            { this with Props = props@this.Props }\n\n        member this.AddClass(cl: string) =\n            { this with Classes = cl::this.Classes }\n\n        member this.RemoveClass(cl: string) =\n            { this with RemovedClasses = cl::this.RemovedClasses }\n\n        member this.AddCaseName(case: 'T) =\n            Reflection.getCaseName case |> this.AddClass\n\n        member this.AddModifiers(modifiers) =\n            { this with Classes = (modifiers |> Modifier.parseModifiers) @ this.Classes }\n\n        /// Conver to standard element\n        member this.ToReactElement(el : IHTMLProp list -> ReactElement list -> ReactElement, ?children): ReactElement =\n            let children = defaultArg children []\n            // TODO: Remove empty classes?\n            let classes =\n                this.Classes\n                |> List.filter (fun cls ->\n                    not (List.contains cls this.RemovedClasses)\n                )\n                |> String.concat \" \"\n                |> ClassName :> IHTMLProp\n            el (classes::this.Props) children\n\n        /// Convert to self closing element\n        member this.ToReactElement(el : IHTMLProp list -> ReactElement): ReactElement =\n            // TODO: Remove empty classes?\n            let classes =\n                this.Classes\n                |> List.filter (fun cls ->\n                    not (List.contains cls this.RemovedClasses)\n                )\n                |> String.concat \" \"\n                |> ClassName :> IHTMLProp\n            el (classes::this.Props)\n\n    let parseOptions (result : GenericOptions) option =\n        match option with\n        | Props props -> result.AddProps props\n        | CustomClass customClass -> result.AddClass customClass\n        | Modifiers modifiers -> result.AddModifiers modifiers\n\n    module Helpers =\n\n        [<System.Obsolete(\"Use GenericOptions.Parse. This build an abstraction layer usable by all the components and helps reduce the bundle size\")>]\n        let classes std (options : string option list) (booleans: (string * bool) list) =\n            let std = (std, options) ||> List.fold (fun complete option ->\n                match option with\n                | Some name -> complete + \" \" + name\n                | None -> complete )\n            (std, booleans) ||> List.fold (fun complete (name, flag) ->\n                if flag then complete + \" \" + name else complete)\n            |> ClassName :> IHTMLProp\n\n[<RequireQualifiedAccess>]\nmodule Text =\n    open Fable.React\n\n    let p (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(p, children)\n\n    let div (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(div, children)\n\n    let span (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(span, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Select =\n\n    type Option =\n        | Size of ISize\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>] IsFullWidth\n        /// Add `is-inline` class\n        | [<CompiledName(\"is-inline\")>] IsInline\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-focused` class if true\n        | [<CompiledName(\"is-focused\")>] IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>] IsActive of bool\n        /// Add `disabled` HTMLAttr if true\n        | Disabled of bool\n        | Color of IColor\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        ///Add `is-multiple` class\n        | [<CompiledName(\"is-multiple\")>] IsMultiple\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"select\"></div>\n    let select (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | Color color -> ofColor color |> result.AddClass\n            | IsFullWidth\n            | IsInline\n            | IsMultiple\n            | IsRounded -> result.AddCaseName option\n            | IsLoading state\n            | IsFocused state\n            | IsActive state\n            | Disabled state -> if state then result.AddCaseName option else result\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"select\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Content =\n\n    type Option =\n        | Size of ISize\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"content\"></div>\n    let content (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"content\").ToReactElement(div, children)\n\n    module Ol =\n\n        type Option =\n            | [<CompiledName(\"is-lower-roman\")>] IsLowerRoman\n            | [<CompiledName(\"is-upper-roman\")>] IsUpperRoman\n            | [<CompiledName(\"is-lower-alpha\")>] IsLowerAlpha\n            | [<CompiledName(\"is-upper-alpha\")>] IsUpperAlpha\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n            | Props of IHTMLProp list\n\n        /// Generate <ol></ol>\n        let ol (options : Option list) children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsLowerRoman\n                | IsUpperRoman\n                | IsLowerAlpha\n                | IsUpperAlpha -> result.AddCaseName option\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions).ToReactElement(ol, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Section =\n\n    type Option =\n        | Props of IHTMLProp list\n        | CustomClass of string\n        /// Add `is-medium` class\n        | [<CompiledName(\"is-medium\")>] IsMedium\n        /// Add `is-large` class\n        | [<CompiledName(\"is-large\")>] IsLarge\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <section class=\"section\"></section>\n    let section (options: Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsMedium\n            | IsLarge -> result.AddCaseName option\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"section\").ToReactElement(section, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Control =\n\n    type Option =\n        /// Add `has-icons-right` class\n        | [<CompiledName(\"has-icons-right\")>] HasIconRight\n        /// Add `has-icons-left` class\n        | [<CompiledName(\"has-icons-left\")>] HasIconLeft\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-expanded` class\n        | [<CompiledName(\"is-expanded\")>] IsExpanded\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    let internal controlView element options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | HasIconRight\n            | HasIconLeft\n            | IsExpanded -> result.AddCaseName option\n            | IsLoading state -> if state then result.AddCaseName option else result\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"control\").ToReactElement(element, children)\n\n    /// Generate <div class=\"control\"></div>\n    let div x y = controlView div x y\n    /// Generate <p class=\"control\"></p>\n    let p x y = controlView p x y\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Button =\n\n    type Option =\n        // Colors\n        | Color of IColor\n        | Size of ISize\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>] IsFullWidth\n        /// Add `is-link` class\n        | [<CompiledName(\"is-link\")>] IsLink\n        /// Add `is-outlined` class\n        | [<CompiledName(\"is-outlined\")>] IsOutlined\n        /// Add `is-inverted` class\n        | [<CompiledName(\"is-inverted\")>] IsInverted\n        /// Add `is-text` class\n        | [<CompiledName(\"is-text\")>] IsText\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        /// Add `is-expanded` class\n        | [<CompiledName(\"is-expanded\")>] IsExpanded\n        /// Add `is-hovered` class if true\n        | [<CompiledName(\"is-hovered\")>] IsHovered of bool\n        /// Add `is-focused` class if true\n        | [<CompiledName(\"is-focused\")>] IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>] IsActive of bool\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-static` class if true\n        | [<CompiledName(\"is-static\")>] IsStatic of bool\n        /// Add `is-light` class\n        | [<CompiledName(\"is-light\")>] IsLight\n        /// Set `disabled` HTMLAttr\n        | Disabled of bool\n        | Props of IHTMLProp list\n        | OnClick of (MouseEvent -> unit)\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    let internal btnView element (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Color color -> ofColor color |> result.AddClass\n            | Size size -> ofSize size |> result.AddClass\n            // Styles\n            | IsLink\n            | IsFullWidth\n            | IsOutlined\n            | IsInverted\n            | IsText\n            | IsRounded\n            | IsExpanded\n            | IsLight -> result.AddCaseName option\n            // States\n            | IsHovered state\n            | IsFocused state\n            | IsActive state\n            | IsLoading state\n            | IsStatic state -> if state then result.AddCaseName option else result\n            | Disabled isDisabled -> Fable.React.Props.Disabled isDisabled |> result.AddProp\n            | OnClick cb -> DOMAttr.OnClick cb |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"button\").ToReactElement(element, children)\n\n    /// Generate <button class=\"button\"></button>\n    let button options children = btnView button options children\n    /// Generate <span class=\"button\"></span>\n    let span options children = btnView span options children\n    /// Generate <a class=\"button\"></a>\n    let a options children = btnView a options children\n\n    module Input =\n        let internal btnInput typ options =\n            let hasProps =\n                options\n                |> List.exists (fun opts ->\n                    match opts with\n                    | Props _ -> true\n                    | _ -> false\n                )\n\n            if hasProps then\n                let newOptions =\n                    options\n                    |> List.map (fun opts ->\n                        match opts with\n                        | Props props -> Props ((Type typ :> IHTMLProp) ::props)\n                        | forward -> forward\n                    )\n                btnView (fun options _ -> input options) newOptions [ ]\n\n            else\n                btnView (fun options _ -> input options) ((Props [ Type typ ])::options) [ ]\n\n        /// Generate <input type=\"reset\" class=\"button\" />\n        let reset options = btnInput \"reset\" options\n        /// Generate <input type=\"submit\" class=\"button\" />\n        let submit options = btnInput \"submit\" options\n\n    module List =\n\n        type Option =\n            /// Add `has-addons` class\n            | [<CompiledName(\"has-addons\")>] HasAddons\n            /// Add `is-centered` class\n            | [<CompiledName(\"is-centered\")>] IsCentered\n            | [<CompiledName(\"is-right\")>] IsRight\n            /// Add `are-small` class\n            | [<CompiledName(\"are-small\")>] AreSmall\n            /// Add `are-medium` class\n            | [<CompiledName(\"are-medium\")>] AreMedium\n            /// Add `are-large` class\n            | [<CompiledName(\"are-large\")>] AreLarge\n            // | Size of ISize\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"buttons\"></div>\n    let list (options : List.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | List.HasAddons\n            | List.IsCentered\n            | List.IsRight\n            | List.AreSmall\n            | List.AreMedium\n            | List.AreLarge -> result.AddCaseName option\n            | List.Props props -> result.AddProps props\n            | List.CustomClass customClass -> result.AddClass customClass\n            | List.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"buttons\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule File =\n\n    type Option =\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Size of ISize\n        /// Add `is-focused` class if true\n        | [<CompiledName(\"is-focused\")>]IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>]IsActive of bool\n        /// Add `is-hovered` class if true\n        | [<CompiledName(\"is-hovered\")>]IsHovered of bool\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>]IsFullWidth\n        /// Add `is-centered` class\n        | [<CompiledName(\"is-centered\")>]IsCentered\n        /// Add `is-right` class\n        | [<CompiledName(\"is-right\")>]IsRight\n        /// Add `is-boxed` class\n        | [<CompiledName(\"is-boxed\")>]IsBoxed\n        /// Add `has-name` class\n        | [<CompiledName(\"has-name\")>]HasName\n        /// Add `is-empty` class if true\n        | [<CompiledName(\"is-empty\")>]IsEmpty of bool\n        | Color of IColor\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"file\"></div>\n    let file (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | IsFullWidth\n            | IsCentered\n            | IsRight\n            | IsBoxed\n            | HasName -> result.AddCaseName option\n            | Color color -> ofColor color |> result.AddClass\n            | IsFocused state\n            | IsActive state\n            | IsHovered state\n            | IsEmpty state -> if state then result.AddCaseName option else result\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"file\").ToReactElement(div, children)\n\n    /// Generate <span class=\"file-cta\"></span>\n    let cta (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-cta\").ToReactElement(span, children)\n\n    /// Generate <span class=\"file-name\"></span>\n    let name (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-name\").ToReactElement(span, children)\n\n    /// Generate <span class=\"file-icon\"></span>\n    let icon (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-icon\").ToReactElement(span, children)\n\n    /// Generate <label class=\"file-label\"></label>\n    let label (options : GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"file-label\").ToReactElement(label, children)\n\n    /// Generate <input type=\"file\" class=\"file-input\"/>\n    let input (options : GenericOption list) =\n        GenericOptions.Parse(options, parseOptions, \"file-input\", [Type \"file\" :> IHTMLProp]).ToReactElement(input)\n","namespace Fable.FontAwesome\n\nopen Fable.Core\nopen Fable.React\nopen Fable.React.Props\n\nmodule internal Helpers =\n\n    let classes std (options : string option list) (booleans: (string * bool) list) =\n        let std = (std, options) ||> List.fold (fun complete opt ->\n            match opt with Some name -> complete + \" \" + name | None -> complete)\n        (std, booleans) ||> List.fold (fun complete (name, flag) ->\n            if flag then complete + \" \" + name else complete)\n        |> ClassName :> IHTMLProp\n\n[<RequireQualifiedAccess>]\nmodule Fa =\n\n    module Classes =\n        module Size =\n            let [<Literal>] FaExtraSmall = \"fa-xs\"\n            let [<Literal>] FaSmall = \"fa-sm\"\n            let [<Literal>] FaLarge = \"fa-lg\"\n            let [<Literal>] Fa2x = \"fa-2x\"\n            let [<Literal>] Fa3x = \"fa-3x\"\n            let [<Literal>] Fa4x = \"fa-4x\"\n            let [<Literal>] Fa5x = \"fa-5x\"\n            let [<Literal>] Fa6x = \"fa-6x\"\n            let [<Literal>] Fa7x = \"fa-7x\"\n            let [<Literal>] Fa8x = \"fa-8x\"\n            let [<Literal>] Fa9x = \"fa-9x\"\n            let [<Literal>] Fa10 = \"fa-10x\"\n\n        module Style =\n            let [<Literal>] FixedWidth = \"fa-fw\"\n            let [<Literal>] IsLi = \"fa-li\"\n            let [<Literal>] Border = \"fa-border\"\n            let [<Literal>] Inverse = \"fa-inverse\"\n\n        module Rotations =\n            let [<Literal>] Rotate90 = \"fa-rotate-90\"\n            let [<Literal>] Rotate180 = \"fa-rotate-180\"\n            let [<Literal>] Rotate270 = \"fa-rotate-270\"\n\n        module Flips =\n            let [<Literal>] Horizontal = \"fa-flip-horizontal\"\n            let [<Literal>] Vertical = \"fa-flip-vertical\"\n\n        module Animations =\n            let [<Literal>] Spin = \"fa-spin\"\n            let [<Literal>] Pulse = \"fa-pulse\"\n\n        module Pull =\n            let [<Literal>] Right = \"fa-pull-right\"\n            let [<Literal>] Left = \"fa-pull-left\"\n\n        module Stack =\n\n            let [<Literal>] Container = \"fa-stack\"\n\n            module Size =\n                let [<Literal>] Fa1x = \"fa-stack-1x\"\n                let [<Literal>] Fa2x = \"fa-stack-2x\"\n\n    type ISize =\n        | FaExtraSmall\n        | FaSmall\n        | FaLarge\n        | Fa2x\n        | Fa3x\n        | Fa4x\n        | Fa5x\n        | Fa6x\n        | Fa7x\n        | Fa8x\n        | Fa9x\n        | Fa10\n\n    type IconOption =\n        | Size of ISize\n        | Border\n        | PullLeft\n        | PullRight\n        | Inverse\n        | Rotate90\n        | Rotate180\n        | Rotate270\n        | FlipHorizontal\n        | FlipVertical\n        | IsLi\n        | Icon of string\n        | Spin\n        | Pulse\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | FixedWidth\n        | Stack1x\n        | Stack2x\n\n    let internal ofSize (size : ISize) =\n        match size with\n        | FaExtraSmall -> Classes.Size.FaExtraSmall\n        | FaSmall -> Classes.Size.FaSmall\n        | FaLarge -> Classes.Size.FaLarge\n        | Fa2x -> Classes.Size.Fa2x\n        | Fa3x -> Classes.Size.Fa3x\n        | Fa4x -> Classes.Size.Fa4x\n        | Fa5x -> Classes.Size.Fa5x\n        | Fa6x -> Classes.Size.Fa6x\n        | Fa7x -> Classes.Size.Fa7x\n        | Fa8x -> Classes.Size.Fa8x\n        | Fa9x -> Classes.Size.Fa9x\n        | Fa10 -> Classes.Size.Fa10\n\n    type IconOptions =\n        { Icon : string option\n          Size : string option\n          Border : string option\n          Pull : string option\n          HaveSpin : bool\n          HavePulse : bool\n          Rotation : string option\n          Flip : string option\n          IsInverse : bool\n          Props : IHTMLProp list\n          FixedWidth : bool\n          IsLi : bool\n          StackSize : string option\n          CustomClass : string option }\n\n        static member Empty =\n            { Icon = None\n              Size = None\n              Border = None\n              Pull = None\n              HaveSpin = false\n              HavePulse = false\n              Rotation = None\n              Flip = None\n              IsInverse = false\n              Props = [ ]\n              FixedWidth = false\n              IsLi = false\n              StackSize = None\n              CustomClass = None }\n\n    let toIconOptions (faOptions: IconOption list) =\n        let parseOptions (result: IconOptions) (option: IconOption) =\n            match option with\n            | Size s ->\n                { result with Size = ofSize s |> Some }\n            | Border ->\n                { result with Border = Some Classes.Style.Border }\n            | PullLeft ->\n                { result with Pull = Some Classes.Pull.Left }\n            | PullRight ->\n                { result with Pull = Some Classes.Pull.Right }\n            | Inverse ->\n                { result with IsInverse = true }\n            | Icon faIcon ->\n                { result with Icon = faIcon |> Some }\n            | Rotate90 ->\n                { result with Rotation = Classes.Rotations.Rotate90 |> Some }\n            | Rotate180 ->\n                { result with Rotation = Classes.Rotations.Rotate180 |> Some }\n            | Rotate270 ->\n                { result with Rotation = Classes.Rotations.Rotate270 |> Some }\n            | FlipHorizontal ->\n                { result with Rotation = Classes.Flips.Horizontal |> Some }\n            | FlipVertical ->\n                { result with Rotation = Classes.Flips.Vertical |> Some }\n            | Spin ->\n                { result with HaveSpin = true }\n            | Pulse ->\n                { result with HavePulse = true }\n            | Props props ->\n                { result with Props = props }\n            | FixedWidth ->\n                { result with FixedWidth = true }\n            | IsLi ->\n                { result with IsLi = true }\n            | CustomClass customClass ->\n                { result with CustomClass = Some customClass }\n            | Stack1x ->\n                { result with StackSize = Some Classes.Stack.Size.Fa1x }\n            | Stack2x ->\n                { result with StackSize = Some Classes.Stack.Size.Fa2x }\n\n        faOptions |> List.fold parseOptions IconOptions.Empty\n\n    /// Logic used to display one icon alone or as one item in an unordered list:\n    let internal displayIcon baseElement baseClass (opts: IconOptions) children  =\n        let classes =\n            Helpers.classes baseClass\n                [ opts.Icon\n                  opts.Size\n                  opts.Border\n                  opts.Pull\n                  opts.Rotation\n                  opts.Flip\n                  opts.CustomClass\n                  opts.StackSize ]\n                [ Classes.Style.FixedWidth, opts.FixedWidth\n                  Classes.Style.IsLi, opts.IsLi\n                  Classes.Animations.Pulse, opts.HavePulse\n                  Classes.Animations.Spin, opts.HaveSpin\n                  Classes.Style.Inverse, opts.IsInverse ]\n\n        baseElement (classes::opts.Props)\n          children\n\n    let ul props children =\n        ul [ ClassName \"fa-ul\" ]\n            children\n\n    let ol props children =\n        ol [ ClassName \"fa-ul\" ]\n            children\n\n    let i (faOptions: IconOption list) children =\n        let opts = toIconOptions faOptions\n        displayIcon i \"\" opts children\n\n    let span (faOptions: IconOption list) children =\n        let opts = toIconOptions faOptions\n        displayIcon span \"\" opts children\n\n    module Stack =\n        type Option =\n            | Size of ISize\n            | CustomClass of string\n            | Props of IHTMLProp list\n\n        type internal Options =\n            { Size : string option\n              Props : IHTMLProp list\n              CustomClass : string option }\n\n            static member Empty =\n                { Size = None\n                  Props = [ ]\n                  CustomClass = None }\n\n\n    let stack options children =\n        let parseOption (result : Stack.Options) opt =\n            match opt with\n            | Stack.Size size ->\n                { result with Size = ofSize size |> Some }\n            | Stack.CustomClass customClass ->\n                { result with CustomClass = Some customClass }\n            | Stack.Props props ->\n                { result with Props = props }\n\n        let opts = options |> List.fold parseOption Stack.Options.Empty\n        let classes = Helpers.classes\n                        Classes.Stack.Container\n                        ( opts.Size\n                            :: opts.CustomClass\n                            :: [] )\n                        [ ]\n\n        Fable.React.Standard.span (classes::opts.Props)\n            children\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Icon =\n\n    type Option =\n        // Sizes\n        | Size of ISize\n        /// Add `is-left` class\n        | [<CompiledName(\"is-left\")>] IsLeft\n        /// Add `is-right` class\n        | [<CompiledName(\"is-right\")>] IsRight\n        // Extra\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <span class=\"icon\"></span>\n    let icon options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            // Sizes\n            | Size size -> ofSize size |> result.AddClass\n            // Position\n            | IsLeft\n            | IsRight -> result.AddCaseName option\n            // Extra\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"icon\").ToReactElement(span, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Input =\n\n    module Classes =\n        let [<Literal>] Container = \"input\"\n        module State =\n            let [<Literal>] IsFocused = \"is-focused\"\n            let [<Literal>] IsActive = \"is-active\"\n            let [<Literal>] IsHovered = \"is-hovered\"\n            let [<Literal>] IsLoading = \"is-loading\"\n            let [<Literal>] IsStatic = \"is-static\"\n        module Styles =\n            let [<Literal>] IsRounded = \"is-rounded\"\n        module Size =\n            let [<Literal>] IsSmall = \"is-small\"\n            let [<Literal>] IsMedium = \"is-medium\"\n            let [<Literal>] IsLarge = \"is-large\"\n            let [<Literal>] IsFullwidth = \"is-fullwidth\"\n            let [<Literal>] IsInline = \"is-inline\"\n\n    type IInputType =\n        | Text\n        | Password\n        | DatetimeLocal\n        | Date\n        | Month\n        | Time\n        | Week\n        | Number\n        | Email\n        | Url\n        | Search\n        | Tel\n        | ColorType\n\n    type Option =\n        | Size of ISize\n        /// Set `Type` HTMLAttr\n        /// Don't use if you used one of the helpers like: `Input.password`\n        | Type of IInputType\n        | Color of IColor\n        /// Set `Id` HTMLAttr\n        | Id of string\n        /// Add `disabled` HTMLAttr if true\n        | Disabled of bool\n        /// Set `IsReadOnly` HTMLAttr\n        | IsReadOnly of bool\n        /// Add `is-static` class if true\n        | [<CompiledName(\"is-static\")>] IsStatic of bool\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        /// Set `Value` HTMLAttr\n        | Value of string\n        | Key of string\n        /// Set `DefaultValue` HTMLAttr\n        | DefaultValue of string\n        /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n        | ValueOrDefault of string\n        /// Set `Placeholder` HTMLAttr\n        | Placeholder of string\n        | OnChange of (Event -> unit)\n        | Ref of (Element->unit)\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    let private ofType (typ : IInputType) =\n        match typ with\n        | Text -> \"text\"\n        | Password -> \"password\"\n        | DatetimeLocal -> \"datetime-local\"\n        | Date -> \"date\"\n        | Month -> \"month\"\n        | Time -> \"time\"\n        | Week -> \"week\"\n        | Number -> \"number\"\n        | Email -> \"email\"\n        | Url -> \"url\"\n        | Search -> \"search\"\n        | Tel -> \"tel\"\n        | IInputType.ColorType -> \"color\"\n\n    open Fable.Core.JsInterop\n\n    /// Generate <input class=\"input\" />\n    let input (options : Option list) =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsStatic state -> if state then result.AddCaseName option else result\n            | IsRounded -> result.AddCaseName option\n            | Size size -> ofSize size |> result.AddClass\n            | Color color -> ofColor color |> result.AddClass\n            | Type type' -> Props.Type (ofType type') |> result.AddProp\n            | Id id -> Props.Id id |> result.AddProp\n            | Disabled disabled -> Props.Disabled disabled |> result.AddProp\n            | IsReadOnly state -> Props.ReadOnly state |> result.AddProp\n            | Value value -> Props.Value value |> result.AddProp\n            | DefaultValue defaultValue -> Props.DefaultValue defaultValue |> result.AddProp\n            | ValueOrDefault valueOrDefault ->\n                Props.Ref <| (fun e ->\n                    if e |> isNull |> not\n                        && !!e?value <> valueOrDefault then\n                        e?value <- valueOrDefault\n                ) |> result.AddProp\n            | Placeholder placeholder -> Props.Placeholder placeholder |> result.AddProp\n            | OnChange cb -> Props.OnChange cb |> result.AddProp\n            | Ref ref -> Props.Ref ref |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n            | Key k -> Props.Prop.Key k |> result.AddProp\n\n        GenericOptions.Parse(options, parseOptions, \"input\").ToReactElement(input)\n\n    /// Generate <input type=\"text\" class=\"input\" />\n    let inline text options = input (Type Text :: options)\n    /// Generate <input type=\"password\" class=\"input\" />\n    let inline password options = input (Type Password :: options)\n    /// Generate <input type=\"datetime-local\" class=\"input\" />\n    let inline datetimeLocal options = input (Type DatetimeLocal :: options)\n    /// Generate <input type=\"date\" class=\"input\" />\n    let inline date options = input (Type Date :: options)\n    /// Generate <input type=\"month\" class=\"input\" />\n    let inline month options = input (Type Month :: options)\n    /// Generate <input type=\"time\" class=\"input\" />\n    let inline time options = input (Type Time :: options)\n    /// Generate <input type=\"week\" class=\"input\" />\n    let inline week options = input (Type Week :: options)\n    /// Generate <input type=\"number\" class=\"input\" />\n    let inline number options = input (Type Number :: options)\n    /// Generate <input type=\"email\" class=\"input\" />\n    let inline email options = input (Type Email :: options)\n    /// Generate <input type=\"url\" class=\"input\" />\n    let inline url options = input (Type Url :: options)\n    /// Generate <input type=\"search\" class=\"input\" />\n    let inline search options = input (Type Search :: options)\n    /// Generate <input type=\"tel\" class=\"input\" />\n    let inline tel options = input (Type Tel :: options)\n    /// Generate <input type=\"color\" class=\"input\" />\n    let inline color options = input (Type IInputType.ColorType :: options)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Columns =\n\n    type ISize =\n        | [<CompiledName(\"is-1\")>] Is1\n        | [<CompiledName(\"is-2\")>] Is2\n        | [<CompiledName(\"is-3\")>] Is3\n        | [<CompiledName(\"is-4\")>] Is4\n        | [<CompiledName(\"is-5\")>] Is5\n        | [<CompiledName(\"is-6\")>] Is6\n        | [<CompiledName(\"is-7\")>] Is7\n        | [<CompiledName(\"is-8\")>] Is8\n\n        static member ToString (x : ISize)=\n            Reflection.getCaseName x\n\n    let inline private gapSizeGeneric (screen : Screen) (size : ISize) =\n        ISize.ToString size + Screen.ToString screen\n\n    let inline private gapSizeOnly (screen : Screen) (size : ISize) =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            ISize.ToString size + Screen.ToString screen + \"-only\"\n        | x ->\n            let msg = sprintf \"Screen `%s` does not support `is-%s-%s-only`.\" (Screen.ToString x) (ISize.ToString size) (Screen.ToString x)\n            Fable.Core.JS.console.warn(msg)\n            \"\"\n\n    type Option =\n        /// Add `is-centered` class\n        | [<CompiledName(\"is-centered\")>] IsCentered\n        /// Add `is-vcentered` class\n        | [<CompiledName(\"is-vcentered\")>] IsVCentered\n        /// Add `is-multiline` class\n        | [<CompiledName(\"is-multiline\")>] IsMultiline\n        /// Add `is-gapless` class\n        | [<CompiledName(\"is-gapless\")>] IsGapless\n        /// Add `is-grid` class\n        | [<CompiledName(\"is-grid\")>] IsGrid\n        /// Add `is-mobile` class\n        | [<CompiledName(\"is-mobile\")>] IsMobile\n        /// Add `is-desktop` class\n        | [<CompiledName(\"is-desktop\")>] IsDesktop\n        /// Configure the gap size. You can configure the display and gap size\n        /// Example: Columns.IsGap (Columns.Desktop, Columns.Is6)\n        /// Becomes: `is-6-desktop`\n        | IsGap of Screen * ISize\n        /// Configure the gap size. You can configure the display and gap size\n        /// Example: Columns.IsGapOnly (Columns.Tablet, Columns.Is6)\n        /// Becomes: `is-6-tablet-only`\n        | IsGapOnly of Screen * ISize\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"columns\"></div>\n    let columns (options: Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsCentered\n            | IsVCentered\n            | IsMultiline\n            | IsGapless\n            | IsGrid\n            | IsMobile\n            | IsDesktop -> result.AddCaseName option\n            | IsGap (screen, size) ->\n                if not (List.contains \"is-variable\" result.Classes) then\n                    result.AddClass(\"is-variable\").AddClass(gapSizeGeneric screen size)\n                else\n                    result.AddClass(gapSizeGeneric screen size)\n            | IsGapOnly (screen, size) ->\n                if not (List.contains \"is-variable\" result.Classes) then\n                    result.AddClass(\"is-variable\").AddClass(gapSizeOnly screen size)\n                else\n                    result.AddClass(gapSizeOnly screen size)\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"columns\").ToReactElement(div, children)\n","(**\nProgram\n---------\nCore abstractions for creating and running the dispatch loop.\n\n*)\n\nnamespace Elmish\n\n\n/// Program type captures various aspects of program behavior\ntype Program<'arg, 'model, 'msg, 'view> = private {\n    init : 'arg -> 'model * Cmd<'msg>\n    update : 'msg -> 'model -> 'model * Cmd<'msg>\n    subscribe : 'model -> Cmd<'msg>\n    view : 'model -> Dispatch<'msg> -> 'view\n    setState : 'model -> Dispatch<'msg> -> unit\n    onError : (string*exn) -> unit\n    syncDispatch: Dispatch<'msg> -> Dispatch<'msg>\n}\n\n/// Program module - functions to manipulate program instances\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Program =\n    /// Typical program, new commands are produced by `init` and `update` along with the new state.\n    let mkProgram \n        (init : 'arg -> 'model * Cmd<'msg>) \n        (update : 'msg -> 'model -> 'model * Cmd<'msg>)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init\n          update = update\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Simple program that produces only new state with `init` and `update`.\n    let mkSimple \n        (init : 'arg -> 'model) \n        (update : 'msg -> 'model -> 'model)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init >> fun state -> state,Cmd.none\n          update = fun msg -> update msg >> fun state -> state,Cmd.none\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Subscribe to external source of events.\n    /// The subscription is called once - with the initial model, but can dispatch new messages at any time.\n    let withSubscription (subscribe : 'model -> Cmd<'msg>) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let sub model =\n            Cmd.batch [ program.subscribe model\n                        subscribe model ]\n        { program with subscribe = sub }\n\n    /// Trace all the updates to the console\n    let withConsoleTrace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let traceInit (arg:'arg) =\n            let initModel,cmd = program.init arg\n            Log.toConsole (\"Initial state:\", initModel)\n            initModel,cmd\n\n        let traceUpdate msg model =\n            Log.toConsole (\"New message:\", msg)\n            let newModel,cmd = program.update msg model\n            Log.toConsole (\"Updated state:\", newModel)\n            newModel,cmd\n\n        { program with\n            init = traceInit \n            update = traceUpdate }\n\n    /// Trace all the messages as they update the model\n    let withTrace trace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let update msg model =\n            let state,cmd = program.update msg model\n            trace msg state\n            state,cmd\n        { program\n            with update = update }\n\n    /// Handle dispatch loop exceptions\n    let withErrorHandler onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = onError }\n\n    /// For library authors only: map existing error handler and return new `Program` \n    let mapErrorHandler map (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = map program.onError }\n\n    /// For library authors only: get the current error handler \n    let onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        program.onError\n\n    /// For library authors only: function to render the view with the latest state \n    let withSetState (setState:'model -> Dispatch<'msg> -> unit)\n                     (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with setState = setState }\n\n    /// For library authors only: return the function to render the state \n    let setState (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.setState\n\n    /// For library authors only: return the view function \n    let view (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.view\n\n    /// For library authors only: function to synchronize the dispatch function\n    let withSyncDispatch (syncDispatch:Dispatch<'msg> -> Dispatch<'msg>)\n                         (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with syncDispatch = syncDispatch }\n\n    /// For library authors only: map the program type\n    let map mapInit mapUpdate mapView mapSetState mapSubscribe\n            (program: Program<'arg, 'model, 'msg, 'view>) =\n        { init = mapInit program.init\n          update = mapUpdate program.update\n          view = mapView program.view\n          setState = mapSetState program.setState\n          subscribe = mapSubscribe program.subscribe\n          onError = program.onError\n          syncDispatch = id }\n\n    /// Start the program loop.\n    /// arg: argument to pass to the init() function.\n    /// program: program created with 'mkSimple' or 'mkProgram'.\n    let runWith (arg: 'arg) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let (model,cmd) = program.init arg\n        let rb = RingBuffer 10\n        let mutable reentered = false\n        let mutable state = model        \n        let rec dispatch msg = \n            if reentered then\n                rb.Push msg\n            else\n                reentered <- true\n                let mutable nextMsg = Some msg\n                while Option.isSome nextMsg do\n                    let msg = nextMsg.Value\n                    try\n                        let (model',cmd') = program.update msg state\n                        program.setState model' syncDispatch\n                        cmd' |> Cmd.exec syncDispatch\n                        state <- model'\n                    with ex ->\n                        program.onError (sprintf \"Unable to process the message: %A\" msg, ex)\n                    nextMsg <- rb.Pop()\n                reentered <- false\n        and syncDispatch = program.syncDispatch dispatch            \n\n        program.setState model syncDispatch\n        let sub = \n            try \n                program.subscribe model \n            with ex ->\n                program.onError (\"Unable to subscribe:\", ex)\n                Cmd.none\n        sub @ cmd |> Cmd.exec syncDispatch\n\n    /// Start the dispatch loop with `unit` for the init() function.\n    let run (program: Program<unit, 'model, 'msg, 'view>) = runWith () program\n","namespace Elmish.React\n\nopen Fable.React\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","namespace Elmish.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used instead of `DefaultValue` and `Value` props to override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.React\n        open Browser\n        open Elmish\n\n        let withReactBatchedUsing lazyView2With placeholderId (program:Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                        document.getElementById placeholderId\n                    )))\n\n            program\n            |> Program.withSetState setState\n\n        let withReactSynchronousUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// Uses `requestAnimationFrame` to batch updates to prevent drops in frame rate.\n    /// NOTE: This may have unexpected effects in React controlled inputs, see https://github.com/elmish/react/issues/12\n    let withReactBatched placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// New renders are triggered immediately after an update.\n    let withReactSynchronous placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactBatched\")>]\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactSynchronous\")>]\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId using `React.hydrate`.\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n","module App\n\nopen Fable.Core\nopen Fable.Core.JsInterop\n\nopen Browser\n\nopen Elmish\nopen Elmish.React\nopen Fable.React\nopen Fable.React.Props\nopen Elmish.Debug\nopen Elmish.HMR\nopen Thoth.Json\n\nopen Fulma\nopen Fable.FontAwesome\n\n//Fable 2 transition\nlet inline toJson x = Encode.Auto.toString(4, x)\nlet inline ofJson<'T> json = Decode.Auto.unsafeFromString<'T>(json)\n\n//Alert for long-running process\n[<Emit(\"(new Audio('data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=')).play();\")>]\nlet beep () = jsNative\n\n// Todo: tests\nlet randomFeature() = [1;2;3]\n\n// Domain\n// ---------------------------------------\n\n[<StringEnum>]\ntype Service = \n  | SRL\n  | Coreference\n  | DependencyParser\n  | SentenceSplitter\n  | CleanText\n  | Acronym\n  | Reverse\n  ///Composite service\n  | NLP \n  | AllCloze\n  | SelectCloze\n  | Triples\n  | Lemma //assumes UPOS noun\n  | Inflection //assumes Penn NNS\n  | ElaboratedFeedback\n  | CachedElaboratedFeedback\n  | DefinitionalFeedback\n  | Paraphrase\n  | ResolveTextReferents\n  | GenerateQuestions\n  | AnswerQuestion\n  | Wikify\n  | WikiAlign\n  | WikiExtracts\n  | InitializeCachedElaboratedFeedback\n  | InitializeDefinitionalFeedback\n  | InitializeSpellingCorrector\n  | InitializeParaphraseCache\n  | TutorialDialogue\n  | ElaboratedTutorialDialogueState\n  | Test\n\ntype Model = \n  {\n    ///Input string to test the service\n    InputText : string\n    ///Type of service we will call\n    Service : Service\n    ///Status of service call; typically standard HTTP code\n    Status : string\n    ///Result from the service called\n    JsonResult : string\n    ///Json loaded from file, e.g. a parse\n    JsonInput : string option\n    ///Desired # sentences for external API\n    DesiredSentences : string\n    ///Desired # items for external API\n    DesiredItems : string\n    //To calculate word difficulty we need to return additional data from the GetSelectCloze API call\n    // Trace : bool\n  }\n\ntype Msg =\n    | UpdateText of string\n    | CallService\n    | ServiceResult of string * string\n    | ServiceChange of Service\n    | DownloadJson\n    | JsonToInput\n    | LoadJsonFile of Browser.Types.FileList\n    | SetJson of string\n    | ClearJson\n    | UpdateSentences of string\n    | UpdateItems of string\n    // | ErrorResult of int * string\n        \nlet init () : Model * Cmd<Msg> =\n  ( { \n      InputText = \"GitHub makes it easy to scale back on context switching.\"\n      Service = SelectCloze\n      Status = \"\"\n      JsonResult = \"\"\n      JsonInput = None\n      DesiredSentences = \"\"\n      DesiredItems = \"\"\n    }, [] )\n\n\n// Update\n// ---------------------------------------\nlet ParseIntOption s =\n   match System.Int32.TryParse(s) with\n   | (true,int) -> Some(int)\n   | _ -> None\n\n/// Convert a Thoth.Fetch Result into a wrapped string tuple: (status,payload)\nlet inline makeServiceResult ( result : Result<'t,'e> ) =\n  match result with\n  | Ok(r:'t) -> ServiceResult( \"ok\", Encode.Auto.toString(4, r ) )\n  | Error(e) -> ServiceResult( \"error\", e.ToString() ) //could unpack various error types if desired https://thoth-org.github.io/Thoth.Fetch/\n\nlet update msg (model:Model) =\n  match msg with\n  | UpdateText(input) ->\n    ( {model with InputText=input}, [])\n  | CallService ->\n\n    /// Assumes all services accept a single input; additional arguments must be curried before calling\n    let makeCmd serviceCall input resultWrapper = \n      Cmd.OfPromise.perform serviceCall input ( fun result -> result |> resultWrapper ) \n\n    /// Because different services emit different types, but all must resolve to the same type here, uses functions above to simplify construction\n    let cmd =\n      match model.Service with\n      | SRL -> makeCmd AllenNLP.GetSRL model.InputText makeServiceResult\n      | DependencyParser -> makeCmd AllenNLP.GetDependencyParse model.InputText makeServiceResult\n      | Coreference -> makeCmd AllenNLP.GetCoreference model.InputText makeServiceResult\n      | SentenceSplitter -> makeCmd AllenNLP.GetSentences model.InputText makeServiceResult\n      | CleanText -> makeCmd (AllenNLP.CleanText >> AllenNLP.Promisify) model.InputText makeServiceResult\n      | NLP -> makeCmd (AllenNLP.GetNLP model.JsonInput) model.InputText makeServiceResult\n      | Acronym -> makeCmd (ClozeAPI.GetAcronymMap >> AllenNLP.Promisify) model.InputText makeServiceResult\n      | Reverse -> makeCmd (ClozeAPI.DoSimpleComputation >> AllenNLP.Promisify) model.InputText makeServiceResult\n      // Note we pass no chunks; input is used as a singleton chunk instead\n      | AllCloze -> makeCmd (ClozeAPI.GetAllCloze model.JsonInput None) model.InputText makeServiceResult\n      // Note we pass no chunks; input is used as a singleton chunk instead; \"true\" provides trace information\n      | SelectCloze -> makeCmd (ClozeAPI.GetSelectCloze model.JsonInput (ParseIntOption <| model.DesiredSentences) (ParseIntOption <| model.DesiredItems) true None ) model.InputText makeServiceResult\n      // Note we pass no chunks; input is used as a singleton chunk instead\n      | Triples -> makeCmd (Triples.GetTriples model.JsonInput None) model.InputText makeServiceResult  \n      | DefinitionalFeedback -> makeCmd (DefinitionalFeedback.HarnessGenerateFeedback) model.InputText makeServiceResult\n      | ElaboratedFeedback -> makeCmd (ElaboratedFeedback.HarnessGetElaboratedFeedback) model.InputText makeServiceResult\n      | CachedElaboratedFeedback -> makeCmd (CachedElaboratedFeedback.HarnessGenerateFeedback) model.InputText makeServiceResult\n      | Lemma -> makeCmd LemmInflect.testGetLemma model.InputText makeServiceResult\n      | Inflection -> makeCmd LemmInflect.testGetInflection model.InputText makeServiceResult\n      | Paraphrase -> makeCmd Paraphrase.getParaphrases model.InputText makeServiceResult\n      | ResolveTextReferents -> makeCmd AllenNLP.ResolveTextReferents model.InputText makeServiceResult\n      | GenerateQuestions -> makeCmd QuestionGenerator.HarnessGetQuestions model.InputText makeServiceResult\n      | AnswerQuestion -> makeCmd LongformQA.testAnswer model.InputText makeServiceResult\n      | Wikify -> makeCmd Wikifier.GetWikification model.InputText makeServiceResult\n      | WikiAlign -> makeCmd Wikifier.HarnessWikiAlign model.InputText makeServiceResult\n      | WikiExtracts -> makeCmd Wikifier.HarnessWikiExtracts model.InputText makeServiceResult\n      | InitializeCachedElaboratedFeedback -> makeCmd CachedElaboratedFeedback.Initialize model.JsonInput.Value makeServiceResult\n      | InitializeDefinitionalFeedback -> makeCmd DefinitionalFeedback.Initialize model.JsonInput.Value makeServiceResult\n      | InitializeSpellingCorrector -> makeCmd SpellingCorrector.Initialize model.JsonInput.Value makeServiceResult\n      | InitializeParaphraseCache -> makeCmd Paraphrase.InitializeParaphraseCache model.JsonInput.Value makeServiceResult\n      | TutorialDialogue -> makeCmd (TutorialDialogue.HarnessGetDialogue) model.InputText makeServiceResult\n      | ElaboratedTutorialDialogueState -> makeCmd (TutorialDialogue.HarnessGetElaboratedDialogueState) model.InputText makeServiceResult\n      // | TutorialDialogue -> makeCmd TutorialDialogue.GetDialogue (model.InputText |> ofJson<TutorialDialogue.DialogueState> ) makeServiceResult\n      | Test -> makeCmd (AllenNLP.resolveReferents >> AllenNLP.Promisify) (model.JsonInput.Value |> ofJson<AllenNLP.DocumentAnnotation> ) makeServiceResult\n\n    //we use the status code from the server instead of a separate error handler `Cmd.OfPromise.either`\n    ( \n      {model with Status=\"\"}, cmd\n    )\n  | ServiceResult(code,json)->\n\n    //alert beep\n    beep();beep();beep()\n\n    //for debug: chrome is freezing up, so trying to dump non-essential fields from the model\n    // ( {model with InputText=\"\"; JsonInput=None; JsonResult=json; Status=code.ToString()}, [])\n    ( {model with JsonResult=json; Status=code.ToString()}, [])\n  | ServiceChange(service) ->\n    //Some services require json in the Input box\n    let inputText = \n      match service with\n      // For service that requires more than a string as input, we define a json object for the parameters and \n      // prepopulate the input box with exemplar json for the user to modify\n      | TutorialDialogue -> TutorialDialogue.DialogueState.InitializeTest() |> toJson\n      | GenerateQuestions -> QuestionGenerator.InitializeTest()\n      | ElaboratedTutorialDialogueState -> TutorialDialogue.HarnessElaboratedDialogueState.InitializeTest() |> toJson\n      | ElaboratedFeedback -> ElaboratedFeedback.HarnessElaboratedFeedbackRequest.InitializeTest() |> toJson\n      | CachedElaboratedFeedback -> CachedElaboratedFeedback.HarnessFeedbackRequest.InitializeTest() |> toJson\n      | DefinitionalFeedback -> DefinitionalFeedback.HarnessFeedbackRequest.InitializeTest() |> toJson\n      | WikiAlign | WikiExtracts -> Wikifier.HarnessWikifyAlignRequest.InitializeTest() |> toJson\n      | _ -> \"\"\n    ( {model with Service=service; Status=\"\"; InputText = inputText}, [])\n  | JsonToInput ->\n    ( {model with InputText=model.JsonResult; JsonResult=\"\"}, [])\n  | DownloadJson ->\n      let a = document.createElement(\"a\") :?> Browser.Types.HTMLLinkElement\n      //need blobs for larger sizes\n      let blob = Blob.Create( [| model.JsonResult |], jsOptions<Types.BlobPropertyBag>( fun o -> o.``type`` <- \"data:text/plain;charset=utf-8\") )\n      a.href <- URL.createObjectURL( blob );\n      //a.href <- \"data:text/plain;charset=utf-8,\" + JS.encodeURIComponent( model.JsonResult )\n      let filename = System.DateTime.Now.ToString(\"MM-dd-yy-HH-mm\", System.Globalization.CultureInfo.InvariantCulture) + \".json\"\n      a.setAttribute(\"download\", filename );\n      a.click()\n      ( model,[] )\n  | LoadJsonFile(fileList) -> \n      let fileReadCommand dispatch =\n        let fileReader = Browser.Dom.FileReader.Create ()\n        fileReader.onload <- fun _ -> fileReader.result |> unbox<string> |> SetJson |> dispatch\n        fileReader.readAsText fileList.[0]\n      ( model, [fileReadCommand] )\n  | SetJson(json) ->\n    ( { model with JsonInput = Some(json)}, [])\n  | ClearJson ->\n    ( { model with JsonResult = \"\"; JsonInput = None}, [] )\n  | UpdateSentences(input)->\n    ( { model with DesiredSentences=input}, [] )\n  | UpdateItems(input)->\n    ( { model with DesiredItems=input}, [] )\n\n// View\n// ---------------------------------------\nlet simpleButton txt action dispatch =\n  div \n    [ ClassName \"column is-narrow\" ]\n    [ a\n        [ ClassName \"button\"\n          OnClick (fun _ -> action |> dispatch) ]\n    [ str txt ] ]\n\nlet view model dispatch =\n  Section.section [] [\n    //spinner defined in sass\n    //div [ ClassName \"loading\"; Hidden ( model.Mode = Mode.Coding || model.Mode = Mode.TextEdit )  ] []\n    Container.container [ Container.IsFluid ] [\n      Heading.h2 [ ] [ str \"MoFaCTS Automated Authoring\"]\n      Content.content [ ] [\n        p [] [ str \"This is a simple app for developing automated authoring components for MoFaCTS. Click on the cat in the corner for more information.\" ]\n      ]\n      //editing and uploading data\n      Fulma.Columns.columns [] [        \n        Fulma.Column.column [ Column.Width  (Screen.All, Column.IsOneThird )  ] [\n          Label.label [ ] [ str \"Input\" ]\n          textarea [\n            ClassName \"input\"\n            Value model.InputText\n            Size 100.0\n            Style [\n                Width \"100%\"\n                Height \"150px\"\n            ] \n            OnChange (fun ev ->  !!ev.target?value |> UpdateText|> dispatch )\n          ] []\n\n          Field.div [] [\n            Label.label [ ] [ str \"Service\" ]\n            Control.div [ ] [ \n              Select.select [  ] [ \n                select [ DefaultValue model.Service ; OnChange (fun ev  -> ServiceChange( !!ev.Value ) |> dispatch) ] [ \n                  option [ Value Service.SelectCloze ] [ str \"Get Select Cloze\" ]\n                  option [ Value Service.AllCloze ] [ str \"Get All Cloze\" ]\n                  option [ Value Service.TutorialDialogue ] [ str \"Tutorial Dialogue\" ]\n                  option [ Value Service.ElaboratedTutorialDialogueState ] [ str \"Initialize Elaborated Tutorial Dialogue State\" ]\n                  option [ Value Service.ElaboratedFeedback ] [ str \"Elaborated Feedback\" ]\n                  option [ Value Service.CachedElaboratedFeedback ] [ str \"Cached Elaborated Feedback\" ]\n                  option [ Value Service.DefinitionalFeedback ] [ str \"Definitional Feedback\" ]\n                  option [ Value Service.InitializeCachedElaboratedFeedback ] [ str \"Initialize Cached Elaborated Feedback\" ]\n                  option [ Value Service.InitializeDefinitionalFeedback ] [ str \"Initialize Definitional Feedback\" ]\n                  option [ Value Service.InitializeSpellingCorrector ] [ str \"Initialize Spelling Corrector\" ]\n                  option [ Value Service.InitializeParaphraseCache ] [ str \"Initialize Paraphrase\" ]\n                  option [ Value Service.Triples ] [ str \"Triples\" ]\n                  option [ Value Service.NLP ] [ str \"Composite NLP\" ]\n                  option [ Value Service.Lemma ] [ str \"Lemma (assumes noun)\" ]\n                  option [ Value Service.Inflection ] [ str \"Inflection (assumes NNS)\" ]\n                  option [ Value Service.Paraphrase ] [ str \"Paraphrase\" ]\n                  option [ Value Service.ResolveTextReferents ] [ str \"Resolve Coreference\" ]\n                  option [ Value Service.AnswerQuestion ] [ str \"Answer Question\" ]\n                  option [ Value Service.GenerateQuestions ] [ str \"Generate Questions\" ]\n                  option [ Value Service.Wikify ] [ str \"Wikify\" ]\n                  option [ Value Service.WikiAlign ] [ str \"Wikify Align\" ]\n                  option [ Value Service.WikiExtracts ] [ str \"Wiki Extracts\" ]\n                  option [ Value Service.SRL ] [ str \"SRL Parse\" ]\n                  option [ Value Service.DependencyParser ] [ str \"Dependency Parse\" ]\n                  option [ Value Service.Coreference ] [ str \"Coreference Annotation\" ] \n                  option [ Value Service.SentenceSplitter ] [ str \"Sentence Splitter\" ] \n                  option [ Value Service.CleanText  ] [ str \"Clean Text\" ] \n                  option [ Value Service.Acronym  ] [ str \"Acronym\" ] \n                  option [ Value Service.Reverse  ] [ str \"Reverse\" ] \n                  option [ Value Service.Test  ] [ str \"Test\" ] \n                ] \n              ]\n            ]\n          ]\n          div [ Hidden ( \n                        model.Service <> Service.NLP && \n                        model.Service <> Service.SelectCloze && \n                        model.Service <> Service.AllCloze && \n                        model.Service <> Service.ElaboratedFeedback &&\n                        model.Service <> Service.DefinitionalFeedback &&\n                        model.Service <> Service.InitializeCachedElaboratedFeedback &&\n                        model.Service <> Service.InitializeDefinitionalFeedback &&\n                        model.Service <> Service.InitializeSpellingCorrector &&\n                        model.Service <> Service.InitializeParaphraseCache &&\n                        model.Service <> Service.Test\n                        )] [\n            Label.label [ ] [ str \"Optional JSON (e.g. parse)\" ]\n            Fulma.File.file [ \n                Fulma.File.HasName \n                //Key allows us to reload a file after clearing it\n                Fulma.File.Props [ Key ( if model.JsonInput.IsSome then \"loaded\" else \"empty\"); OnChange (fun ev ->  LoadJsonFile !!ev.target?files  |> dispatch ) ] \n                ] [ \n                Fulma.File.label [ ] [ \n                  Fulma.File.input [ Props [ Accept \".json\" ]]\n                  Fulma.File.cta [ ] [ \n                    Fulma.File.icon [ ] [ \n                      Icon.icon [ ] [ \n                        Fa.i [ Fa.Solid.Upload ] []\n                        ]\n                    ]\n                    Fulma.File.label [ ] [ str \"Load JSON\" ] ]\n                  Fulma.File.name [ ] [ str (match model.JsonInput with | Some(_) -> \"Status: Loaded\" | None -> \"Status: Empty\" ) ] \n                  Button.button [ \n                    Button.Color IsPrimary\n                    Button.OnClick (fun _ -> dispatch ClearJson )\n                    ] [ str \"Clear JSON\" ]\n                ] \n              ] \n          ]\n          div [ Hidden ( model.Service <> Service.SelectCloze ) ] [\n            Label.label [ ] [ str \"Optional Desired Sentences\" ] \n            Input.text [\n                  Input.Color IsPrimary\n                  Input.IsRounded\n                  Input.Value ( model.DesiredSentences.ToString() )\n                  Input.Props [ OnChange (fun ev ->  !!ev.target?value |> UpdateSentences|> dispatch ) ]\n                ]\n            Label.label [ ] [ str \"Optional Desired Items\" ] \n            Input.text [\n                  Input.Color IsPrimary\n                  Input.IsRounded\n                  Input.Value ( model.DesiredItems.ToString() )\n                  Input.Props [ OnChange (fun ev ->  !!ev.target?value |> UpdateItems|> dispatch ) ]\n                ]\n            ]\n\n          Button.button [ \n          Button.Color IsPrimary\n          Button.OnClick (fun _ -> dispatch CallService )\n          ] [ str \"Call Service\" ]\n\n        ]\n        //Select and run service\n        // Fulma.Column.column [ Column.Width (Screen.All, Column.IsNarrow) ] [\n\n        // ]\n        // View model state and get results\n        Fulma.Column.column [ Column.Width (Screen.All, Column.IsTwoThirds) ] [\n          Label.label [ ] [ str \"Model State\" ]\n          Fulma.Columns.columns [] [     \n            Fulma.Column.column [ ] [\n              Button.button [ \n                Button.Color IsPrimary\n                Button.OnClick (fun _ -> dispatch DownloadJson )\n                ] [ str \"Download JSON\" ]\n            ]\n            Fulma.Column.column [ ] [\n              Button.button [ \n                Button.Color IsPrimary\n                Button.OnClick (fun _ -> dispatch JsonToInput )\n                ] [ str \"JSON to Input\" ]\n            ]\n            // purely to bring buttons closer together\n            Fulma.Column.column [ Column.Width (Screen.All, Column.IsTwoThirds) ] []\n          ]\n          //debuggy but also generally useful\n          pre [  Style [FontSize 10.0 ] ] [  str <| (model |> toJson).Replace(\"\\\\n\",\"\\n\").Replace(\"\\\\\\\"\",\"\\\"\") ]\n          //span [  Style [FontSize 10.0; WhiteSpace \"pre-wrap\"] ] [  str <| (model |> toJson).Replace(\"\\\\n\",\"\\n\").Replace(\"\\\\\\\"\",\"\\\"\") ]\n        ]\n      ]\n    ]  \n  ]\n\n// App\nProgram.mkProgram init update view\n#if DEBUG\n|> Program.withDebugger\n|> Program.withConsoleTrace\n//|> Program.withHMR //deprecated???\n#endif\n|> Program.withReactSynchronous \"elmish-app\" //batched makes input cursor jump to end of box\n|> Program.run\n"],"sourceRoot":""}